import {
  __commonJS,
  __toESM
} from "./chunk-DFKQJ226.js";

// node_modules/events/events.js
var require_events = __commonJS({
  "node_modules/events/events.js"(exports, module) {
    "use strict";
    var R2 = typeof Reflect === "object" ? Reflect : null;
    var ReflectApply = R2 && typeof R2.apply === "function" ? R2.apply : function ReflectApply2(target, receiver, args) {
      return Function.prototype.apply.call(target, receiver, args);
    };
    var ReflectOwnKeys;
    if (R2 && typeof R2.ownKeys === "function") {
      ReflectOwnKeys = R2.ownKeys;
    } else if (Object.getOwnPropertySymbols) {
      ReflectOwnKeys = function ReflectOwnKeys2(target) {
        return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
      };
    } else {
      ReflectOwnKeys = function ReflectOwnKeys2(target) {
        return Object.getOwnPropertyNames(target);
      };
    }
    function ProcessEmitWarning(warning) {
      if (console && console.warn)
        console.warn(warning);
    }
    var NumberIsNaN = Number.isNaN || function NumberIsNaN2(value) {
      return value !== value;
    };
    function EventEmitter() {
      EventEmitter.init.call(this);
    }
    module.exports = EventEmitter;
    module.exports.once = once;
    EventEmitter.EventEmitter = EventEmitter;
    EventEmitter.prototype._events = void 0;
    EventEmitter.prototype._eventsCount = 0;
    EventEmitter.prototype._maxListeners = void 0;
    var defaultMaxListeners = 10;
    function checkListener(listener) {
      if (typeof listener !== "function") {
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
      }
    }
    Object.defineProperty(EventEmitter, "defaultMaxListeners", {
      enumerable: true,
      get: function() {
        return defaultMaxListeners;
      },
      set: function(arg) {
        if (typeof arg !== "number" || arg < 0 || NumberIsNaN(arg)) {
          throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + ".");
        }
        defaultMaxListeners = arg;
      }
    });
    EventEmitter.init = function() {
      if (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) {
        this._events = /* @__PURE__ */ Object.create(null);
        this._eventsCount = 0;
      }
      this._maxListeners = this._maxListeners || void 0;
    };
    EventEmitter.prototype.setMaxListeners = function setMaxListeners(n2) {
      if (typeof n2 !== "number" || n2 < 0 || NumberIsNaN(n2)) {
        throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n2 + ".");
      }
      this._maxListeners = n2;
      return this;
    };
    function _getMaxListeners(that) {
      if (that._maxListeners === void 0)
        return EventEmitter.defaultMaxListeners;
      return that._maxListeners;
    }
    EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
      return _getMaxListeners(this);
    };
    EventEmitter.prototype.emit = function emit(type) {
      var args = [];
      for (var i2 = 1; i2 < arguments.length; i2++)
        args.push(arguments[i2]);
      var doError = type === "error";
      var events = this._events;
      if (events !== void 0)
        doError = doError && events.error === void 0;
      else if (!doError)
        return false;
      if (doError) {
        var er2;
        if (args.length > 0)
          er2 = args[0];
        if (er2 instanceof Error) {
          throw er2;
        }
        var err = new Error("Unhandled error." + (er2 ? " (" + er2.message + ")" : ""));
        err.context = er2;
        throw err;
      }
      var handler = events[type];
      if (handler === void 0)
        return false;
      if (typeof handler === "function") {
        ReflectApply(handler, this, args);
      } else {
        var len = handler.length;
        var listeners = arrayClone(handler, len);
        for (var i2 = 0; i2 < len; ++i2)
          ReflectApply(listeners[i2], this, args);
      }
      return true;
    };
    function _addListener(target, type, listener, prepend) {
      var m2;
      var events;
      var existing;
      checkListener(listener);
      events = target._events;
      if (events === void 0) {
        events = target._events = /* @__PURE__ */ Object.create(null);
        target._eventsCount = 0;
      } else {
        if (events.newListener !== void 0) {
          target.emit(
            "newListener",
            type,
            listener.listener ? listener.listener : listener
          );
          events = target._events;
        }
        existing = events[type];
      }
      if (existing === void 0) {
        existing = events[type] = listener;
        ++target._eventsCount;
      } else {
        if (typeof existing === "function") {
          existing = events[type] = prepend ? [listener, existing] : [existing, listener];
        } else if (prepend) {
          existing.unshift(listener);
        } else {
          existing.push(listener);
        }
        m2 = _getMaxListeners(target);
        if (m2 > 0 && existing.length > m2 && !existing.warned) {
          existing.warned = true;
          var w2 = new Error("Possible EventEmitter memory leak detected. " + existing.length + " " + String(type) + " listeners added. Use emitter.setMaxListeners() to increase limit");
          w2.name = "MaxListenersExceededWarning";
          w2.emitter = target;
          w2.type = type;
          w2.count = existing.length;
          ProcessEmitWarning(w2);
        }
      }
      return target;
    }
    EventEmitter.prototype.addListener = function addListener(type, listener) {
      return _addListener(this, type, listener, false);
    };
    EventEmitter.prototype.on = EventEmitter.prototype.addListener;
    EventEmitter.prototype.prependListener = function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };
    function onceWrapper() {
      if (!this.fired) {
        this.target.removeListener(this.type, this.wrapFn);
        this.fired = true;
        if (arguments.length === 0)
          return this.listener.call(this.target);
        return this.listener.apply(this.target, arguments);
      }
    }
    function _onceWrap(target, type, listener) {
      var state = { fired: false, wrapFn: void 0, target, type, listener };
      var wrapped = onceWrapper.bind(state);
      wrapped.listener = listener;
      state.wrapFn = wrapped;
      return wrapped;
    }
    EventEmitter.prototype.once = function once2(type, listener) {
      checkListener(listener);
      this.on(type, _onceWrap(this, type, listener));
      return this;
    };
    EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };
    EventEmitter.prototype.removeListener = function removeListener(type, listener) {
      var list, events, position, i2, originalListener;
      checkListener(listener);
      events = this._events;
      if (events === void 0)
        return this;
      list = events[type];
      if (list === void 0)
        return this;
      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = /* @__PURE__ */ Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit("removeListener", type, list.listener || listener);
        }
      } else if (typeof list !== "function") {
        position = -1;
        for (i2 = list.length - 1; i2 >= 0; i2--) {
          if (list[i2] === listener || list[i2].listener === listener) {
            originalListener = list[i2].listener;
            position = i2;
            break;
          }
        }
        if (position < 0)
          return this;
        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }
        if (list.length === 1)
          events[type] = list[0];
        if (events.removeListener !== void 0)
          this.emit("removeListener", type, originalListener || listener);
      }
      return this;
    };
    EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
    EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
      var listeners, events, i2;
      events = this._events;
      if (events === void 0)
        return this;
      if (events.removeListener === void 0) {
        if (arguments.length === 0) {
          this._events = /* @__PURE__ */ Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== void 0) {
          if (--this._eventsCount === 0)
            this._events = /* @__PURE__ */ Object.create(null);
          else
            delete events[type];
        }
        return this;
      }
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i2 = 0; i2 < keys.length; ++i2) {
          key = keys[i2];
          if (key === "removeListener")
            continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners("removeListener");
        this._events = /* @__PURE__ */ Object.create(null);
        this._eventsCount = 0;
        return this;
      }
      listeners = events[type];
      if (typeof listeners === "function") {
        this.removeListener(type, listeners);
      } else if (listeners !== void 0) {
        for (i2 = listeners.length - 1; i2 >= 0; i2--) {
          this.removeListener(type, listeners[i2]);
        }
      }
      return this;
    };
    function _listeners(target, type, unwrap) {
      var events = target._events;
      if (events === void 0)
        return [];
      var evlistener = events[type];
      if (evlistener === void 0)
        return [];
      if (typeof evlistener === "function")
        return unwrap ? [evlistener.listener || evlistener] : [evlistener];
      return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
    }
    EventEmitter.prototype.listeners = function listeners(type) {
      return _listeners(this, type, true);
    };
    EventEmitter.prototype.rawListeners = function rawListeners(type) {
      return _listeners(this, type, false);
    };
    EventEmitter.listenerCount = function(emitter, type) {
      if (typeof emitter.listenerCount === "function") {
        return emitter.listenerCount(type);
      } else {
        return listenerCount.call(emitter, type);
      }
    };
    EventEmitter.prototype.listenerCount = listenerCount;
    function listenerCount(type) {
      var events = this._events;
      if (events !== void 0) {
        var evlistener = events[type];
        if (typeof evlistener === "function") {
          return 1;
        } else if (evlistener !== void 0) {
          return evlistener.length;
        }
      }
      return 0;
    }
    EventEmitter.prototype.eventNames = function eventNames() {
      return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
    };
    function arrayClone(arr, n2) {
      var copy = new Array(n2);
      for (var i2 = 0; i2 < n2; ++i2)
        copy[i2] = arr[i2];
      return copy;
    }
    function spliceOne(list, index) {
      for (; index + 1 < list.length; index++)
        list[index] = list[index + 1];
      list.pop();
    }
    function unwrapListeners(arr) {
      var ret = new Array(arr.length);
      for (var i2 = 0; i2 < ret.length; ++i2) {
        ret[i2] = arr[i2].listener || arr[i2];
      }
      return ret;
    }
    function once(emitter, name) {
      return new Promise(function(resolve, reject) {
        function errorListener(err) {
          emitter.removeListener(name, resolver);
          reject(err);
        }
        function resolver() {
          if (typeof emitter.removeListener === "function") {
            emitter.removeListener("error", errorListener);
          }
          resolve([].slice.call(arguments));
        }
        ;
        eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
        if (name !== "error") {
          addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
        }
      });
    }
    function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
      if (typeof emitter.on === "function") {
        eventTargetAgnosticAddListener(emitter, "error", handler, flags);
      }
    }
    function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
      if (typeof emitter.on === "function") {
        if (flags.once) {
          emitter.once(name, listener);
        } else {
          emitter.on(name, listener);
        }
      } else if (typeof emitter.addEventListener === "function") {
        emitter.addEventListener(name, function wrapListener(arg) {
          if (flags.once) {
            emitter.removeEventListener(name, wrapListener);
          }
          listener(arg);
        });
      } else {
        throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
      }
    }
  }
});

// node_modules/@daily-co/daily-js/dist/daily-iframe-esm.js
var import_events = __toESM(require_events());
var r = function(e4, t2) {
  if (null == e4)
    return {};
  var r2, n2, i2 = {}, a2 = Object.keys(e4);
  for (n2 = 0; n2 < a2.length; n2++)
    r2 = a2[n2], t2.indexOf(r2) >= 0 || (i2[r2] = e4[r2]);
  return i2;
};
var n = function(e4, t2) {
  if (null == e4)
    return {};
  var n2, i2, a2 = r(e4, t2);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e4);
    for (i2 = 0; i2 < o2.length; i2++)
      n2 = o2[i2], t2.indexOf(n2) >= 0 || Object.prototype.propertyIsEnumerable.call(e4, n2) && (a2[n2] = e4[n2]);
  }
  return a2;
};
function i(e4, t2, r2, n2, i2, a2, o2) {
  try {
    var s2 = e4[a2](o2), c2 = s2.value;
  } catch (e5) {
    return void r2(e5);
  }
  s2.done ? t2(c2) : Promise.resolve(c2).then(n2, i2);
}
var a = function(e4) {
  return function() {
    var t2 = this, r2 = arguments;
    return new Promise(function(n2, a2) {
      var o2 = e4.apply(t2, r2);
      function s2(e5) {
        i(o2, n2, a2, s2, c2, "next", e5);
      }
      function c2(e5) {
        i(o2, n2, a2, s2, c2, "throw", e5);
      }
      s2(void 0);
    });
  };
};
var o = function(e4, t2) {
  if (!(e4 instanceof t2))
    throw new TypeError("Cannot call a class as a function");
};
var s = function(e4) {
  if (void 0 === e4)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e4;
};
function c(e4, t2) {
  for (var r2 = 0; r2 < t2.length; r2++) {
    var n2 = t2[r2];
    n2.enumerable = n2.enumerable || false, n2.configurable = true, "value" in n2 && (n2.writable = true), Object.defineProperty(e4, n2.key, n2);
  }
}
var l = function(e4, t2, r2) {
  return t2 && c(e4.prototype, t2), r2 && c(e4, r2), e4;
};
var u = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
function d(e4, t2) {
  return e4(t2 = { exports: {} }, t2.exports), t2.exports;
}
var h = d(function(e4) {
  function t2(r2, n2) {
    return e4.exports = t2 = Object.setPrototypeOf || function(e5, t3) {
      return e5.__proto__ = t3, e5;
    }, t2(r2, n2);
  }
  e4.exports = t2;
});
var p = function(e4, t2) {
  if ("function" != typeof t2 && null !== t2)
    throw new TypeError("Super expression must either be null or a function");
  e4.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e4, writable: true, configurable: true } }), t2 && h(e4, t2);
};
var f = d(function(e4) {
  function t2(r2) {
    return "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? e4.exports = t2 = function(e5) {
      return typeof e5;
    } : e4.exports = t2 = function(e5) {
      return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
    }, t2(r2);
  }
  e4.exports = t2;
});
var v = function(e4, t2) {
  return !t2 || "object" !== f(t2) && "function" != typeof t2 ? s(e4) : t2;
};
var g = d(function(e4) {
  function t2(r2) {
    return e4.exports = t2 = Object.setPrototypeOf ? Object.getPrototypeOf : function(e5) {
      return e5.__proto__ || Object.getPrototypeOf(e5);
    }, t2(r2);
  }
  e4.exports = t2;
});
var m = function(e4, t2, r2) {
  return t2 in e4 ? Object.defineProperty(e4, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e4[t2] = r2, e4;
};
var y = function(e4) {
  if (Array.isArray(e4))
    return e4;
};
var b = function(e4, t2) {
  if ("undefined" != typeof Symbol && Symbol.iterator in Object(e4)) {
    var r2 = [], n2 = true, i2 = false, a2 = void 0;
    try {
      for (var o2, s2 = e4[Symbol.iterator](); !(n2 = (o2 = s2.next()).done) && (r2.push(o2.value), !t2 || r2.length !== t2); n2 = true)
        ;
    } catch (e5) {
      i2 = true, a2 = e5;
    } finally {
      try {
        n2 || null == s2.return || s2.return();
      } finally {
        if (i2)
          throw a2;
      }
    }
    return r2;
  }
};
var w = function(e4, t2) {
  (null == t2 || t2 > e4.length) && (t2 = e4.length);
  for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
    n2[r2] = e4[r2];
  return n2;
};
var _ = function(e4, t2) {
  if (e4) {
    if ("string" == typeof e4)
      return w(e4, t2);
    var r2 = Object.prototype.toString.call(e4).slice(8, -1);
    return "Object" === r2 && e4.constructor && (r2 = e4.constructor.name), "Map" === r2 || "Set" === r2 ? Array.from(e4) : "Arguments" === r2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r2) ? w(e4, t2) : void 0;
  }
};
var k = function() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
};
var M = function(e4, t2) {
  return y(e4) || b(e4, t2) || _(e4, t2) || k();
};
var S = "function" == typeof Map;
var C = "function" == typeof Set;
var T = "function" == typeof WeakSet;
var O = Object.keys;
var j = function(e4, t2) {
  return e4 && "object" == typeof e4 && t2.add(e4);
};
var P = function(e4, t2, r2, n2) {
  for (var i2, a2 = 0; a2 < e4.length; a2++)
    if (r2((i2 = e4[a2])[0], t2[0], n2) && r2(i2[1], t2[1], n2))
      return true;
  return false;
};
var A = function(e4, t2, r2, n2) {
  for (var i2 = 0; i2 < e4.length; i2++)
    if (r2(e4[i2], t2, n2))
      return true;
  return false;
};
var F = function(e4, t2) {
  return e4 === t2 || e4 != e4 && t2 != t2;
};
var E = function(e4) {
  return e4.constructor === Object;
};
var I = function(e4) {
  return "function" == typeof e4.then;
};
var L = function(e4) {
  return !(!e4.$$typeof || !e4._store);
};
var D = function(e4) {
  return function(t2) {
    var r2 = e4 || t2;
    return function(e5, t3, n2) {
      void 0 === n2 && (n2 = T ? /* @__PURE__ */ new WeakSet() : /* @__PURE__ */ Object.create({ _values: [], add: function(e6) {
        this._values.push(e6);
      }, has: function(e6) {
        return !!~this._values.indexOf(e6);
      } }));
      var i2 = n2.has(e5), a2 = n2.has(t3);
      return i2 || a2 ? i2 && a2 : (j(e5, n2), j(t3, n2), r2(e5, t3, n2));
    };
  };
};
var B = function(e4) {
  var t2 = [];
  return e4.forEach(function(e5, r2) {
    return t2.push([r2, e5]);
  }), t2;
};
var N = function(e4) {
  var t2 = [];
  return e4.forEach(function(e5) {
    return t2.push(e5);
  }), t2;
};
var x = function(e4, t2, r2, n2) {
  if (e4.length !== t2.length)
    return false;
  for (var i2 = 0; i2 < e4.length; i2++)
    if (!r2(e4[i2], t2[i2], n2))
      return false;
  return true;
};
var R = function(e4, t2, r2, n2) {
  if (e4.size !== t2.size)
    return false;
  for (var i2 = B(e4), a2 = B(t2), o2 = 0; o2 < i2.length; o2++)
    if (!P(a2, i2[o2], r2, n2) || !P(i2, a2[o2], r2, n2))
      return false;
  return true;
};
var V = function(e4, t2, r2, n2) {
  var i2, a2 = O(e4), o2 = O(t2);
  if (a2.length !== o2.length)
    return false;
  for (var s2 = 0; s2 < a2.length; s2++) {
    if (i2 = a2[s2], !A(o2, i2, F))
      return false;
    if (("_owner" !== i2 || !L(e4) || !L(t2)) && !r2(e4[i2], t2[i2], n2))
      return false;
  }
  return true;
};
var U = function(e4, t2) {
  return e4.source === t2.source && e4.global === t2.global && e4.ignoreCase === t2.ignoreCase && e4.multiline === t2.multiline && e4.unicode === t2.unicode && e4.sticky === t2.sticky && e4.lastIndex === t2.lastIndex;
};
var z = function(e4, t2, r2, n2) {
  if (e4.size !== t2.size)
    return false;
  for (var i2 = N(e4), a2 = N(t2), o2 = 0; o2 < i2.length; o2++)
    if (!A(a2, i2[o2], r2, n2) || !A(i2, a2[o2], r2, n2))
      return false;
  return true;
};
var J = Array.isArray;
var q = function(e4) {
  var t2 = "function" == typeof e4 ? e4(r2) : r2;
  function r2(e5, r3, n2) {
    if (F(e5, r3))
      return true;
    var i2 = typeof e5;
    if (i2 !== typeof r3 || "object" !== i2 || !e5 || !r3)
      return false;
    if (E(e5) && E(r3))
      return V(e5, r3, t2, n2);
    var a2 = J(e5), o2 = J(r3);
    if (a2 || o2)
      return a2 === o2 && x(e5, r3, t2, n2);
    var s2 = e5 instanceof Date, c2 = r3 instanceof Date;
    if (s2 || c2)
      return s2 === c2 && F(e5.getTime(), r3.getTime());
    var l2 = e5 instanceof RegExp, u2 = r3 instanceof RegExp;
    if (l2 || u2)
      return l2 === u2 && U(e5, r3);
    if (I(e5) || I(r3))
      return e5 === r3;
    if (S) {
      var d2 = e5 instanceof Map, h2 = r3 instanceof Map;
      if (d2 || h2)
        return d2 === h2 && R(e5, r3, t2, n2);
    }
    if (C) {
      var p2 = e5 instanceof Set, f2 = r3 instanceof Set;
      if (p2 || f2)
        return p2 === f2 && z(e5, r3, t2, n2);
    }
    return V(e5, r3, t2, n2);
  }
  return r2;
};
var W = (q(D()), q(D(F)), q());
q(function() {
  return F;
});
var G = { "Amazon Silk": "amazon_silk", "Android Browser": "android", Bada: "bada", BlackBerry: "blackberry", Chrome: "chrome", Chromium: "chromium", Electron: "electron", Epiphany: "epiphany", Firefox: "firefox", Focus: "focus", Generic: "generic", "Google Search": "google_search", Googlebot: "googlebot", "Internet Explorer": "ie", "K-Meleon": "k_meleon", Maxthon: "maxthon", "Microsoft Edge": "edge", "MZ Browser": "mz", "NAVER Whale Browser": "naver", Opera: "opera", "Opera Coast": "opera_coast", PhantomJS: "phantomjs", Puffin: "puffin", QupZilla: "qupzilla", QQ: "qq", QQLite: "qqlite", Safari: "safari", Sailfish: "sailfish", "Samsung Internet for Android": "samsung_internet", SeaMonkey: "seamonkey", Sleipnir: "sleipnir", Swing: "swing", Tizen: "tizen", "UC Browser": "uc", Vivaldi: "vivaldi", "WebOS Browser": "webos", WeChat: "wechat", "Yandex Browser": "yandex", Roku: "roku" };
var H = { amazon_silk: "Amazon Silk", android: "Android Browser", bada: "Bada", blackberry: "BlackBerry", chrome: "Chrome", chromium: "Chromium", electron: "Electron", epiphany: "Epiphany", firefox: "Firefox", focus: "Focus", generic: "Generic", googlebot: "Googlebot", google_search: "Google Search", ie: "Internet Explorer", k_meleon: "K-Meleon", maxthon: "Maxthon", edge: "Microsoft Edge", mz: "MZ Browser", naver: "NAVER Whale Browser", opera: "Opera", opera_coast: "Opera Coast", phantomjs: "PhantomJS", puffin: "Puffin", qupzilla: "QupZilla", qq: "QQ Browser", qqlite: "QQ Browser Lite", safari: "Safari", sailfish: "Sailfish", samsung_internet: "Samsung Internet for Android", seamonkey: "SeaMonkey", sleipnir: "Sleipnir", swing: "Swing", tizen: "Tizen", uc: "UC Browser", vivaldi: "Vivaldi", webos: "WebOS Browser", wechat: "WeChat", yandex: "Yandex Browser" };
var K = { tablet: "tablet", mobile: "mobile", desktop: "desktop", tv: "tv" };
var Q = { WindowsPhone: "Windows Phone", Windows: "Windows", MacOS: "macOS", iOS: "iOS", Android: "Android", WebOS: "WebOS", BlackBerry: "BlackBerry", Bada: "Bada", Tizen: "Tizen", Linux: "Linux", ChromeOS: "Chrome OS", PlayStation4: "PlayStation 4", Roku: "Roku" };
var $ = { EdgeHTML: "EdgeHTML", Blink: "Blink", Trident: "Trident", Presto: "Presto", Gecko: "Gecko", WebKit: "WebKit" };
var Y = class {
  static getFirstMatch(e4, t2) {
    const r2 = t2.match(e4);
    return r2 && r2.length > 0 && r2[1] || "";
  }
  static getSecondMatch(e4, t2) {
    const r2 = t2.match(e4);
    return r2 && r2.length > 1 && r2[2] || "";
  }
  static matchAndReturnConst(e4, t2, r2) {
    if (e4.test(t2))
      return r2;
  }
  static getWindowsVersionName(e4) {
    switch (e4) {
      case "NT":
        return "NT";
      case "XP":
        return "XP";
      case "NT 5.0":
        return "2000";
      case "NT 5.1":
        return "XP";
      case "NT 5.2":
        return "2003";
      case "NT 6.0":
        return "Vista";
      case "NT 6.1":
        return "7";
      case "NT 6.2":
        return "8";
      case "NT 6.3":
        return "8.1";
      case "NT 10.0":
        return "10";
      default:
        return;
    }
  }
  static getMacOSVersionName(e4) {
    const t2 = e4.split(".").splice(0, 2).map((e5) => parseInt(e5, 10) || 0);
    if (t2.push(0), 10 === t2[0])
      switch (t2[1]) {
        case 5:
          return "Leopard";
        case 6:
          return "Snow Leopard";
        case 7:
          return "Lion";
        case 8:
          return "Mountain Lion";
        case 9:
          return "Mavericks";
        case 10:
          return "Yosemite";
        case 11:
          return "El Capitan";
        case 12:
          return "Sierra";
        case 13:
          return "High Sierra";
        case 14:
          return "Mojave";
        case 15:
          return "Catalina";
        default:
          return;
      }
  }
  static getAndroidVersionName(e4) {
    const t2 = e4.split(".").splice(0, 2).map((e5) => parseInt(e5, 10) || 0);
    if (t2.push(0), !(1 === t2[0] && t2[1] < 5))
      return 1 === t2[0] && t2[1] < 6 ? "Cupcake" : 1 === t2[0] && t2[1] >= 6 ? "Donut" : 2 === t2[0] && t2[1] < 2 ? "Eclair" : 2 === t2[0] && 2 === t2[1] ? "Froyo" : 2 === t2[0] && t2[1] > 2 ? "Gingerbread" : 3 === t2[0] ? "Honeycomb" : 4 === t2[0] && t2[1] < 1 ? "Ice Cream Sandwich" : 4 === t2[0] && t2[1] < 4 ? "Jelly Bean" : 4 === t2[0] && t2[1] >= 4 ? "KitKat" : 5 === t2[0] ? "Lollipop" : 6 === t2[0] ? "Marshmallow" : 7 === t2[0] ? "Nougat" : 8 === t2[0] ? "Oreo" : 9 === t2[0] ? "Pie" : void 0;
  }
  static getVersionPrecision(e4) {
    return e4.split(".").length;
  }
  static compareVersions(e4, t2, r2 = false) {
    const n2 = Y.getVersionPrecision(e4), i2 = Y.getVersionPrecision(t2);
    let a2 = Math.max(n2, i2), o2 = 0;
    const s2 = Y.map([e4, t2], (e5) => {
      const t3 = a2 - Y.getVersionPrecision(e5), r3 = e5 + new Array(t3 + 1).join(".0");
      return Y.map(r3.split("."), (e6) => new Array(20 - e6.length).join("0") + e6).reverse();
    });
    for (r2 && (o2 = a2 - Math.min(n2, i2)), a2 -= 1; a2 >= o2; ) {
      if (s2[0][a2] > s2[1][a2])
        return 1;
      if (s2[0][a2] === s2[1][a2]) {
        if (a2 === o2)
          return 0;
        a2 -= 1;
      } else if (s2[0][a2] < s2[1][a2])
        return -1;
    }
  }
  static map(e4, t2) {
    const r2 = [];
    let n2;
    if (Array.prototype.map)
      return Array.prototype.map.call(e4, t2);
    for (n2 = 0; n2 < e4.length; n2 += 1)
      r2.push(t2(e4[n2]));
    return r2;
  }
  static find(e4, t2) {
    let r2, n2;
    if (Array.prototype.find)
      return Array.prototype.find.call(e4, t2);
    for (r2 = 0, n2 = e4.length; r2 < n2; r2 += 1) {
      const n3 = e4[r2];
      if (t2(n3, r2))
        return n3;
    }
  }
  static assign(e4, ...t2) {
    const r2 = e4;
    let n2, i2;
    if (Object.assign)
      return Object.assign(e4, ...t2);
    for (n2 = 0, i2 = t2.length; n2 < i2; n2 += 1) {
      const e5 = t2[n2];
      if ("object" == typeof e5 && null !== e5) {
        Object.keys(e5).forEach((t3) => {
          r2[t3] = e5[t3];
        });
      }
    }
    return e4;
  }
  static getBrowserAlias(e4) {
    return G[e4];
  }
  static getBrowserTypeByAlias(e4) {
    return H[e4] || "";
  }
};
var Z = /version\/(\d+(\.?_?\d+)+)/i;
var X = [{ test: [/googlebot/i], describe(e4) {
  const t2 = { name: "Googlebot" }, r2 = Y.getFirstMatch(/googlebot\/(\d+(\.\d+))/i, e4) || Y.getFirstMatch(Z, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/opera/i], describe(e4) {
  const t2 = { name: "Opera" }, r2 = Y.getFirstMatch(Z, e4) || Y.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/opr\/|opios/i], describe(e4) {
  const t2 = { name: "Opera" }, r2 = Y.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i, e4) || Y.getFirstMatch(Z, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/SamsungBrowser/i], describe(e4) {
  const t2 = { name: "Samsung Internet for Android" }, r2 = Y.getFirstMatch(Z, e4) || Y.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/Whale/i], describe(e4) {
  const t2 = { name: "NAVER Whale Browser" }, r2 = Y.getFirstMatch(Z, e4) || Y.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/MZBrowser/i], describe(e4) {
  const t2 = { name: "MZ Browser" }, r2 = Y.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i, e4) || Y.getFirstMatch(Z, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/focus/i], describe(e4) {
  const t2 = { name: "Focus" }, r2 = Y.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i, e4) || Y.getFirstMatch(Z, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/swing/i], describe(e4) {
  const t2 = { name: "Swing" }, r2 = Y.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i, e4) || Y.getFirstMatch(Z, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/coast/i], describe(e4) {
  const t2 = { name: "Opera Coast" }, r2 = Y.getFirstMatch(Z, e4) || Y.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/yabrowser/i], describe(e4) {
  const t2 = { name: "Yandex Browser" }, r2 = Y.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i, e4) || Y.getFirstMatch(Z, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/ucbrowser/i], describe(e4) {
  const t2 = { name: "UC Browser" }, r2 = Y.getFirstMatch(Z, e4) || Y.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/Maxthon|mxios/i], describe(e4) {
  const t2 = { name: "Maxthon" }, r2 = Y.getFirstMatch(Z, e4) || Y.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/epiphany/i], describe(e4) {
  const t2 = { name: "Epiphany" }, r2 = Y.getFirstMatch(Z, e4) || Y.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/puffin/i], describe(e4) {
  const t2 = { name: "Puffin" }, r2 = Y.getFirstMatch(Z, e4) || Y.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/sleipnir/i], describe(e4) {
  const t2 = { name: "Sleipnir" }, r2 = Y.getFirstMatch(Z, e4) || Y.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/k-meleon/i], describe(e4) {
  const t2 = { name: "K-Meleon" }, r2 = Y.getFirstMatch(Z, e4) || Y.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/micromessenger/i], describe(e4) {
  const t2 = { name: "WeChat" }, r2 = Y.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i, e4) || Y.getFirstMatch(Z, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/qqbrowser/i], describe(e4) {
  const t2 = { name: /qqbrowserlite/i.test(e4) ? "QQ Browser Lite" : "QQ Browser" }, r2 = Y.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i, e4) || Y.getFirstMatch(Z, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/msie|trident/i], describe(e4) {
  const t2 = { name: "Internet Explorer" }, r2 = Y.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/\sedg\//i], describe(e4) {
  const t2 = { name: "Microsoft Edge" }, r2 = Y.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/edg([ea]|ios)/i], describe(e4) {
  const t2 = { name: "Microsoft Edge" }, r2 = Y.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/vivaldi/i], describe(e4) {
  const t2 = { name: "Vivaldi" }, r2 = Y.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/seamonkey/i], describe(e4) {
  const t2 = { name: "SeaMonkey" }, r2 = Y.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/sailfish/i], describe(e4) {
  const t2 = { name: "Sailfish" }, r2 = Y.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/silk/i], describe(e4) {
  const t2 = { name: "Amazon Silk" }, r2 = Y.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/phantom/i], describe(e4) {
  const t2 = { name: "PhantomJS" }, r2 = Y.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/slimerjs/i], describe(e4) {
  const t2 = { name: "SlimerJS" }, r2 = Y.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/blackberry|\bbb\d+/i, /rim\stablet/i], describe(e4) {
  const t2 = { name: "BlackBerry" }, r2 = Y.getFirstMatch(Z, e4) || Y.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/(web|hpw)[o0]s/i], describe(e4) {
  const t2 = { name: "WebOS Browser" }, r2 = Y.getFirstMatch(Z, e4) || Y.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/bada/i], describe(e4) {
  const t2 = { name: "Bada" }, r2 = Y.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/tizen/i], describe(e4) {
  const t2 = { name: "Tizen" }, r2 = Y.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i, e4) || Y.getFirstMatch(Z, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/qupzilla/i], describe(e4) {
  const t2 = { name: "QupZilla" }, r2 = Y.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i, e4) || Y.getFirstMatch(Z, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/firefox|iceweasel|fxios/i], describe(e4) {
  const t2 = { name: "Firefox" }, r2 = Y.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/electron/i], describe(e4) {
  const t2 = { name: "Electron" }, r2 = Y.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/chromium/i], describe(e4) {
  const t2 = { name: "Chromium" }, r2 = Y.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i, e4) || Y.getFirstMatch(Z, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/chrome|crios|crmo/i], describe(e4) {
  const t2 = { name: "Chrome" }, r2 = Y.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/GSA/i], describe(e4) {
  const t2 = { name: "Google Search" }, r2 = Y.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test(e4) {
  const t2 = !e4.test(/like android/i), r2 = e4.test(/android/i);
  return t2 && r2;
}, describe(e4) {
  const t2 = { name: "Android Browser" }, r2 = Y.getFirstMatch(Z, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/playstation 4/i], describe(e4) {
  const t2 = { name: "PlayStation 4" }, r2 = Y.getFirstMatch(Z, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/safari|applewebkit/i], describe(e4) {
  const t2 = { name: "Safari" }, r2 = Y.getFirstMatch(Z, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/.*/i], describe(e4) {
  const t2 = -1 !== e4.search("\\(") ? /^(.*)\/(.*)[ \t]\((.*)/ : /^(.*)\/(.*) /;
  return { name: Y.getFirstMatch(t2, e4), version: Y.getSecondMatch(t2, e4) };
} }];
var ee = [{ test: [/Roku\/DVP/], describe(e4) {
  const t2 = Y.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i, e4);
  return { name: Q.Roku, version: t2 };
} }, { test: [/windows phone/i], describe(e4) {
  const t2 = Y.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i, e4);
  return { name: Q.WindowsPhone, version: t2 };
} }, { test: [/windows /i], describe(e4) {
  const t2 = Y.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i, e4), r2 = Y.getWindowsVersionName(t2);
  return { name: Q.Windows, version: t2, versionName: r2 };
} }, { test: [/Macintosh(.*?) FxiOS(.*?) Version\//], describe(e4) {
  const t2 = Y.getSecondMatch(/(Version\/)(\d[\d.]+)/, e4);
  return { name: Q.iOS, version: t2 };
} }, { test: [/macintosh/i], describe(e4) {
  const t2 = Y.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i, e4).replace(/[_\s]/g, "."), r2 = Y.getMacOSVersionName(t2), n2 = { name: Q.MacOS, version: t2 };
  return r2 && (n2.versionName = r2), n2;
} }, { test: [/(ipod|iphone|ipad)/i], describe(e4) {
  const t2 = Y.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i, e4).replace(/[_\s]/g, ".");
  return { name: Q.iOS, version: t2 };
} }, { test(e4) {
  const t2 = !e4.test(/like android/i), r2 = e4.test(/android/i);
  return t2 && r2;
}, describe(e4) {
  const t2 = Y.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i, e4), r2 = Y.getAndroidVersionName(t2), n2 = { name: Q.Android, version: t2 };
  return r2 && (n2.versionName = r2), n2;
} }, { test: [/(web|hpw)[o0]s/i], describe(e4) {
  const t2 = Y.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i, e4), r2 = { name: Q.WebOS };
  return t2 && t2.length && (r2.version = t2), r2;
} }, { test: [/blackberry|\bbb\d+/i, /rim\stablet/i], describe(e4) {
  const t2 = Y.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i, e4) || Y.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i, e4) || Y.getFirstMatch(/\bbb(\d+)/i, e4);
  return { name: Q.BlackBerry, version: t2 };
} }, { test: [/bada/i], describe(e4) {
  const t2 = Y.getFirstMatch(/bada\/(\d+(\.\d+)*)/i, e4);
  return { name: Q.Bada, version: t2 };
} }, { test: [/tizen/i], describe(e4) {
  const t2 = Y.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i, e4);
  return { name: Q.Tizen, version: t2 };
} }, { test: [/linux/i], describe: () => ({ name: Q.Linux }) }, { test: [/CrOS/], describe: () => ({ name: Q.ChromeOS }) }, { test: [/PlayStation 4/], describe(e4) {
  const t2 = Y.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i, e4);
  return { name: Q.PlayStation4, version: t2 };
} }];
var te = [{ test: [/googlebot/i], describe: () => ({ type: "bot", vendor: "Google" }) }, { test: [/huawei/i], describe(e4) {
  const t2 = Y.getFirstMatch(/(can-l01)/i, e4) && "Nova", r2 = { type: K.mobile, vendor: "Huawei" };
  return t2 && (r2.model = t2), r2;
} }, { test: [/nexus\s*(?:7|8|9|10).*/i], describe: () => ({ type: K.tablet, vendor: "Nexus" }) }, { test: [/ipad/i], describe: () => ({ type: K.tablet, vendor: "Apple", model: "iPad" }) }, { test: [/Macintosh(.*?) FxiOS(.*?) Version\//], describe: () => ({ type: K.tablet, vendor: "Apple", model: "iPad" }) }, { test: [/kftt build/i], describe: () => ({ type: K.tablet, vendor: "Amazon", model: "Kindle Fire HD 7" }) }, { test: [/silk/i], describe: () => ({ type: K.tablet, vendor: "Amazon" }) }, { test: [/tablet(?! pc)/i], describe: () => ({ type: K.tablet }) }, { test(e4) {
  const t2 = e4.test(/ipod|iphone/i), r2 = e4.test(/like (ipod|iphone)/i);
  return t2 && !r2;
}, describe(e4) {
  const t2 = Y.getFirstMatch(/(ipod|iphone)/i, e4);
  return { type: K.mobile, vendor: "Apple", model: t2 };
} }, { test: [/nexus\s*[0-6].*/i, /galaxy nexus/i], describe: () => ({ type: K.mobile, vendor: "Nexus" }) }, { test: [/[^-]mobi/i], describe: () => ({ type: K.mobile }) }, { test: (e4) => "blackberry" === e4.getBrowserName(true), describe: () => ({ type: K.mobile, vendor: "BlackBerry" }) }, { test: (e4) => "bada" === e4.getBrowserName(true), describe: () => ({ type: K.mobile }) }, { test: (e4) => "windows phone" === e4.getBrowserName(), describe: () => ({ type: K.mobile, vendor: "Microsoft" }) }, { test(e4) {
  const t2 = Number(String(e4.getOSVersion()).split(".")[0]);
  return "android" === e4.getOSName(true) && t2 >= 3;
}, describe: () => ({ type: K.tablet }) }, { test: (e4) => "android" === e4.getOSName(true), describe: () => ({ type: K.mobile }) }, { test: (e4) => "macos" === e4.getOSName(true), describe: () => ({ type: K.desktop, vendor: "Apple" }) }, { test: (e4) => "windows" === e4.getOSName(true), describe: () => ({ type: K.desktop }) }, { test: (e4) => "linux" === e4.getOSName(true), describe: () => ({ type: K.desktop }) }, { test: (e4) => "playstation 4" === e4.getOSName(true), describe: () => ({ type: K.tv }) }, { test: (e4) => "roku" === e4.getOSName(true), describe: () => ({ type: K.tv }) }];
var re = [{ test: (e4) => "microsoft edge" === e4.getBrowserName(true), describe(e4) {
  if (/\sedg\//i.test(e4))
    return { name: $.Blink };
  const t2 = Y.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i, e4);
  return { name: $.EdgeHTML, version: t2 };
} }, { test: [/trident/i], describe(e4) {
  const t2 = { name: $.Trident }, r2 = Y.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: (e4) => e4.test(/presto/i), describe(e4) {
  const t2 = { name: $.Presto }, r2 = Y.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test(e4) {
  const t2 = e4.test(/gecko/i), r2 = e4.test(/like gecko/i);
  return t2 && !r2;
}, describe(e4) {
  const t2 = { name: $.Gecko }, r2 = Y.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }, { test: [/(apple)?webkit\/537\.36/i], describe: () => ({ name: $.Blink }) }, { test: [/(apple)?webkit/i], describe(e4) {
  const t2 = { name: $.WebKit }, r2 = Y.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i, e4);
  return r2 && (t2.version = r2), t2;
} }];
var ne = class {
  constructor(e4, t2 = false) {
    if (null == e4 || "" === e4)
      throw new Error("UserAgent parameter can't be empty");
    this._ua = e4, this.parsedResult = {}, true !== t2 && this.parse();
  }
  getUA() {
    return this._ua;
  }
  test(e4) {
    return e4.test(this._ua);
  }
  parseBrowser() {
    this.parsedResult.browser = {};
    const e4 = Y.find(X, (e5) => {
      if ("function" == typeof e5.test)
        return e5.test(this);
      if (e5.test instanceof Array)
        return e5.test.some((e6) => this.test(e6));
      throw new Error("Browser's test function is not valid");
    });
    return e4 && (this.parsedResult.browser = e4.describe(this.getUA())), this.parsedResult.browser;
  }
  getBrowser() {
    return this.parsedResult.browser ? this.parsedResult.browser : this.parseBrowser();
  }
  getBrowserName(e4) {
    return e4 ? String(this.getBrowser().name).toLowerCase() || "" : this.getBrowser().name || "";
  }
  getBrowserVersion() {
    return this.getBrowser().version;
  }
  getOS() {
    return this.parsedResult.os ? this.parsedResult.os : this.parseOS();
  }
  parseOS() {
    this.parsedResult.os = {};
    const e4 = Y.find(ee, (e5) => {
      if ("function" == typeof e5.test)
        return e5.test(this);
      if (e5.test instanceof Array)
        return e5.test.some((e6) => this.test(e6));
      throw new Error("Browser's test function is not valid");
    });
    return e4 && (this.parsedResult.os = e4.describe(this.getUA())), this.parsedResult.os;
  }
  getOSName(e4) {
    const { name: t2 } = this.getOS();
    return e4 ? String(t2).toLowerCase() || "" : t2 || "";
  }
  getOSVersion() {
    return this.getOS().version;
  }
  getPlatform() {
    return this.parsedResult.platform ? this.parsedResult.platform : this.parsePlatform();
  }
  getPlatformType(e4 = false) {
    const { type: t2 } = this.getPlatform();
    return e4 ? String(t2).toLowerCase() || "" : t2 || "";
  }
  parsePlatform() {
    this.parsedResult.platform = {};
    const e4 = Y.find(te, (e5) => {
      if ("function" == typeof e5.test)
        return e5.test(this);
      if (e5.test instanceof Array)
        return e5.test.some((e6) => this.test(e6));
      throw new Error("Browser's test function is not valid");
    });
    return e4 && (this.parsedResult.platform = e4.describe(this.getUA())), this.parsedResult.platform;
  }
  getEngine() {
    return this.parsedResult.engine ? this.parsedResult.engine : this.parseEngine();
  }
  getEngineName(e4) {
    return e4 ? String(this.getEngine().name).toLowerCase() || "" : this.getEngine().name || "";
  }
  parseEngine() {
    this.parsedResult.engine = {};
    const e4 = Y.find(re, (e5) => {
      if ("function" == typeof e5.test)
        return e5.test(this);
      if (e5.test instanceof Array)
        return e5.test.some((e6) => this.test(e6));
      throw new Error("Browser's test function is not valid");
    });
    return e4 && (this.parsedResult.engine = e4.describe(this.getUA())), this.parsedResult.engine;
  }
  parse() {
    return this.parseBrowser(), this.parseOS(), this.parsePlatform(), this.parseEngine(), this;
  }
  getResult() {
    return Y.assign({}, this.parsedResult);
  }
  satisfies(e4) {
    const t2 = {};
    let r2 = 0;
    const n2 = {};
    let i2 = 0;
    if (Object.keys(e4).forEach((a2) => {
      const o2 = e4[a2];
      "string" == typeof o2 ? (n2[a2] = o2, i2 += 1) : "object" == typeof o2 && (t2[a2] = o2, r2 += 1);
    }), r2 > 0) {
      const e5 = Object.keys(t2), r3 = Y.find(e5, (e6) => this.isOS(e6));
      if (r3) {
        const e6 = this.satisfies(t2[r3]);
        if (void 0 !== e6)
          return e6;
      }
      const n3 = Y.find(e5, (e6) => this.isPlatform(e6));
      if (n3) {
        const e6 = this.satisfies(t2[n3]);
        if (void 0 !== e6)
          return e6;
      }
    }
    if (i2 > 0) {
      const e5 = Object.keys(n2), t3 = Y.find(e5, (e6) => this.isBrowser(e6, true));
      if (void 0 !== t3)
        return this.compareVersion(n2[t3]);
    }
  }
  isBrowser(e4, t2 = false) {
    const r2 = this.getBrowserName().toLowerCase();
    let n2 = e4.toLowerCase();
    const i2 = Y.getBrowserTypeByAlias(n2);
    return t2 && i2 && (n2 = i2.toLowerCase()), n2 === r2;
  }
  compareVersion(e4) {
    let t2 = [0], r2 = e4, n2 = false;
    const i2 = this.getBrowserVersion();
    if ("string" == typeof i2)
      return ">" === e4[0] || "<" === e4[0] ? (r2 = e4.substr(1), "=" === e4[1] ? (n2 = true, r2 = e4.substr(2)) : t2 = [], ">" === e4[0] ? t2.push(1) : t2.push(-1)) : "=" === e4[0] ? r2 = e4.substr(1) : "~" === e4[0] && (n2 = true, r2 = e4.substr(1)), t2.indexOf(Y.compareVersions(i2, r2, n2)) > -1;
  }
  isOS(e4) {
    return this.getOSName(true) === String(e4).toLowerCase();
  }
  isPlatform(e4) {
    return this.getPlatformType(true) === String(e4).toLowerCase();
  }
  isEngine(e4) {
    return this.getEngineName(true) === String(e4).toLowerCase();
  }
  is(e4) {
    return this.isBrowser(e4) || this.isOS(e4) || this.isPlatform(e4);
  }
  some(e4 = []) {
    return e4.some((e5) => this.is(e5));
  }
};
var ie = "new";
var ae = "loading";
var oe = "joining-meeting";
var se = "joined-meeting";
var ce = "left-meeting";
var le = "error";
var ue = "blocked";
var de = "off";
var he = "sendable";
var pe = "loading";
var fe = "interrupted";
var ve = "playable";
var ge = "unknown";
var me = "full";
var ye = "lobby";
var be = "none";
var we = "base";
var _e = "*";
var ke = "ejected";
var Me = "nbf-room";
var Se = "nbf-token";
var Ce = "exp-room";
var Te = "exp-token";
var Oe = "meeting-full";
var je = "end-of-life";
var Pe = "not-allowed";
var Ae = "cam-in-use";
var Fe = "mic-in-use";
var Ee = "cam-mic-in-use";
var Ie = "permissions";
var Le = "undefined-mediadevices";
var De = "not-found";
var Be = "constraints";
var Ne = "unknown";
var xe = "iframe-ready-for-launch-config";
var Re = "iframe-launch-config";
var Ve = "theme-updated";
var Ue = "loading";
var ze = "load-attempt-failed";
var Je = "loaded";
var qe = "started-camera";
var We = "camera-error";
var Ge = "joining-meeting";
var He = "joined-meeting";
var Ke = "left-meeting";
var Qe = "available-devices-updated";
var $e = "participant-joined";
var Ye = "participant-updated";
var Ze = "participant-left";
var Xe = "participant-counts-updated";
var et = "access-state-updated";
var tt = "meeting-session-updated";
var rt = "meeting-session-state-updated";
var nt = "meeting-session-data-error";
var it = "waiting-participant-added";
var at = "waiting-participant-updated";
var ot = "waiting-participant-removed";
var st = "track-started";
var ct = "track-stopped";
var lt = "transcription-started";
var ut = "transcription-stopped";
var dt = "transcription-error";
var ht = "recording-started";
var pt = "recording-stopped";
var ft = "recording-stats";
var vt = "recording-error";
var gt = "recording-upload-completed";
var mt = "recording-data";
var yt = "app-message";
var bt = "remote-media-player-started";
var wt = "remote-media-player-updated";
var _t = "remote-media-player-stopped";
var kt = "local-screen-share-started";
var Mt = "local-screen-share-stopped";
var St = "active-speaker-change";
var Ct = "active-speaker-mode-change";
var Tt = "network-quality-change";
var Ot = "network-connection";
var jt = "fullscreen";
var Pt = "exited-fullscreen";
var At = "live-streaming-started";
var Ft = "live-streaming-updated";
var Et = "live-streaming-stopped";
var It = "live-streaming-error";
var Lt = "lang-updated";
var Dt = "receive-settings-updated";
var Bt = "input-settings-updated";
var Nt = "nonfatal-error";
var xt = "error";
var Rt = 4096;
var Vt = "daily-custom-track";
var Ut = { NONE: "none", BGBLUR: "background-blur", BGIMAGE: "background-image" };
var zt = { NONE: "none", NOISE_CANCELLATION: "noise-cancellation" };
var Jt = { PLAY: "play", PAUSE: "pause" };
var qt = 10;
var Wt = ["jpg", "png", "jpeg"];
var Gt = "add-endpoints";
var Ht = "remove-endpoints";
function Kt() {
  return !Qt() && "undefined" != typeof window && window.navigator && window.navigator.userAgent ? window.navigator.userAgent : "";
}
function Qt() {
  return "undefined" != typeof navigator && navigator.product && "ReactNative" === navigator.product;
}
function $t() {
  return navigator && navigator.mediaDevices && navigator.mediaDevices.getUserMedia;
}
function Yt() {
  return !!(navigator && navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) && function(e4, t2) {
    if (!e4 || !t2)
      return true;
    switch (e4) {
      case "Chrome":
        return t2.major >= 75;
      case "Safari":
        return RTCRtpTransceiver.prototype.hasOwnProperty("currentDirection") && !(13 === t2.major && 0 === t2.minor && 0 === t2.point);
      case "Firefox":
        return t2.major >= 67;
    }
    return true;
  }(nr(), function() {
    switch (nr()) {
      case "Chrome":
        return ir();
      case "Safari":
        return or();
      case "Firefox":
        return sr();
      case "Edge":
        return function() {
          var e4 = 0, t2 = 0;
          if ("undefined" != typeof window) {
            var r2 = Kt(), n2 = r2.match(/Edge\/(\d+).(\d+)/);
            if (n2)
              try {
                e4 = parseInt(n2[1]), t2 = parseInt(n2[2]);
              } catch (e5) {
              }
          }
          return { major: e4, minor: t2 };
        }();
    }
  }());
}
function Zt() {
  if (Qt())
    return false;
  if (!document)
    return false;
  var e4 = document.createElement("iframe");
  return !!e4.requestFullscreen || !!e4.webkitRequestFullscreen;
}
var Xt = ["Chrome", "Firefox"];
var er = ["Chrome", "Firefox"];
function tr() {
  return $t() && !function() {
    var e4, t2 = nr();
    if (!Kt())
      return true;
    switch (t2) {
      case "Chrome":
        return (e4 = ir()).major && e4.major > 0 && e4.major < 61;
      case "Firefox":
        return (e4 = sr()).major < 78;
      case "Safari":
        return (e4 = or()).major < 12;
      default:
        return true;
    }
  }();
}
function rr() {
  var e4 = Kt();
  return !(!e4.match(/Mobi/) && !e4.match(/Android/)) || (!!Kt().match(/DailyAnd\//) || void 0);
}
function nr() {
  if ("undefined" != typeof window) {
    var e4 = Kt();
    return ar() ? "Safari" : e4.indexOf("Edge") > -1 ? "Edge" : e4.match(/Chrome\//) ? "Chrome" : e4.indexOf("Safari") > -1 ? "Safari" : e4.indexOf("Firefox") > -1 ? "Firefox" : e4.indexOf("MSIE") > -1 || e4.indexOf(".NET") > -1 ? "IE" : "Unknown Browser";
  }
}
function ir() {
  var e4 = 0, t2 = 0, r2 = 0, n2 = 0, i2 = false;
  if ("undefined" != typeof window) {
    var a2 = Kt(), o2 = a2.match(/Chrome\/(\d+).(\d+).(\d+).(\d+)/);
    if (o2)
      try {
        e4 = parseInt(o2[1]), t2 = parseInt(o2[2]), r2 = parseInt(o2[3]), n2 = parseInt(o2[4]), i2 = a2.indexOf("OPR/") > -1;
      } catch (e5) {
      }
  }
  return { major: e4, minor: t2, build: r2, patch: n2, opera: i2 };
}
function ar() {
  return !!Kt().match(/iPad|iPhone|iPod/i) && $t();
}
function or() {
  var e4 = 0, t2 = 0, r2 = 0;
  if ("undefined" != typeof window) {
    var n2 = Kt().match(/Version\/(\d+).(\d+)(.(\d+))?/);
    if (n2)
      try {
        e4 = parseInt(n2[1]), t2 = parseInt(n2[2]), r2 = parseInt(n2[4]);
      } catch (e5) {
      }
    else
      ar() && (e4 = 14, t2 = 0, r2 = 3);
  }
  return { major: e4, minor: t2, point: r2 };
}
function sr() {
  var e4 = 0, t2 = 0;
  if ("undefined" != typeof window) {
    var r2 = Kt().match(/Firefox\/(\d+).(\d+)/);
    if (r2)
      try {
        e4 = parseInt(r2[1]), t2 = parseInt(r2[2]);
      } catch (e5) {
      }
  }
  return { major: e4, minor: t2 };
}
function cr() {
  return Date.now() + Math.random().toString();
}
function lr() {
  throw new Error("Method must be implemented in subclass");
}
function ur() {
  return window._dailyConfig && window._dailyConfig.callObjectBundleUrlOverride ? window._dailyConfig.callObjectBundleUrlOverride : "https://c.daily.co/call-machine/versioned/".concat("0.40.0", "/static/call-machine-object-bundle.js");
}
function dr(e4) {
  try {
    new URL(e4);
  } catch (e5) {
    return false;
  }
  return true;
}
var hr = function() {
  function e4() {
    o(this, e4);
  }
  return l(e4, [{ key: "addListenerForMessagesFromCallMachine", value: function(e5, t2, r2) {
    lr();
  } }, { key: "addListenerForMessagesFromDailyJs", value: function(e5, t2, r2) {
    lr();
  } }, { key: "sendMessageToCallMachine", value: function(e5, t2, r2, n2) {
    lr();
  } }, { key: "sendMessageToDailyJs", value: function(e5, t2) {
    lr();
  } }, { key: "removeListener", value: function(e5) {
    lr();
  } }]), e4;
}();
function pr(e4, t2) {
  var r2 = Object.keys(e4);
  if (Object.getOwnPropertySymbols) {
    var n2 = Object.getOwnPropertySymbols(e4);
    t2 && (n2 = n2.filter(function(t3) {
      return Object.getOwnPropertyDescriptor(e4, t3).enumerable;
    })), r2.push.apply(r2, n2);
  }
  return r2;
}
function fr(e4) {
  for (var t2 = 1; t2 < arguments.length; t2++) {
    var r2 = null != arguments[t2] ? arguments[t2] : {};
    t2 % 2 ? pr(Object(r2), true).forEach(function(t3) {
      m(e4, t3, r2[t3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r2)) : pr(Object(r2)).forEach(function(t3) {
      Object.defineProperty(e4, t3, Object.getOwnPropertyDescriptor(r2, t3));
    });
  }
  return e4;
}
function vr(e4) {
  var t2 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if ("function" == typeof Proxy)
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (e5) {
      return false;
    }
  }();
  return function() {
    var r2, n2 = g(e4);
    if (t2) {
      var i2 = g(this).constructor;
      r2 = Reflect.construct(n2, arguments, i2);
    } else
      r2 = n2.apply(this, arguments);
    return v(this, r2);
  };
}
var gr = function(e4) {
  p(r2, hr);
  var t2 = vr(r2);
  function r2() {
    var e5;
    return o(this, r2), (e5 = t2.call(this))._wrappedListeners = {}, e5._messageCallbacks = {}, e5;
  }
  return l(r2, [{ key: "addListenerForMessagesFromCallMachine", value: function(e5, t3, r3) {
    var n2 = this, i2 = function(i3) {
      if (i3.data && "iframe-call-message" === i3.data.what && (!i3.data.callFrameId || i3.data.callFrameId === t3) && (!i3.data.from || "module" !== i3.data.from)) {
        var a2 = fr({}, i3.data);
        if (delete a2.from, a2.callbackStamp && n2._messageCallbacks[a2.callbackStamp]) {
          var o2 = a2.callbackStamp;
          n2._messageCallbacks[o2].call(r3, a2), delete n2._messageCallbacks[o2];
        }
        delete a2.what, delete a2.callbackStamp, e5.call(r3, a2);
      }
    };
    this._wrappedListeners[e5] = i2, window.addEventListener("message", i2);
  } }, { key: "addListenerForMessagesFromDailyJs", value: function(e5, t3, r3) {
    var n2 = function(n3) {
      if (!(!n3.data || "iframe-call-message" !== n3.data.what || !n3.data.action || n3.data.from && "module" !== n3.data.from || n3.data.callFrameId && t3 && n3.data.callFrameId !== t3)) {
        var i2 = n3.data;
        e5.call(r3, i2);
      }
    };
    this._wrappedListeners[e5] = n2, window.addEventListener("message", n2);
  } }, { key: "sendMessageToCallMachine", value: function(e5, t3, r3, n2) {
    if (!n2)
      throw new Error("undefined callFrameId. Are you trying to use a dailyIFrame instance previously destroyed?");
    var i2 = fr({}, e5);
    if (i2.what = "iframe-call-message", i2.from = "module", i2.callFrameId = n2, t3) {
      var a2 = cr();
      this._messageCallbacks[a2] = t3, i2.callbackStamp = a2;
    }
    (r3 ? r3.contentWindow : window).postMessage(i2, "*");
  } }, { key: "sendMessageToDailyJs", value: function(e5, t3) {
    e5.what = "iframe-call-message", e5.callFrameId = t3, e5.from = "embedded", window.postMessage(e5, "*");
  } }, { key: "removeListener", value: function(e5) {
    var t3 = this._wrappedListeners[e5];
    t3 && (window.removeEventListener("message", t3), delete this._wrappedListeners[e5]);
  } }, { key: "forwardPackagedMessageToCallMachine", value: function(e5, t3, r3) {
    var n2 = fr({}, e5);
    n2.callFrameId = r3, (t3 ? t3.contentWindow : window).postMessage(n2, "*");
  } }, { key: "addListenerForPackagedMessagesFromCallMachine", value: function(e5, t3) {
    var r3 = function(r4) {
      if (r4.data && "iframe-call-message" === r4.data.what && (!r4.data.callFrameId || r4.data.callFrameId === t3) && (!r4.data.from || "module" !== r4.data.from)) {
        var n2 = r4.data;
        e5(n2);
      }
    };
    return this._wrappedListeners[e5] = r3, window.addEventListener("message", r3), e5;
  } }, { key: "removeListenerForPackagedMessagesFromCallMachine", value: function(e5) {
    var t3 = this._wrappedListeners[e5];
    t3 && (window.removeEventListener("message", t3), delete this._wrappedListeners[e5]);
  } }]), r2;
}();
function mr(e4) {
  var t2 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if ("function" == typeof Proxy)
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (e5) {
      return false;
    }
  }();
  return function() {
    var r2, n2 = g(e4);
    if (t2) {
      var i2 = g(this).constructor;
      r2 = Reflect.construct(n2, arguments, i2);
    } else
      r2 = n2.apply(this, arguments);
    return v(this, r2);
  };
}
var yr = function(e4) {
  p(n2, hr);
  var r2 = mr(n2);
  function n2() {
    var e5;
    return o(this, n2), e5 = r2.call(this), global.callMachineToDailyJsEmitter = global.callMachineToDailyJsEmitter || new import_events.EventEmitter(), global.dailyJsToCallMachineEmitter = global.dailyJsToCallMachineEmitter || new import_events.EventEmitter(), e5._wrappedListeners = {}, e5._messageCallbacks = {}, e5;
  }
  return l(n2, [{ key: "addListenerForMessagesFromCallMachine", value: function(e5, t2, r3) {
    this._addListener(e5, global.callMachineToDailyJsEmitter, r3, "received call machine message");
  } }, { key: "addListenerForMessagesFromDailyJs", value: function(e5, t2, r3) {
    this._addListener(e5, global.dailyJsToCallMachineEmitter, r3, "received daily-js message");
  } }, { key: "sendMessageToCallMachine", value: function(e5, t2) {
    this._sendMessage(e5, global.dailyJsToCallMachineEmitter, "sending message to call machine", t2);
  } }, { key: "sendMessageToDailyJs", value: function(e5) {
    this._sendMessage(e5, global.callMachineToDailyJsEmitter, "sending message to daily-js");
  } }, { key: "removeListener", value: function(e5) {
    var t2 = this._wrappedListeners[e5];
    t2 && (global.callMachineToDailyJsEmitter.removeListener("message", t2), global.dailyJsToCallMachineEmitter.removeListener("message", t2), delete this._wrappedListeners[e5]);
  } }, { key: "_addListener", value: function(e5, t2, r3, n3) {
    var i2 = this, a2 = function(t3) {
      if (t3.callbackStamp && i2._messageCallbacks[t3.callbackStamp]) {
        var n4 = t3.callbackStamp;
        i2._messageCallbacks[n4].call(r3, t3), delete i2._messageCallbacks[n4];
      }
      e5.call(r3, t3);
    };
    this._wrappedListeners[e5] = a2, t2.addListener("message", a2);
  } }, { key: "_sendMessage", value: function(e5, t2, r3, n3) {
    if (n3) {
      var i2 = cr();
      this._messageCallbacks[i2] = n3, e5.callbackStamp = i2;
    }
    t2.emit("message", e5);
  } }]), n2;
}();
var br = Object.prototype.hasOwnProperty;
function wr(e4, t2, r2) {
  for (r2 of e4.keys())
    if (_r(r2, t2))
      return r2;
}
function _r(e4, t2) {
  var r2, n2, i2;
  if (e4 === t2)
    return true;
  if (e4 && t2 && (r2 = e4.constructor) === t2.constructor) {
    if (r2 === Date)
      return e4.getTime() === t2.getTime();
    if (r2 === RegExp)
      return e4.toString() === t2.toString();
    if (r2 === Array) {
      if ((n2 = e4.length) === t2.length)
        for (; n2-- && _r(e4[n2], t2[n2]); )
          ;
      return -1 === n2;
    }
    if (r2 === Set) {
      if (e4.size !== t2.size)
        return false;
      for (n2 of e4) {
        if ((i2 = n2) && "object" == typeof i2 && !(i2 = wr(t2, i2)))
          return false;
        if (!t2.has(i2))
          return false;
      }
      return true;
    }
    if (r2 === Map) {
      if (e4.size !== t2.size)
        return false;
      for (n2 of e4) {
        if ((i2 = n2[0]) && "object" == typeof i2 && !(i2 = wr(t2, i2)))
          return false;
        if (!_r(n2[1], t2.get(i2)))
          return false;
      }
      return true;
    }
    if (r2 === ArrayBuffer)
      e4 = new Uint8Array(e4), t2 = new Uint8Array(t2);
    else if (r2 === DataView) {
      if ((n2 = e4.byteLength) === t2.byteLength)
        for (; n2-- && e4.getInt8(n2) === t2.getInt8(n2); )
          ;
      return -1 === n2;
    }
    if (ArrayBuffer.isView(e4)) {
      if ((n2 = e4.byteLength) === t2.byteLength)
        for (; n2-- && e4[n2] === t2[n2]; )
          ;
      return -1 === n2;
    }
    if (!r2 || "object" == typeof e4) {
      for (r2 in n2 = 0, e4) {
        if (br.call(e4, r2) && ++n2 && !br.call(t2, r2))
          return false;
        if (!(r2 in t2 && _r(e4[r2], t2[r2])))
          return false;
      }
      return Object.keys(t2).length === n2;
    }
  }
  return e4 != e4 && t2 != t2;
}
var kr = "replace";
var Mr = [kr, "shallow-merge"];
var Sr = function() {
  function e4() {
    var t2 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r2 = t2.data, n2 = t2.mergeStrategy, i2 = void 0 === n2 ? kr : n2;
    o(this, e4), e4._validateMergeStrategy(i2), e4._validateData(r2, i2), this.mergeStrategy = i2, this.data = r2;
  }
  return l(e4, [{ key: "isNoOp", value: function() {
    return e4.isNoOpUpdate(this.data, this.mergeStrategy);
  } }], [{ key: "isNoOpUpdate", value: function(e5, t2) {
    return 0 === Object.keys(e5).length && "shallow-merge" === t2;
  } }, { key: "_validateMergeStrategy", value: function(e5) {
    if (!Mr.includes(e5))
      throw Error("Unrecognized mergeStrategy provided. Options are: [".concat(Mr, "]"));
  } }, { key: "_validateData", value: function(e5, t2) {
    if (!function(e6) {
      if (null == e6 || "object" !== f(e6))
        return false;
      var t3 = Object.getPrototypeOf(e6);
      return null == t3 || t3 === Object.prototype;
    }(e5))
      throw Error("Meeting session data must be a plain (map-like) object");
    var r2;
    try {
      if (r2 = JSON.stringify(e5), t2 === kr) {
        var n2 = JSON.parse(r2);
        _r(n2, e5) || console.warn("The meeting session data provided will be modified when serialized.", n2, e5);
      } else if ("shallow-merge" === t2) {
        for (var i2 in e5)
          if (Object.hasOwnProperty.call(e5, i2) && void 0 !== e5[i2]) {
            var a2 = JSON.parse(JSON.stringify(e5[i2]));
            _r(e5[i2], a2) || console.warn("At least one key in the meeting session data provided will be modified when serialized.", a2, e5[i2]);
          }
      }
    } catch (e6) {
      throw Error("Meeting session data must be serializable to JSON: ".concat(e6));
    }
    if (r2.length > 102400)
      throw Error("Meeting session data is too large (".concat(r2.length, " characters). Maximum size suppported is ").concat(102400, "."));
  } }]), e4;
}();
var Cr = function(e4) {
  return -1 !== Function.toString.call(e4).indexOf("[native code]");
};
var Tr = function() {
  if ("undefined" == typeof Reflect || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if ("function" == typeof Proxy)
    return true;
  try {
    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
    })), true;
  } catch (e4) {
    return false;
  }
};
var Or = d(function(e4) {
  function t2(r2, n2, i2) {
    return Tr() ? e4.exports = t2 = Reflect.construct : e4.exports = t2 = function(e5, t3, r3) {
      var n3 = [null];
      n3.push.apply(n3, t3);
      var i3 = new (Function.bind.apply(e5, n3))();
      return r3 && h(i3, r3.prototype), i3;
    }, t2.apply(null, arguments);
  }
  e4.exports = t2;
});
var jr = d(function(e4) {
  function t2(r2) {
    var n2 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
    return e4.exports = t2 = function(e5) {
      if (null === e5 || !Cr(e5))
        return e5;
      if ("function" != typeof e5)
        throw new TypeError("Super expression must either be null or a function");
      if (void 0 !== n2) {
        if (n2.has(e5))
          return n2.get(e5);
        n2.set(e5, t3);
      }
      function t3() {
        return Or(e5, arguments, g(this).constructor);
      }
      return t3.prototype = Object.create(e5.prototype, { constructor: { value: t3, enumerable: false, writable: true, configurable: true } }), h(t3, e5);
    }, t2(r2);
  }
  e4.exports = t2;
});
function Pr(e4) {
  var t2 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if ("function" == typeof Proxy)
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (e5) {
      return false;
    }
  }();
  return function() {
    var r2, n2 = g(e4);
    if (t2) {
      var i2 = g(this).constructor;
      r2 = Reflect.construct(n2, arguments, i2);
    } else
      r2 = n2.apply(this, arguments);
    return v(this, r2);
  };
}
var Ar = function() {
  function e4() {
    o(this, e4), this._currentLoad = null;
  }
  return l(e4, [{ key: "load", value: function(e5, t2, r2, n2) {
    if (this.loaded)
      return window._dailyCallObjectSetup(e5), void r2(true);
    !function(e6, t3) {
      window._dailyConfig || (window._dailyConfig = {}), window._dailyConfig.callFrameId = e6, window._dailyConfig.avoidEval = t3;
    }(e5, t2), this._currentLoad && this._currentLoad.cancel(), this._currentLoad = new Er(function() {
      r2(false);
    }, n2), this._currentLoad.start();
  } }, { key: "cancel", value: function() {
    this._currentLoad && this._currentLoad.cancel();
  } }, { key: "loaded", get: function() {
    return this._currentLoad && this._currentLoad.succeeded;
  } }]), e4;
}();
var Fr = 3;
var Er = function() {
  function e4(t2, r2) {
    o(this, e4), this._attemptsRemaining = Fr, this._currentAttempt = null, this._successCallback = t2, this._failureCallback = r2;
  }
  return l(e4, [{ key: "start", value: function() {
    var e5 = this;
    if (!this._currentAttempt) {
      this._currentAttempt = new Lr(this._successCallback, function t2(r2) {
        e5._currentAttempt.cancelled || (e5._attemptsRemaining--, e5._failureCallback(r2, e5._attemptsRemaining > 0), e5._attemptsRemaining <= 0 || setTimeout(function() {
          e5._currentAttempt.cancelled || (e5._currentAttempt = new Lr(e5._successCallback, t2), e5._currentAttempt.start());
        }, 3e3));
      }), this._currentAttempt.start();
    }
  } }, { key: "cancel", value: function() {
    this._currentAttempt && this._currentAttempt.cancel();
  } }, { key: "cancelled", get: function() {
    return this._currentAttempt && this._currentAttempt.cancelled;
  } }, { key: "succeeded", get: function() {
    return this._currentAttempt && this._currentAttempt.succeeded;
  } }]), e4;
}();
var Ir = function(e4) {
  p(r2, e4);
  var t2 = Pr(r2);
  function r2() {
    return o(this, r2), t2.apply(this, arguments);
  }
  return r2;
}(jr(Error));
var Lr = function() {
  function e4(t2, r2) {
    o(this, e4), this._loadAttemptImpl = Qt() || !_dailyConfig.avoidEval ? new Dr(t2, r2) : new Br(t2, r2);
  }
  return l(e4, [{ key: "start", value: function() {
    var e5 = a(function* () {
      return this._loadAttemptImpl.start();
    });
    return function() {
      return e5.apply(this, arguments);
    };
  }() }, { key: "cancel", value: function() {
    this._loadAttemptImpl.cancel();
  } }, { key: "cancelled", get: function() {
    return this._loadAttemptImpl.cancelled;
  } }, { key: "succeeded", get: function() {
    return this._loadAttemptImpl.succeeded;
  } }]), e4;
}();
var Dr = function() {
  function e4(t2, r2) {
    o(this, e4), this.cancelled = false, this.succeeded = false, this._networkTimedOut = false, this._networkTimeout = null, this._iosCache = "undefined" != typeof iOSCallObjectBundleCache && iOSCallObjectBundleCache, this._refetchHeaders = null, this._successCallback = t2, this._failureCallback = r2;
  }
  return l(e4, [{ key: "start", value: function() {
    var e5 = a(function* () {
      var e6 = ur();
      !(yield this._tryLoadFromIOSCache(e6)) && this._loadFromNetwork(e6);
    });
    return function() {
      return e5.apply(this, arguments);
    };
  }() }, { key: "cancel", value: function() {
    clearTimeout(this._networkTimeout), this.cancelled = true;
  } }, { key: "_tryLoadFromIOSCache", value: function() {
    var e5 = a(function* (e6) {
      if (!this._iosCache)
        return false;
      try {
        var t2 = yield this._iosCache.get(e6);
        return !!this.cancelled || !!t2 && (t2.code ? (Function('"use strict";' + t2.code)(), this.succeeded = true, this._successCallback(), true) : (this._refetchHeaders = t2.refetchHeaders, false));
      } catch (e7) {
        return false;
      }
    });
    return function(t2) {
      return e5.apply(this, arguments);
    };
  }() }, { key: "_loadFromNetwork", value: function() {
    var e5 = a(function* (e6) {
      var t2 = this;
      this._networkTimeout = setTimeout(function() {
        t2._networkTimedOut = true, t2._failureCallback("Timed out (>".concat(2e4, " ms) when loading call object bundle ").concat(e6));
      }, 2e4);
      try {
        var r2 = this._refetchHeaders ? { headers: this._refetchHeaders } : {}, n2 = yield fetch(e6, r2);
        if (clearTimeout(this._networkTimeout), this.cancelled || this._networkTimedOut)
          throw new Ir();
        var i2 = yield this._getBundleCodeFromResponse(e6, n2);
        if (this.cancelled)
          throw new Ir();
        Function('"use strict";' + i2)(), this._iosCache && this._iosCache.set(e6, i2, n2.headers), this.succeeded = true, this._successCallback();
      } catch (t3) {
        if (clearTimeout(this._networkTimeout), t3 instanceof Ir || this.cancelled || this._networkTimedOut)
          return;
        this._failureCallback("Failed to load call object bundle ".concat(e6, ": ").concat(t3));
      }
    });
    return function(t2) {
      return e5.apply(this, arguments);
    };
  }() }, { key: "_getBundleCodeFromResponse", value: function() {
    var e5 = a(function* (e6, t2) {
      if (t2.ok)
        return yield t2.text();
      if (this._iosCache && 304 === t2.status)
        return (yield this._iosCache.renew(e6, t2.headers)).code;
      throw new Error("Received ".concat(t2.status, " response"));
    });
    return function(t2, r2) {
      return e5.apply(this, arguments);
    };
  }() }]), e4;
}();
var Br = function() {
  function e4(t2, r2) {
    o(this, e4), this.cancelled = false, this.succeeded = false, this._successCallback = t2, this._failureCallback = r2, this._attemptId = cr(), this._networkTimeout = null, this._scriptElement = null;
  }
  return l(e4, [{ key: "start", value: function() {
    var e5 = a(function* () {
      window._dailyCallMachineLoadWaitlist || (window._dailyCallMachineLoadWaitlist = /* @__PURE__ */ new Set());
      var e6 = ur();
      "object" === ("undefined" == typeof document ? "undefined" : f(document)) ? this._startLoading(e6) : this._failureCallback("Call object bundle must be loaded in a DOM/web context");
    });
    return function() {
      return e5.apply(this, arguments);
    };
  }() }, { key: "cancel", value: function() {
    this._stopLoading(), this.cancelled = true;
  } }, { key: "_startLoading", value: function(e5) {
    var t2 = this;
    this._signUpForCallMachineLoadWaitlist(), this._networkTimeout = setTimeout(function() {
      t2._stopLoading(), t2._failureCallback("Timed out (>".concat(2e4, " ms) when loading call object bundle ").concat(e5));
    }, 2e4);
    var r2 = document.getElementsByTagName("head")[0], n2 = document.createElement("script");
    this._scriptElement = n2, n2.onload = a(function* () {
      t2._stopLoading(), t2.succeeded = true, t2._successCallback();
    }), n2.onerror = function() {
      var e6 = a(function* (e7) {
        t2._stopLoading(), t2._failureCallback("Failed to load call object bundle ".concat(e7.target.src));
      });
      return function(t3) {
        return e6.apply(this, arguments);
      };
    }(), n2.src = e5, r2.appendChild(n2);
  } }, { key: "_stopLoading", value: function() {
    this._withdrawFromCallMachineLoadWaitlist(), clearTimeout(this._networkTimeout), this._scriptElement && (this._scriptElement.onload = null, this._scriptElement.onerror = null);
  } }, { key: "_signUpForCallMachineLoadWaitlist", value: function() {
    window._dailyCallMachineLoadWaitlist.add(this._attemptId);
  } }, { key: "_withdrawFromCallMachineLoadWaitlist", value: function() {
    window._dailyCallMachineLoadWaitlist.delete(this._attemptId);
  } }]), e4;
}();
var Nr = function(e4, t2) {
  for (var r2 = -1, n2 = null == e4 ? 0 : e4.length, i2 = 0, a2 = []; ++r2 < n2; ) {
    var o2 = e4[r2];
    t2(o2, r2, e4) && (a2[i2++] = o2);
  }
  return a2;
};
var xr = function(e4) {
  return function(t2, r2, n2) {
    for (var i2 = -1, a2 = Object(t2), o2 = n2(t2), s2 = o2.length; s2--; ) {
      var c2 = o2[e4 ? s2 : ++i2];
      if (false === r2(a2[c2], c2, a2))
        break;
    }
    return t2;
  };
}();
var Rr = function(e4, t2) {
  for (var r2 = -1, n2 = Array(e4); ++r2 < e4; )
    n2[r2] = t2(r2);
  return n2;
};
var Vr = "object" == typeof u && u && u.Object === Object && u;
var Ur = "object" == typeof self && self && self.Object === Object && self;
var zr = Vr || Ur || Function("return this")();
var Jr = zr.Symbol;
var qr = Object.prototype;
var Wr = qr.hasOwnProperty;
var Gr = qr.toString;
var Hr = Jr ? Jr.toStringTag : void 0;
var Kr = function(e4) {
  var t2 = Wr.call(e4, Hr), r2 = e4[Hr];
  try {
    e4[Hr] = void 0;
    var n2 = true;
  } catch (e5) {
  }
  var i2 = Gr.call(e4);
  return n2 && (t2 ? e4[Hr] = r2 : delete e4[Hr]), i2;
};
var Qr = Object.prototype.toString;
var $r = function(e4) {
  return Qr.call(e4);
};
var Yr = "[object Null]";
var Zr = "[object Undefined]";
var Xr = Jr ? Jr.toStringTag : void 0;
var en = function(e4) {
  return null == e4 ? void 0 === e4 ? Zr : Yr : Xr && Xr in Object(e4) ? Kr(e4) : $r(e4);
};
var tn = function(e4) {
  return null != e4 && "object" == typeof e4;
};
var rn = "[object Arguments]";
var nn = function(e4) {
  return tn(e4) && en(e4) == rn;
};
var an = Object.prototype;
var on = an.hasOwnProperty;
var sn = an.propertyIsEnumerable;
var cn = nn(function() {
  return arguments;
}()) ? nn : function(e4) {
  return tn(e4) && on.call(e4, "callee") && !sn.call(e4, "callee");
};
var ln = Array.isArray;
var un = function() {
  return false;
};
var dn = d(function(e4, t2) {
  var r2 = t2 && !t2.nodeType && t2, n2 = r2 && e4 && !e4.nodeType && e4, i2 = n2 && n2.exports === r2 ? zr.Buffer : void 0, a2 = (i2 ? i2.isBuffer : void 0) || un;
  e4.exports = a2;
});
var hn = 9007199254740991;
var pn = /^(?:0|[1-9]\d*)$/;
var fn = function(e4, t2) {
  var r2 = typeof e4;
  return !!(t2 = null == t2 ? hn : t2) && ("number" == r2 || "symbol" != r2 && pn.test(e4)) && e4 > -1 && e4 % 1 == 0 && e4 < t2;
};
var vn = 9007199254740991;
var gn = function(e4) {
  return "number" == typeof e4 && e4 > -1 && e4 % 1 == 0 && e4 <= vn;
};
var mn = {};
mn["[object Float32Array]"] = mn["[object Float64Array]"] = mn["[object Int8Array]"] = mn["[object Int16Array]"] = mn["[object Int32Array]"] = mn["[object Uint8Array]"] = mn["[object Uint8ClampedArray]"] = mn["[object Uint16Array]"] = mn["[object Uint32Array]"] = true, mn["[object Arguments]"] = mn["[object Array]"] = mn["[object ArrayBuffer]"] = mn["[object Boolean]"] = mn["[object DataView]"] = mn["[object Date]"] = mn["[object Error]"] = mn["[object Function]"] = mn["[object Map]"] = mn["[object Number]"] = mn["[object Object]"] = mn["[object RegExp]"] = mn["[object Set]"] = mn["[object String]"] = mn["[object WeakMap]"] = false;
var yn = function(e4) {
  return tn(e4) && gn(e4.length) && !!mn[en(e4)];
};
var bn = function(e4) {
  return function(t2) {
    return e4(t2);
  };
};
var wn = d(function(e4, t2) {
  var r2 = t2 && !t2.nodeType && t2, n2 = r2 && e4 && !e4.nodeType && e4, i2 = n2 && n2.exports === r2 && Vr.process, a2 = function() {
    try {
      var e5 = n2 && n2.require && n2.require("util").types;
      return e5 || i2 && i2.binding && i2.binding("util");
    } catch (e6) {
    }
  }();
  e4.exports = a2;
});
var _n = wn && wn.isTypedArray;
var kn = _n ? bn(_n) : yn;
var Mn = Object.prototype.hasOwnProperty;
var Sn = function(e4, t2) {
  var r2 = ln(e4), n2 = !r2 && cn(e4), i2 = !r2 && !n2 && dn(e4), a2 = !r2 && !n2 && !i2 && kn(e4), o2 = r2 || n2 || i2 || a2, s2 = o2 ? Rr(e4.length, String) : [], c2 = s2.length;
  for (var l2 in e4)
    !t2 && !Mn.call(e4, l2) || o2 && ("length" == l2 || i2 && ("offset" == l2 || "parent" == l2) || a2 && ("buffer" == l2 || "byteLength" == l2 || "byteOffset" == l2) || fn(l2, c2)) || s2.push(l2);
  return s2;
};
var Cn = Object.prototype;
var Tn = function(e4) {
  var t2 = e4 && e4.constructor;
  return e4 === ("function" == typeof t2 && t2.prototype || Cn);
};
var On = function(e4, t2) {
  return function(r2) {
    return e4(t2(r2));
  };
}(Object.keys, Object);
var jn = Object.prototype.hasOwnProperty;
var Pn = function(e4) {
  if (!Tn(e4))
    return On(e4);
  var t2 = [];
  for (var r2 in Object(e4))
    jn.call(e4, r2) && "constructor" != r2 && t2.push(r2);
  return t2;
};
var An = function(e4) {
  var t2 = typeof e4;
  return null != e4 && ("object" == t2 || "function" == t2);
};
var Fn = "[object AsyncFunction]";
var En = "[object Function]";
var In = "[object GeneratorFunction]";
var Ln = "[object Proxy]";
var Dn = function(e4) {
  if (!An(e4))
    return false;
  var t2 = en(e4);
  return t2 == En || t2 == In || t2 == Fn || t2 == Ln;
};
var Bn = function(e4) {
  return null != e4 && gn(e4.length) && !Dn(e4);
};
var Nn = function(e4) {
  return Bn(e4) ? Sn(e4) : Pn(e4);
};
var xn = function(e4, t2) {
  return function(r2, n2) {
    if (null == r2)
      return r2;
    if (!Bn(r2))
      return e4(r2, n2);
    for (var i2 = r2.length, a2 = t2 ? i2 : -1, o2 = Object(r2); (t2 ? a2-- : ++a2 < i2) && false !== n2(o2[a2], a2, o2); )
      ;
    return r2;
  };
}(function(e4, t2) {
  return e4 && xr(e4, t2, Nn);
});
var Rn = function(e4, t2) {
  var r2 = [];
  return xn(e4, function(e5, n2, i2) {
    t2(e5, n2, i2) && r2.push(e5);
  }), r2;
};
var Vn = function() {
  this.__data__ = [], this.size = 0;
};
var Un = function(e4, t2) {
  return e4 === t2 || e4 != e4 && t2 != t2;
};
var zn = function(e4, t2) {
  for (var r2 = e4.length; r2--; )
    if (Un(e4[r2][0], t2))
      return r2;
  return -1;
};
var Jn = Array.prototype.splice;
var qn = function(e4) {
  var t2 = this.__data__, r2 = zn(t2, e4);
  return !(r2 < 0 || (r2 == t2.length - 1 ? t2.pop() : Jn.call(t2, r2, 1), --this.size, 0));
};
var Wn = function(e4) {
  var t2 = this.__data__, r2 = zn(t2, e4);
  return r2 < 0 ? void 0 : t2[r2][1];
};
var Gn = function(e4) {
  return zn(this.__data__, e4) > -1;
};
var Hn = function(e4, t2) {
  var r2 = this.__data__, n2 = zn(r2, e4);
  return n2 < 0 ? (++this.size, r2.push([e4, t2])) : r2[n2][1] = t2, this;
};
function Kn(e4) {
  var t2 = -1, r2 = null == e4 ? 0 : e4.length;
  for (this.clear(); ++t2 < r2; ) {
    var n2 = e4[t2];
    this.set(n2[0], n2[1]);
  }
}
Kn.prototype.clear = Vn, Kn.prototype.delete = qn, Kn.prototype.get = Wn, Kn.prototype.has = Gn, Kn.prototype.set = Hn;
var Qn = Kn;
var $n = function() {
  this.__data__ = new Qn(), this.size = 0;
};
var Yn = function(e4) {
  var t2 = this.__data__, r2 = t2.delete(e4);
  return this.size = t2.size, r2;
};
var Zn = function(e4) {
  return this.__data__.get(e4);
};
var Xn;
var ei = function(e4) {
  return this.__data__.has(e4);
};
var ti = zr["__core-js_shared__"];
var ri = (Xn = /[^.]+$/.exec(ti && ti.keys && ti.keys.IE_PROTO || "")) ? "Symbol(src)_1." + Xn : "";
var ni = function(e4) {
  return !!ri && ri in e4;
};
var ii = Function.prototype.toString;
var ai = function(e4) {
  if (null != e4) {
    try {
      return ii.call(e4);
    } catch (e5) {
    }
    try {
      return e4 + "";
    } catch (e5) {
    }
  }
  return "";
};
var oi = /^\[object .+?Constructor\]$/;
var si = Function.prototype;
var ci = Object.prototype;
var li = si.toString;
var ui = ci.hasOwnProperty;
var di = RegExp("^" + li.call(ui).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
var hi = function(e4) {
  return !(!An(e4) || ni(e4)) && (Dn(e4) ? di : oi).test(ai(e4));
};
var pi = function(e4, t2) {
  return null == e4 ? void 0 : e4[t2];
};
var fi = function(e4, t2) {
  var r2 = pi(e4, t2);
  return hi(r2) ? r2 : void 0;
};
var vi = fi(zr, "Map");
var gi = fi(Object, "create");
var mi = function() {
  this.__data__ = gi ? gi(null) : {}, this.size = 0;
};
var yi = function(e4) {
  var t2 = this.has(e4) && delete this.__data__[e4];
  return this.size -= t2 ? 1 : 0, t2;
};
var bi = "__lodash_hash_undefined__";
var wi = Object.prototype.hasOwnProperty;
var _i = function(e4) {
  var t2 = this.__data__;
  if (gi) {
    var r2 = t2[e4];
    return r2 === bi ? void 0 : r2;
  }
  return wi.call(t2, e4) ? t2[e4] : void 0;
};
var ki = Object.prototype.hasOwnProperty;
var Mi = function(e4) {
  var t2 = this.__data__;
  return gi ? void 0 !== t2[e4] : ki.call(t2, e4);
};
var Si = "__lodash_hash_undefined__";
var Ci = function(e4, t2) {
  var r2 = this.__data__;
  return this.size += this.has(e4) ? 0 : 1, r2[e4] = gi && void 0 === t2 ? Si : t2, this;
};
function Ti(e4) {
  var t2 = -1, r2 = null == e4 ? 0 : e4.length;
  for (this.clear(); ++t2 < r2; ) {
    var n2 = e4[t2];
    this.set(n2[0], n2[1]);
  }
}
Ti.prototype.clear = mi, Ti.prototype.delete = yi, Ti.prototype.get = _i, Ti.prototype.has = Mi, Ti.prototype.set = Ci;
var Oi = Ti;
var ji = function() {
  this.size = 0, this.__data__ = { hash: new Oi(), map: new (vi || Qn)(), string: new Oi() };
};
var Pi = function(e4) {
  var t2 = typeof e4;
  return "string" == t2 || "number" == t2 || "symbol" == t2 || "boolean" == t2 ? "__proto__" !== e4 : null === e4;
};
var Ai = function(e4, t2) {
  var r2 = e4.__data__;
  return Pi(t2) ? r2["string" == typeof t2 ? "string" : "hash"] : r2.map;
};
var Fi = function(e4) {
  var t2 = Ai(this, e4).delete(e4);
  return this.size -= t2 ? 1 : 0, t2;
};
var Ei = function(e4) {
  return Ai(this, e4).get(e4);
};
var Ii = function(e4) {
  return Ai(this, e4).has(e4);
};
var Li = function(e4, t2) {
  var r2 = Ai(this, e4), n2 = r2.size;
  return r2.set(e4, t2), this.size += r2.size == n2 ? 0 : 1, this;
};
function Di(e4) {
  var t2 = -1, r2 = null == e4 ? 0 : e4.length;
  for (this.clear(); ++t2 < r2; ) {
    var n2 = e4[t2];
    this.set(n2[0], n2[1]);
  }
}
Di.prototype.clear = ji, Di.prototype.delete = Fi, Di.prototype.get = Ei, Di.prototype.has = Ii, Di.prototype.set = Li;
var Bi = Di;
var Ni = 200;
var xi = function(e4, t2) {
  var r2 = this.__data__;
  if (r2 instanceof Qn) {
    var n2 = r2.__data__;
    if (!vi || n2.length < Ni - 1)
      return n2.push([e4, t2]), this.size = ++r2.size, this;
    r2 = this.__data__ = new Bi(n2);
  }
  return r2.set(e4, t2), this.size = r2.size, this;
};
function Ri(e4) {
  var t2 = this.__data__ = new Qn(e4);
  this.size = t2.size;
}
Ri.prototype.clear = $n, Ri.prototype.delete = Yn, Ri.prototype.get = Zn, Ri.prototype.has = ei, Ri.prototype.set = xi;
var Vi = Ri;
var Ui = "__lodash_hash_undefined__";
var zi = function(e4) {
  return this.__data__.set(e4, Ui), this;
};
var Ji = function(e4) {
  return this.__data__.has(e4);
};
function qi(e4) {
  var t2 = -1, r2 = null == e4 ? 0 : e4.length;
  for (this.__data__ = new Bi(); ++t2 < r2; )
    this.add(e4[t2]);
}
qi.prototype.add = qi.prototype.push = zi, qi.prototype.has = Ji;
var Wi = qi;
var Gi = function(e4, t2) {
  for (var r2 = -1, n2 = null == e4 ? 0 : e4.length; ++r2 < n2; )
    if (t2(e4[r2], r2, e4))
      return true;
  return false;
};
var Hi = function(e4, t2) {
  return e4.has(t2);
};
var Ki = 1;
var Qi = 2;
var $i = function(e4, t2, r2, n2, i2, a2) {
  var o2 = r2 & Ki, s2 = e4.length, c2 = t2.length;
  if (s2 != c2 && !(o2 && c2 > s2))
    return false;
  var l2 = a2.get(e4), u2 = a2.get(t2);
  if (l2 && u2)
    return l2 == t2 && u2 == e4;
  var d2 = -1, h2 = true, p2 = r2 & Qi ? new Wi() : void 0;
  for (a2.set(e4, t2), a2.set(t2, e4); ++d2 < s2; ) {
    var f2 = e4[d2], v2 = t2[d2];
    if (n2)
      var g2 = o2 ? n2(v2, f2, d2, t2, e4, a2) : n2(f2, v2, d2, e4, t2, a2);
    if (void 0 !== g2) {
      if (g2)
        continue;
      h2 = false;
      break;
    }
    if (p2) {
      if (!Gi(t2, function(e5, t3) {
        if (!Hi(p2, t3) && (f2 === e5 || i2(f2, e5, r2, n2, a2)))
          return p2.push(t3);
      })) {
        h2 = false;
        break;
      }
    } else if (f2 !== v2 && !i2(f2, v2, r2, n2, a2)) {
      h2 = false;
      break;
    }
  }
  return a2.delete(e4), a2.delete(t2), h2;
};
var Yi = zr.Uint8Array;
var Zi = function(e4) {
  var t2 = -1, r2 = Array(e4.size);
  return e4.forEach(function(e5, n2) {
    r2[++t2] = [n2, e5];
  }), r2;
};
var Xi = function(e4) {
  var t2 = -1, r2 = Array(e4.size);
  return e4.forEach(function(e5) {
    r2[++t2] = e5;
  }), r2;
};
var ea = 1;
var ta = 2;
var ra = "[object Boolean]";
var na = "[object Date]";
var ia = "[object Error]";
var aa = "[object Map]";
var oa = "[object Number]";
var sa = "[object RegExp]";
var ca = "[object Set]";
var la = "[object String]";
var ua = "[object Symbol]";
var da = "[object ArrayBuffer]";
var ha = "[object DataView]";
var pa = Jr ? Jr.prototype : void 0;
var fa = pa ? pa.valueOf : void 0;
var va = function(e4, t2, r2, n2, i2, a2, o2) {
  switch (r2) {
    case ha:
      if (e4.byteLength != t2.byteLength || e4.byteOffset != t2.byteOffset)
        return false;
      e4 = e4.buffer, t2 = t2.buffer;
    case da:
      return !(e4.byteLength != t2.byteLength || !a2(new Yi(e4), new Yi(t2)));
    case ra:
    case na:
    case oa:
      return Un(+e4, +t2);
    case ia:
      return e4.name == t2.name && e4.message == t2.message;
    case sa:
    case la:
      return e4 == t2 + "";
    case aa:
      var s2 = Zi;
    case ca:
      var c2 = n2 & ea;
      if (s2 || (s2 = Xi), e4.size != t2.size && !c2)
        return false;
      var l2 = o2.get(e4);
      if (l2)
        return l2 == t2;
      n2 |= ta, o2.set(e4, t2);
      var u2 = $i(s2(e4), s2(t2), n2, i2, a2, o2);
      return o2.delete(e4), u2;
    case ua:
      if (fa)
        return fa.call(e4) == fa.call(t2);
  }
  return false;
};
var ga = function(e4, t2) {
  for (var r2 = -1, n2 = t2.length, i2 = e4.length; ++r2 < n2; )
    e4[i2 + r2] = t2[r2];
  return e4;
};
var ma = function(e4, t2, r2) {
  var n2 = t2(e4);
  return ln(e4) ? n2 : ga(n2, r2(e4));
};
var ya = function() {
  return [];
};
var ba = Object.prototype.propertyIsEnumerable;
var wa = Object.getOwnPropertySymbols;
var _a = wa ? function(e4) {
  return null == e4 ? [] : (e4 = Object(e4), Nr(wa(e4), function(t2) {
    return ba.call(e4, t2);
  }));
} : ya;
var ka = function(e4) {
  return ma(e4, Nn, _a);
};
var Ma = 1;
var Sa = Object.prototype.hasOwnProperty;
var Ca = function(e4, t2, r2, n2, i2, a2) {
  var o2 = r2 & Ma, s2 = ka(e4), c2 = s2.length;
  if (c2 != ka(t2).length && !o2)
    return false;
  for (var l2 = c2; l2--; ) {
    var u2 = s2[l2];
    if (!(o2 ? u2 in t2 : Sa.call(t2, u2)))
      return false;
  }
  var d2 = a2.get(e4), h2 = a2.get(t2);
  if (d2 && h2)
    return d2 == t2 && h2 == e4;
  var p2 = true;
  a2.set(e4, t2), a2.set(t2, e4);
  for (var f2 = o2; ++l2 < c2; ) {
    var v2 = e4[u2 = s2[l2]], g2 = t2[u2];
    if (n2)
      var m2 = o2 ? n2(g2, v2, u2, t2, e4, a2) : n2(v2, g2, u2, e4, t2, a2);
    if (!(void 0 === m2 ? v2 === g2 || i2(v2, g2, r2, n2, a2) : m2)) {
      p2 = false;
      break;
    }
    f2 || (f2 = "constructor" == u2);
  }
  if (p2 && !f2) {
    var y2 = e4.constructor, b2 = t2.constructor;
    y2 != b2 && "constructor" in e4 && "constructor" in t2 && !("function" == typeof y2 && y2 instanceof y2 && "function" == typeof b2 && b2 instanceof b2) && (p2 = false);
  }
  return a2.delete(e4), a2.delete(t2), p2;
};
var Ta = fi(zr, "DataView");
var Oa = fi(zr, "Promise");
var ja = fi(zr, "Set");
var Pa = fi(zr, "WeakMap");
var Aa = ai(Ta);
var Fa = ai(vi);
var Ea = ai(Oa);
var Ia = ai(ja);
var La = ai(Pa);
var Da = en;
(Ta && "[object DataView]" != Da(new Ta(new ArrayBuffer(1))) || vi && "[object Map]" != Da(new vi()) || Oa && "[object Promise]" != Da(Oa.resolve()) || ja && "[object Set]" != Da(new ja()) || Pa && "[object WeakMap]" != Da(new Pa())) && (Da = function(e4) {
  var t2 = en(e4), r2 = "[object Object]" == t2 ? e4.constructor : void 0, n2 = r2 ? ai(r2) : "";
  if (n2)
    switch (n2) {
      case Aa:
        return "[object DataView]";
      case Fa:
        return "[object Map]";
      case Ea:
        return "[object Promise]";
      case Ia:
        return "[object Set]";
      case La:
        return "[object WeakMap]";
    }
  return t2;
});
var Ba = Da;
var Na = 1;
var xa = "[object Arguments]";
var Ra = "[object Array]";
var Va = "[object Object]";
var Ua = Object.prototype.hasOwnProperty;
var za = function(e4, t2, r2, n2, i2, a2) {
  var o2 = ln(e4), s2 = ln(t2), c2 = o2 ? Ra : Ba(e4), l2 = s2 ? Ra : Ba(t2), u2 = (c2 = c2 == xa ? Va : c2) == Va, d2 = (l2 = l2 == xa ? Va : l2) == Va, h2 = c2 == l2;
  if (h2 && dn(e4)) {
    if (!dn(t2))
      return false;
    o2 = true, u2 = false;
  }
  if (h2 && !u2)
    return a2 || (a2 = new Vi()), o2 || kn(e4) ? $i(e4, t2, r2, n2, i2, a2) : va(e4, t2, c2, r2, n2, i2, a2);
  if (!(r2 & Na)) {
    var p2 = u2 && Ua.call(e4, "__wrapped__"), f2 = d2 && Ua.call(t2, "__wrapped__");
    if (p2 || f2) {
      var v2 = p2 ? e4.value() : e4, g2 = f2 ? t2.value() : t2;
      return a2 || (a2 = new Vi()), i2(v2, g2, r2, n2, a2);
    }
  }
  return !!h2 && (a2 || (a2 = new Vi()), Ca(e4, t2, r2, n2, i2, a2));
};
var Ja = function e2(t2, r2, n2, i2, a2) {
  return t2 === r2 || (null == t2 || null == r2 || !tn(t2) && !tn(r2) ? t2 != t2 && r2 != r2 : za(t2, r2, n2, i2, e2, a2));
};
var qa = 1;
var Wa = 2;
var Ga = function(e4, t2, r2, n2) {
  var i2 = r2.length, a2 = i2, o2 = !n2;
  if (null == e4)
    return !a2;
  for (e4 = Object(e4); i2--; ) {
    var s2 = r2[i2];
    if (o2 && s2[2] ? s2[1] !== e4[s2[0]] : !(s2[0] in e4))
      return false;
  }
  for (; ++i2 < a2; ) {
    var c2 = (s2 = r2[i2])[0], l2 = e4[c2], u2 = s2[1];
    if (o2 && s2[2]) {
      if (void 0 === l2 && !(c2 in e4))
        return false;
    } else {
      var d2 = new Vi();
      if (n2)
        var h2 = n2(l2, u2, c2, e4, t2, d2);
      if (!(void 0 === h2 ? Ja(u2, l2, qa | Wa, n2, d2) : h2))
        return false;
    }
  }
  return true;
};
var Ha = function(e4) {
  return e4 == e4 && !An(e4);
};
var Ka = function(e4) {
  for (var t2 = Nn(e4), r2 = t2.length; r2--; ) {
    var n2 = t2[r2], i2 = e4[n2];
    t2[r2] = [n2, i2, Ha(i2)];
  }
  return t2;
};
var Qa = function(e4, t2) {
  return function(r2) {
    return null != r2 && r2[e4] === t2 && (void 0 !== t2 || e4 in Object(r2));
  };
};
var $a = function(e4) {
  var t2 = Ka(e4);
  return 1 == t2.length && t2[0][2] ? Qa(t2[0][0], t2[0][1]) : function(r2) {
    return r2 === e4 || Ga(r2, e4, t2);
  };
};
var Ya = "[object Symbol]";
var Za = function(e4) {
  return "symbol" == typeof e4 || tn(e4) && en(e4) == Ya;
};
var Xa = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var eo = /^\w*$/;
var to = function(e4, t2) {
  if (ln(e4))
    return false;
  var r2 = typeof e4;
  return !("number" != r2 && "symbol" != r2 && "boolean" != r2 && null != e4 && !Za(e4)) || eo.test(e4) || !Xa.test(e4) || null != t2 && e4 in Object(t2);
};
var ro = "Expected a function";
function no(e4, t2) {
  if ("function" != typeof e4 || null != t2 && "function" != typeof t2)
    throw new TypeError(ro);
  var r2 = function() {
    var n2 = arguments, i2 = t2 ? t2.apply(this, n2) : n2[0], a2 = r2.cache;
    if (a2.has(i2))
      return a2.get(i2);
    var o2 = e4.apply(this, n2);
    return r2.cache = a2.set(i2, o2) || a2, o2;
  };
  return r2.cache = new (no.Cache || Bi)(), r2;
}
no.Cache = Bi;
var io = no;
var ao = 500;
var oo = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var so = /\\(\\)?/g;
var co = function(e4) {
  var t2 = io(e4, function(e5) {
    return r2.size === ao && r2.clear(), e5;
  }), r2 = t2.cache;
  return t2;
}(function(e4) {
  var t2 = [];
  return 46 === e4.charCodeAt(0) && t2.push(""), e4.replace(oo, function(e5, r2, n2, i2) {
    t2.push(n2 ? i2.replace(so, "$1") : r2 || e5);
  }), t2;
});
var lo = function(e4, t2) {
  for (var r2 = -1, n2 = null == e4 ? 0 : e4.length, i2 = Array(n2); ++r2 < n2; )
    i2[r2] = t2(e4[r2], r2, e4);
  return i2;
};
var uo = 1 / 0;
var ho = Jr ? Jr.prototype : void 0;
var po = ho ? ho.toString : void 0;
var fo = function e3(t2) {
  if ("string" == typeof t2)
    return t2;
  if (ln(t2))
    return lo(t2, e3) + "";
  if (Za(t2))
    return po ? po.call(t2) : "";
  var r2 = t2 + "";
  return "0" == r2 && 1 / t2 == -uo ? "-0" : r2;
};
var vo = function(e4) {
  return null == e4 ? "" : fo(e4);
};
var go = function(e4, t2) {
  return ln(e4) ? e4 : to(e4, t2) ? [e4] : co(vo(e4));
};
var mo = 1 / 0;
var yo = function(e4) {
  if ("string" == typeof e4 || Za(e4))
    return e4;
  var t2 = e4 + "";
  return "0" == t2 && 1 / e4 == -mo ? "-0" : t2;
};
var bo = function(e4, t2) {
  for (var r2 = 0, n2 = (t2 = go(t2, e4)).length; null != e4 && r2 < n2; )
    e4 = e4[yo(t2[r2++])];
  return r2 && r2 == n2 ? e4 : void 0;
};
var wo = function(e4, t2, r2) {
  var n2 = null == e4 ? void 0 : bo(e4, t2);
  return void 0 === n2 ? r2 : n2;
};
var _o = function(e4, t2) {
  return null != e4 && t2 in Object(e4);
};
var ko = function(e4, t2, r2) {
  for (var n2 = -1, i2 = (t2 = go(t2, e4)).length, a2 = false; ++n2 < i2; ) {
    var o2 = yo(t2[n2]);
    if (!(a2 = null != e4 && r2(e4, o2)))
      break;
    e4 = e4[o2];
  }
  return a2 || ++n2 != i2 ? a2 : !!(i2 = null == e4 ? 0 : e4.length) && gn(i2) && fn(o2, i2) && (ln(e4) || cn(e4));
};
var Mo = function(e4, t2) {
  return null != e4 && ko(e4, t2, _o);
};
var So = 1;
var Co = 2;
var To = function(e4, t2) {
  return to(e4) && Ha(t2) ? Qa(yo(e4), t2) : function(r2) {
    var n2 = wo(r2, e4);
    return void 0 === n2 && n2 === t2 ? Mo(r2, e4) : Ja(t2, n2, So | Co);
  };
};
var Oo = function(e4) {
  return e4;
};
var jo = function(e4) {
  return function(t2) {
    return null == t2 ? void 0 : t2[e4];
  };
};
var Po = function(e4) {
  return function(t2) {
    return bo(t2, e4);
  };
};
var Ao = function(e4) {
  return to(e4) ? jo(yo(e4)) : Po(e4);
};
var Fo = function(e4) {
  return "function" == typeof e4 ? e4 : null == e4 ? Oo : "object" == typeof e4 ? ln(e4) ? To(e4[0], e4[1]) : $a(e4) : Ao(e4);
};
var Eo = function(e4, t2) {
  return (ln(e4) ? Nr : Rn)(e4, Fo(t2));
};
var Io = function(e4, t2) {
  var r2 = -1, n2 = Bn(e4) ? Array(e4.length) : [];
  return xn(e4, function(e5, i2, a2) {
    n2[++r2] = t2(e5, i2, a2);
  }), n2;
};
var Lo = function(e4, t2) {
  var r2 = e4.length;
  for (e4.sort(t2); r2--; )
    e4[r2] = e4[r2].value;
  return e4;
};
var Do = function(e4, t2) {
  if (e4 !== t2) {
    var r2 = void 0 !== e4, n2 = null === e4, i2 = e4 == e4, a2 = Za(e4), o2 = void 0 !== t2, s2 = null === t2, c2 = t2 == t2, l2 = Za(t2);
    if (!s2 && !l2 && !a2 && e4 > t2 || a2 && o2 && c2 && !s2 && !l2 || n2 && o2 && c2 || !r2 && c2 || !i2)
      return 1;
    if (!n2 && !a2 && !l2 && e4 < t2 || l2 && r2 && i2 && !n2 && !a2 || s2 && r2 && i2 || !o2 && i2 || !c2)
      return -1;
  }
  return 0;
};
var Bo = function(e4, t2, r2) {
  for (var n2 = -1, i2 = e4.criteria, a2 = t2.criteria, o2 = i2.length, s2 = r2.length; ++n2 < o2; ) {
    var c2 = Do(i2[n2], a2[n2]);
    if (c2)
      return n2 >= s2 ? c2 : c2 * ("desc" == r2[n2] ? -1 : 1);
  }
  return e4.index - t2.index;
};
var No = function(e4, t2, r2) {
  t2 = t2.length ? lo(t2, function(e5) {
    return ln(e5) ? function(t3) {
      return bo(t3, 1 === e5.length ? e5[0] : e5);
    } : e5;
  }) : [Oo];
  var n2 = -1;
  t2 = lo(t2, bn(Fo));
  var i2 = Io(e4, function(e5, r3, i3) {
    return { criteria: lo(t2, function(t3) {
      return t3(e5);
    }), index: ++n2, value: e5 };
  });
  return Lo(i2, function(e5, t3) {
    return Bo(e5, t3, r2);
  });
};
var xo;
var Ro = function(e4, t2, r2, n2) {
  return null == e4 ? [] : (ln(t2) || (t2 = null == t2 ? [] : [t2]), ln(r2 = n2 ? void 0 : r2) || (r2 = null == r2 ? [] : [r2]), No(e4, t2, r2));
};
var Vo = function(e4, t2, r2) {
  return true === Jo(e4.local, t2, r2);
};
var Uo = function(e4, t2, r2) {
  return e4.local.streams && e4.local.streams[t2] && e4.local.streams[t2].stream && e4.local.streams[t2].stream["get".concat("video" === r2 ? "Video" : "Audio", "Tracks")]()[0];
};
var zo = function(e4, t2, r2, n2) {
  var i2 = qo(e4, t2, r2, n2);
  return i2 && i2.pendingTrack;
};
var Jo = function(e4, t2, r2) {
  if (!e4)
    return false;
  var n2 = function(e5) {
    switch (e5) {
      case "avatar":
        return true;
      case "staged":
        return e5;
      default:
        return !!e5;
    }
  }, i2 = e4.public.subscribedTracks;
  return i2 && i2[t2] ? -1 === ["cam-audio", "cam-video", "screen-video", "screen-audio", "rmpAudio", "rmpVideo"].indexOf(r2) && i2[t2].custom ? [true, "staged"].includes(i2[t2].custom) ? n2(i2[t2].custom) : n2(i2[t2].custom[r2]) : n2(i2[t2][r2]) : !i2 || n2(i2.ALL);
};
var qo = function(e4, t2, r2, n2) {
  var i2 = Ro(Eo(e4.streams, function(e5) {
    return e5.participantId === t2 && e5.type === r2 && e5.pendingTrack && e5.pendingTrack.kind === n2;
  }), "starttime", "desc");
  return i2 && i2[0];
};
var Wo = function(e4, t2) {
  var r2 = e4.local.public.customTracks;
  if (r2 && r2[t2])
    return r2[t2].track;
};
function Go(e4) {
  for (var t2 = store.getState(), r2 = 0, n2 = ["cam", "screen"]; r2 < n2.length; r2++)
    for (var i2 = n2[r2], a2 = 0, o2 = ["video", "audio"]; a2 < o2.length; a2++) {
      var s2 = o2[a2], c2 = "cam" === i2 ? s2 : "screen".concat(s2.charAt(0).toUpperCase() + s2.slice(1)), l2 = e4.tracks[c2];
      if (l2) {
        var u2 = e4.local ? Uo(t2, i2, s2) : zo(t2, e4.session_id, i2, s2);
        "playable" === l2.state && (l2.track = u2), l2.persistentTrack = u2;
      }
    }
}
function Ho(e4) {
  try {
    var t2 = store.getState();
    for (var r2 in e4.tracks)
      if (!Ko(r2)) {
        var n2 = e4.tracks[r2].kind;
        if (n2) {
          var i2 = e4.tracks[r2];
          if (i2) {
            var a2 = e4.local ? Wo(t2, r2, n2) : zo(t2, e4.session_id, r2, n2);
            "playable" === i2.state && (e4.tracks[r2].track = a2), i2.persistentTrack = a2;
          }
        } else
          console.error("unknown type for custom track");
      }
  } catch (e5) {
    console.error(e5);
  }
}
function Ko(e4) {
  return ["video", "audio", "screenVideo", "screenAudio"].includes(e4);
}
function Qo(e4, t2) {
  var r2 = store.getState();
  if (e4.local) {
    if (e4.audio)
      try {
        e4.audioTrack = r2.local.streams.cam.stream.getAudioTracks()[0], e4.audioTrack || (e4.audio = false);
      } catch (e5) {
      }
    if (e4.video)
      try {
        e4.videoTrack = r2.local.streams.cam.stream.getVideoTracks()[0], e4.videoTrack || (e4.video = false);
      } catch (e5) {
      }
    if (e4.screen)
      try {
        e4.screenVideoTrack = r2.local.streams.screen.stream.getVideoTracks()[0], e4.screenAudioTrack = r2.local.streams.screen.stream.getAudioTracks()[0], e4.screenVideoTrack || e4.screenAudioTrack || (e4.screen = false);
      } catch (e5) {
      }
  } else {
    var n2 = true;
    try {
      var i2 = r2.participants[e4.session_id];
      i2 && i2.public && i2.public.rtcType && "peer-to-peer" === i2.public.rtcType.impl && i2.private && !["connected", "completed"].includes(i2.private.peeringState) && (n2 = false);
    } catch (e5) {
      console.error(e5);
    }
    if (!n2)
      return e4.audio = false, e4.audioTrack = false, e4.video = false, e4.videoTrack = false, e4.screen = false, void (e4.screenTrack = false);
    try {
      r2.streams;
      if (e4.audio && Vo(r2, e4.session_id, "cam-audio")) {
        var a2 = zo(r2, e4.session_id, "cam", "audio");
        a2 && (t2 && t2.audioTrack && t2.audioTrack.id === a2.id ? e4.audioTrack = a2 : a2.muted || (e4.audioTrack = a2)), e4.audioTrack || (e4.audio = false);
      }
      if (e4.video && Vo(r2, e4.session_id, "cam-video")) {
        var o2 = zo(r2, e4.session_id, "cam", "video");
        o2 && (t2 && t2.videoTrack && t2.videoTrack.id === o2.id ? e4.videoTrack = o2 : o2.muted || (e4.videoTrack = o2)), e4.videoTrack || (e4.video = false);
      }
      if (e4.screen && Vo(r2, e4.session_id, "screen-audio")) {
        var s2 = zo(r2, e4.session_id, "screen", "audio");
        s2 && (t2 && t2.screenAudioTrack && t2.screenAudioTrack.id === s2.id ? e4.screenAudioTrack = s2 : s2.muted || (e4.screenAudioTrack = s2));
      }
      if (e4.screen && Vo(r2, e4.session_id, "screen-video")) {
        var c2 = zo(r2, e4.session_id, "screen", "video");
        c2 && (t2 && t2.screenVideoTrack && t2.screenVideoTrack.id === c2.id ? e4.screenVideoTrack = c2 : c2.muted || (e4.screenVideoTrack = c2));
      }
      e4.screenVideoTrack || e4.screenAudioTrack || (e4.screen = false);
    } catch (e5) {
      console.error("unexpected error matching up tracks", e5);
    }
  }
}
function $o(e4, t2) {
  var r2 = Object.keys(e4);
  if (Object.getOwnPropertySymbols) {
    var n2 = Object.getOwnPropertySymbols(e4);
    t2 && (n2 = n2.filter(function(t3) {
      return Object.getOwnPropertyDescriptor(e4, t3).enumerable;
    })), r2.push.apply(r2, n2);
  }
  return r2;
}
function Yo(e4) {
  for (var t2 = 1; t2 < arguments.length; t2++) {
    var r2 = null != arguments[t2] ? arguments[t2] : {};
    t2 % 2 ? $o(Object(r2), true).forEach(function(t3) {
      m(e4, t3, r2[t3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e4, Object.getOwnPropertyDescriptors(r2)) : $o(Object(r2)).forEach(function(t3) {
      Object.defineProperty(e4, t3, Object.getOwnPropertyDescriptor(r2, t3));
    });
  }
  return e4;
}
function Zo(e4) {
  var t2 = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if ("function" == typeof Proxy)
      return true;
    try {
      return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
      })), true;
    } catch (e5) {
      return false;
    }
  }();
  return function() {
    var r2, n2 = g(e4);
    if (t2) {
      var i2 = g(this).constructor;
      r2 = Reflect.construct(n2, arguments, i2);
    } else
      r2 = n2.apply(this, arguments);
    return v(this, r2);
  };
}
function Xo(e4, t2) {
  var r2;
  if ("undefined" == typeof Symbol || null == e4[Symbol.iterator]) {
    if (Array.isArray(e4) || (r2 = function(e5, t3) {
      if (!e5)
        return;
      if ("string" == typeof e5)
        return es(e5, t3);
      var r3 = Object.prototype.toString.call(e5).slice(8, -1);
      "Object" === r3 && e5.constructor && (r3 = e5.constructor.name);
      if ("Map" === r3 || "Set" === r3)
        return Array.from(e5);
      if ("Arguments" === r3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r3))
        return es(e5, t3);
    }(e4)) || t2 && e4 && "number" == typeof e4.length) {
      r2 && (e4 = r2);
      var n2 = 0, i2 = function() {
      };
      return { s: i2, n: function() {
        return n2 >= e4.length ? { done: true } : { done: false, value: e4[n2++] };
      }, e: function(e5) {
        throw e5;
      }, f: i2 };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var a2, o2 = true, s2 = false;
  return { s: function() {
    r2 = e4[Symbol.iterator]();
  }, n: function() {
    var e5 = r2.next();
    return o2 = e5.done, e5;
  }, e: function(e5) {
    s2 = true, a2 = e5;
  }, f: function() {
    try {
      o2 || null == r2.return || r2.return();
    } finally {
      if (s2)
        throw a2;
    }
  } };
}
function es(e4, t2) {
  (null == t2 || t2 > e4.length) && (t2 = e4.length);
  for (var r2 = 0, n2 = new Array(t2); r2 < t2; r2++)
    n2[r2] = e4[r2];
  return n2;
}
var ts = "video";
var rs = "voice";
var ns = 3;
var is = Qt() ? { data: {} } : { data: {}, topology: "none" };
var as = { present: 0, hidden: 0 };
var os = { maxBitrate: { min: 1e5, max: 25e5 }, maxFramerate: { min: 1, max: 30 }, scaleResolutionDownBy: { min: 1, max: 8 } };
var ss = ["state", "volume", "simulcastEncodings"];
var cs = { androidInCallNotification: { title: "string", subtitle: "string", iconName: "string", disableForCustomOverride: "boolean" }, disableAutoDeviceManagement: { audio: "boolean", video: "boolean" } };
var ls = { id: { iconPath: "string", iconPathDarkMode: "string", label: "string", tooltip: "string" } };
var us = { customTrayButtons: { validate: Ms, help: "customTrayButtons should be a dictionary of the type ".concat(JSON.stringify(ls)) }, url: { validate: function(e4) {
  return "string" == typeof e4;
}, help: "url should be a string" }, baseUrl: { validate: function(e4) {
  return "string" == typeof e4;
}, help: "baseUrl should be a string" }, token: { validate: function(e4) {
  return "string" == typeof e4;
}, help: "token should be a string", queryString: "t" }, dailyConfig: { validate: function(e4) {
  return window._dailyConfig || (window._dailyConfig = {}), window._dailyConfig.experimentalGetUserMediaConstraintsModify = e4.experimentalGetUserMediaConstraintsModify, window._dailyConfig.userMediaVideoConstraints = e4.userMediaVideoConstraints, window._dailyConfig.userMediaAudioConstraints = e4.userMediaAudioConstraints, window._dailyConfig.callObjectBundleUrlOverride = e4.callObjectBundleUrlOverride, true;
} }, reactNativeConfig: { validate: function(e4) {
  return function e5(t2, r2) {
    if (void 0 === r2)
      return false;
    switch (f(r2)) {
      case "string":
        return f(t2) === r2;
      case "object":
        if ("object" !== f(t2))
          return false;
        for (var n2 in t2)
          if (!e5(t2[n2], r2[n2]))
            return false;
        return true;
      default:
        return false;
    }
  }(e4, cs);
}, help: "reactNativeConfig should look like ".concat(JSON.stringify(cs), ", all fields optional") }, lang: { validate: function(e4) {
  return ["de", "en-us", "en", "es", "fi", "fr", "it", "jp", "ka", "nl", "no", "pl", "pt", "ru", "sv", "tr", "user"].includes(e4);
}, help: "language not supported. Options are: de, en-us, en, es, fi, fr, it, jp, ka, nl, no, pl, pt, ru, sv, tr, user" }, userName: true, userData: { validate: function(e4) {
  try {
    return ys(e4), true;
  } catch (e5) {
    return console.error(e5), false;
  }
}, help: "invalid userData type provided" }, startVideoOff: true, startAudioOff: true, activeSpeakerMode: true, showLeaveButton: true, showLocalVideo: true, showParticipantsBar: true, showFullscreenButton: true, showUserNameChangeUI: true, iframeStyle: true, customLayout: true, cssFile: true, cssText: true, bodyClass: true, videoSource: { validate: function(e4, t2) {
  return t2._preloadCache.videoDeviceId = e4, true;
} }, audioSource: { validate: function(e4, t2) {
  return t2._preloadCache.audioDeviceId = e4, true;
} }, subscribeToTracksAutomatically: { validate: function(e4, t2) {
  return t2._preloadCache.subscribeToTracksAutomatically = e4, true;
} }, theme: { validate: function(e4) {
  var t2 = ["accent", "accentText", "background", "backgroundAccent", "baseText", "border", "mainAreaBg", "mainAreaBgAccent", "mainAreaText", "supportiveText"], r2 = function(e5) {
    for (var r3 = 0, n2 = Object.keys(e5); r3 < n2.length; r3++) {
      var i2 = n2[r3];
      if (!t2.includes(i2))
        return console.error('unsupported color "'.concat(i2, '". Valid colors: ').concat(t2.join(", "))), false;
      if (!e5[i2].match(/^#[0-9a-f]{6}|#[0-9a-f]{3}$/i))
        return console.error("".concat(i2, ' theme color should be provided in valid hex color format. Received: "').concat(e5[i2], '"')), false;
    }
    return true;
  };
  return "object" === f(e4) && ("light" in e4 && "dark" in e4 || "colors" in e4) ? "light" in e4 && "dark" in e4 ? "colors" in e4.light ? "colors" in e4.dark ? r2(e4.light.colors) && r2(e4.dark.colors) : (console.error('Dark theme is missing "colors" property.', e4), false) : (console.error('Light theme is missing "colors" property.', e4), false) : r2(e4.colors) : (console.error('Theme must contain either both "light" and "dark" properties, or "colors".', e4), false);
}, help: "unsupported theme configuration. Check error logs for detailed info." }, layoutConfig: { validate: function(e4) {
  if ("grid" in e4) {
    var t2 = e4.grid;
    if ("maxTilesPerPage" in t2) {
      if (!Number.isInteger(t2.maxTilesPerPage))
        return console.error("grid.maxTilesPerPage should be an integer. You passed ".concat(t2.maxTilesPerPage, ".")), false;
      if (t2.maxTilesPerPage > 49)
        return console.error("grid.maxTilesPerPage can't be larger than 49 without sacrificing browser performance. Please contact us at https://www.daily.co/contact to talk about your use case."), false;
    }
    if ("minTilesPerPage" in t2) {
      if (!Number.isInteger(t2.minTilesPerPage))
        return console.error("grid.minTilesPerPage should be an integer. You passed ".concat(t2.minTilesPerPage, ".")), false;
      if (t2.minTilesPerPage < 1)
        return console.error("grid.minTilesPerPage can't be lower than 1."), false;
      if ("maxTilesPerPage" in t2 && t2.minTilesPerPage > t2.maxTilesPerPage)
        return console.error("grid.minTilesPerPage can't be higher than grid.maxTilesPerPage."), false;
    }
  }
  return true;
}, help: "unsupported layoutConfig. Check error logs for detailed info." }, receiveSettings: { validate: function(e4) {
  return bs(e4, { allowAllParticipantsKey: false });
}, help: ks({ allowAllParticipantsKey: false }) }, inputSettings: { validate: function(e4) {
  return ws(e4);
}, help: _s() }, layout: { validate: function(e4) {
  return "custom-v1" === e4 || "browser" === e4 || "none" === e4;
}, help: 'layout may only be set to "custom-v1"', queryString: "layout" }, emb: { queryString: "emb" }, embHref: { queryString: "embHref" }, dailyJsVersion: { queryString: "dailyJsVersion" }, strictMode: true };
var ds = { styles: { validate: function(e4) {
  for (var t2 in e4)
    if ("cam" !== t2 && "screen" !== t2)
      return false;
  if (e4.cam) {
    for (var r2 in e4.cam)
      if ("div" !== r2 && "video" !== r2)
        return false;
  }
  if (e4.screen) {
    for (var n2 in e4.screen)
      if ("div" !== n2 && "video" !== n2)
        return false;
  }
  return true;
}, help: "styles format should be a subset of: { cam: {div: {}, video: {}}, screen: {div: {}, video: {}} }" }, setSubscribedTracks: { validate: function(e4, t2) {
  if (t2._preloadCache.subscribeToTracksAutomatically)
    return false;
  var r2 = [true, false, "staged"];
  if (r2.includes(e4) || !Qt() && "avatar" === e4)
    return true;
  var n2 = ["audio", "video", "screenAudio", "screenVideo", "rmpAudio", "rmpVideo"];
  return function e5(t3) {
    var i2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
    for (var a2 in t3)
      if ("custom" === a2) {
        if (!r2.includes(t3[a2]) && !e5(t3[a2], true))
          return false;
      } else {
        var o2 = !i2 && !n2.includes(a2), s2 = !r2.includes(t3[a2]);
        if (o2 || s2)
          return false;
      }
    return true;
  }(e4);
}, help: "setSubscribedTracks cannot be used when setSubscribeToTracksAutomatically is enabled, and should be of the form: " + "true".concat(Qt() ? "" : " | 'avatar'", " | false | 'staged' | { [audio: true|false|'staged'], [video: true|false|'staged'], [screenAudio: true|false|'staged'], [screenVideo: true|false|'staged'] }") }, setAudio: true, setVideo: true, eject: true, updatePermissions: { validate: function(e4) {
  for (var t2 = 0, r2 = Object.entries(e4); t2 < r2.length; t2++) {
    var n2 = M(r2[t2], 2), i2 = n2[0], a2 = n2[1];
    switch (i2) {
      case "hasPresence":
        if ("boolean" != typeof a2)
          return false;
        break;
      case "canSend":
        if (a2 instanceof Set) {
          var o2, s2 = ["video", "audio", "screenVideo", "screenAudio", "customVideo", "customAudio"], c2 = Xo(a2);
          try {
            for (c2.s(); !(o2 = c2.n()).done; ) {
              var l2 = o2.value;
              if (!s2.includes(l2))
                return false;
            }
          } catch (e5) {
            c2.e(e5);
          } finally {
            c2.f();
          }
        } else if ("boolean" != typeof a2)
          return false;
        break;
      default:
        return false;
    }
  }
  return true;
}, help: "updatePermissions can take hasPresence and canSend permissions. hasPresence must be a boolean. canSend can be a boolean or an array of media types (video, audio, screenVideo, screenAudio, customVideo, customAudio)." } };
function hs(e4) {
  var t2 = {};
  for (var r2 in e4)
    e4[r2] instanceof MediaStreamTrack ? t2[r2] = Vt : "dailyConfig" === r2 ? (e4[r2].modifyLocalSdpHook && (window._dailyConfig && (window._dailyConfig.modifyLocalSdpHook = e4[r2].modifyLocalSdpHook), delete e4[r2].modifyLocalSdpHook), e4[r2].modifyRemoteSdpHook && (window._dailyConfig && (window._dailyConfig.modifyRemoteSdpHook = e4[r2].modifyRemoteSdpHook), delete e4[r2].modifyRemoteSdpHook), t2[r2] = e4[r2]) : t2[r2] = e4[r2];
  return t2;
}
function ps(e4) {
  var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "This daily-js method", r2 = arguments.length > 2 ? arguments[2] : void 0;
  if (e4 !== se) {
    var n2 = "".concat(t2, " only supported after join.");
    throw r2 && (n2 += " ".concat(r2)), console.error(n2), new Error(n2);
  }
}
function fs(e4) {
  var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "This daily-js method";
  if (!e4) {
    var r2 = "".concat(t2, " is only supported on custom callObject instances");
    throw console.error(r2), new Error(r2);
  }
}
function vs(e4) {
  var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "This daily-js method";
  if (e4) {
    var r2 = "".concat(t2, " is only supported as part of Daily's Prebuilt");
    throw console.error(r2), new Error(r2);
  }
}
function gs() {
  if (Qt())
    throw new Error("This daily-js method is not currently supported in React Native");
}
function ms() {
  if (!Qt())
    throw new Error("This daily-js method is only supported in React Native");
}
function ys(e4) {
  if (void 0 === e4)
    return true;
  var t2;
  if ("string" == typeof e4)
    t2 = e4;
  else
    try {
      t2 = JSON.stringify(e4), W(JSON.parse(t2), e4) || console.warn("The userData provided will be modified when serialized.");
    } catch (e5) {
      throw Error("userData must be serializable to JSON: ".concat(e5));
    }
  if (t2.length > Rt)
    throw Error("userData is too large (".concat(t2.length, " characters). Maximum size suppported is ").concat(Rt, "."));
  return true;
}
function bs(e4, t2) {
  for (var r2 = t2.allowAllParticipantsKey, n2 = function(e5) {
    var t3 = ["local"];
    return r2 || t3.push("*"), e5 && !t3.includes(e5);
  }, i2 = function(e5) {
    return !!(void 0 === e5.layer || Number.isInteger(e5.layer) && e5.layer >= 0 || "inherit" === e5.layer);
  }, a2 = function(e5) {
    return !!e5 && (!(e5.video && !i2(e5.video)) && !(e5.screenVideo && !i2(e5.screenVideo)));
  }, o2 = 0, s2 = Object.entries(e4); o2 < s2.length; o2++) {
    var c2 = M(s2[o2], 2), l2 = c2[0], u2 = c2[1];
    if (!n2(l2) || !a2(u2))
      return false;
  }
  return true;
}
function ws(e4) {
  return "object" === f(e4) && (!!(e4.video && "object" === f(e4.video) || e4.audio && "object" === f(e4.audio)) && (!(e4.video && !function(e5) {
    var t3 = ["type", "config", "publish"];
    if (!e5)
      return false;
    if ("object" !== f(e5))
      return false;
    if (0 === Object.keys(e5).length)
      return false;
    if (e5.type && !function(e6) {
      if ("string" != typeof e6)
        return false;
      if (!Object.values(Ut).includes(e6))
        return console.error("inputSettings video processor type invalid"), false;
      return true;
    }(e5.type))
      return false;
    if (void 0 !== e5.publish && "boolean" != typeof e5.publish)
      return false;
    "boolean" == typeof e5.publish && console.warn("inputSettings.video.processor: publish key has been deprecated; it will be ignored");
    if (e5.config) {
      if ("object" !== f(e5.config))
        return false;
      if (!function(e6, t4) {
        var r3 = Object.keys(t4);
        if (0 === r3.length)
          return true;
        var n3 = "invalid object in inputSettings -> video -> processor -> config";
        switch (e6) {
          case Ut.BGBLUR:
            return r3.length > 1 || "strength" !== r3[0] ? (console.error(n3), false) : !("number" != typeof t4.strength || t4.strength <= 0 || t4.strength > 1 || isNaN(t4.strength)) || (console.error("".concat(n3, "; expected: {0 < strength <= 1}, got: ").concat(t4.strength)), false);
          case Ut.BGIMAGE:
            return !(void 0 !== t4.source && !function(e7) {
              if ("default" === e7.source)
                return e7.type = "default", true;
              if (dr(e7.source))
                return e7.type = "url", !!function(e8) {
                  var t6 = new URL(e8), r5 = t6.pathname;
                  if ("data:" === t6.protocol)
                    try {
                      var n4 = r5.substring(r5.indexOf(":") + 1, r5.indexOf(";")), i2 = n4.split("/")[1];
                      return Wt.includes(i2);
                    } catch (e9) {
                      return console.error("failed to deduce blob content type", e9), false;
                    }
                  var a2 = r5.split(".").at(-1).toLowerCase().trim();
                  return Wt.includes(a2);
                }(e7.source) || (console.error("invalid image type; supported types: [".concat(Wt.join(", "), "]")), false);
              return t5 = e7.source, r4 = Number(t5), isNaN(r4) || !Number.isInteger(r4) || r4 <= 0 || r4 > qt ? (console.error("invalid image selection; must be an int, > 0, <= ".concat(qt)), false) : (e7.type = "daily-preselect", true);
              var t5, r4;
            }(t4));
          default:
            return true;
        }
      }(e5.type, e5.config))
        return false;
    }
    return Object.keys(e5).filter(function(e6) {
      return !t3.includes(e6);
    }).forEach(function(t4) {
      console.warn("invalid key inputSettings -> video -> processor : ".concat(t4)), delete e5[t4];
    }), true;
  }(e4.video.processor)) && !(e4.audio && (t2 = e4.audio.processor, r2 = ["type"], !t2 || "object" !== f(t2) || (Object.keys(t2).filter(function(e5) {
    return !r2.includes(e5);
  }).forEach(function(e5) {
    console.warn("invalid key inputSettings -> audio -> processor : ".concat(e5)), delete t2[e5];
  }), t2.type && (n2 = t2.type, "string" != typeof n2 || !Object.values(zt).includes(n2) && (console.error("inputSettings audio processor type invalid"), 1)))))));
  var t2, r2, n2;
}
function _s() {
  var e4 = Object.values(Ut).join(" | "), t2 = Object.values(zt).join(" | ");
  return "inputSettings must be of the form: { video?: { processor: { type: [ ".concat(e4, " ], config?: {} } }, audio?: { processor: {type: [ ").concat(t2, " ] } } }");
}
function ks(e4) {
  var t2 = e4.allowAllParticipantsKey;
  return "receiveSettings must be of the form { [<remote participant id> | ".concat(we).concat(t2 ? ' | "'.concat(_e, '"') : "", "]: ") + '{ [video: [{ layer: [<non-negative integer> | "inherit"] } | "inherit"]], [screenVideo: [{ layer: [<non-negative integer> | "inherit"] } | "inherit"]] }}}';
}
function Ms(e4) {
  if (e4 && "object" !== f(e4) || Array.isArray(e4))
    return console.error("customTrayButtons should be an Object of the type ".concat(JSON.stringify(ls), ".")), false;
  if (e4)
    for (var t2 = 0, r2 = Object.entries(e4); t2 < r2.length; t2++)
      for (var n2 = M(r2[t2], 1)[0], i2 = 0, a2 = Object.entries(e4[n2]); i2 < a2.length; i2++) {
        var o2 = M(a2[i2], 2), s2 = o2[0], c2 = o2[1];
        if ("iconPath" === s2 && !dr(c2))
          return console.error("customTrayButton ".concat(s2, " should be a url.")), false;
        if ("iconPathDarkMode" === s2 && !dr(c2))
          return console.error("customTrayButton ".concat(s2, " should be a url.")), false;
        var l2 = ls.id[s2];
        if (!l2)
          return console.error("customTrayButton does not support key ".concat(s2)), false;
        if (f(c2) !== l2)
          return console.error("customTrayButton ".concat(s2, " should be a ").concat(l2, ".")), false;
      }
  return true;
}
function Ss(e4) {
  if ("object" !== f(e4))
    throw new Error('RemoteMediaPlayerSettings: must be "object" type');
  if (e4.state && !Object.values(Jt).includes(e4.state))
    throw new Error("Invalid value for RemoteMediaPlayerSettings.state, valid values are: " + JSON.stringify(Jt));
  if (e4.volume) {
    if ("number" != typeof e4.volume)
      throw new Error('RemoteMediaPlayerSettings.volume: must be "number" type');
    if (e4.volume < 0 || e4.volume > 2)
      throw new Error("RemoteMediaPlayerSettings.volume: must be between 0.0 - 2.0");
  }
}
function Cs(e4, t2, r2) {
  return !("number" != typeof e4 || e4 < t2 || e4 > r2);
}
var daily_iframe_esm_default = function(t2) {
  p(i2, import_events.default);
  var r2 = Zo(i2);
  function i2(e4) {
    var t3, n2, c2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    if (o(this, i2), t3 = r2.call(this), m(s(t3), "startListeningForDeviceChanges", function() {
      void 0 !== navigator.mediaDevices.ondevicechange || Qt() ? navigator.mediaDevices.addEventListener("devicechange", t3.deviceChangeListener) : t3.startPollingForDeviceChanges();
    }), m(s(t3), "stopListeningForDeviceChanges", function() {
      void 0 !== navigator.mediaDevices.ondevicechange || Qt() ? navigator.mediaDevices.removeEventListener("devicechange", t3.deviceChangeListener) : t3.stopPollingForDeviceChanges();
    }), m(s(t3), "deviceChangeListener", a(function* () {
      var e5 = yield t3.enumerateDevices();
      t3.handleDeviceChange(e5.devices);
    })), m(s(t3), "handleDeviceChange", function(e5) {
      t3.emit(Qe, { action: Qe, availableDevices: e5 });
    }), m(s(t3), "startPollingForDeviceChanges", function() {
      t3._deviceChangeInterval || (t3._deviceChangeInterval = setInterval(a(function* () {
        var e5 = yield t3.enumerateDevices(), r3 = JSON.stringify(e5);
        t3._lastDevicesJSON && r3 !== t3._lastDevicesJSON && t3.handleDeviceChange(e5.devices), t3._lastDevicesJSON = r3;
      }), 3e3));
    }), m(s(t3), "stopPollingForDeviceChanges", function() {
      t3._deviceChangeInterval && (clearInterval(t3._deviceChangeInterval), t3._deviceChangeInterval = null, t3._lastDevicesJSON = null);
    }), m(s(t3), "handleNativeAppActiveStateChange", function(e5) {
      t3.disableReactNativeAutoDeviceManagement("video") || (e5 ? t3.camUnmutedBeforeLosingNativeActiveState && t3.setLocalVideo(true) : (t3.camUnmutedBeforeLosingNativeActiveState = t3.localVideo(), t3.camUnmutedBeforeLosingNativeActiveState && t3.setLocalVideo(false)));
    }), m(s(t3), "handleNativeAudioFocusChange", function(e5) {
      t3.disableReactNativeAutoDeviceManagement("audio") || (t3._hasNativeAudioFocus = e5, t3.toggleParticipantAudioBasedOnNativeAudioFocus(), t3._hasNativeAudioFocus ? t3.micUnmutedBeforeLosingNativeAudioFocus && t3.setLocalAudio(true) : (t3.micUnmutedBeforeLosingNativeAudioFocus = t3.localAudio(), t3.setLocalAudio(false)));
    }), t3.strictMode = c2.strictMode, xo) {
      if (t3._logDuplicateInstanceAttempt(), t3.strictMode)
        throw new Error("Duplicate DailyIframe instances are not allowed");
    } else
      n2 = s(t3), xo = n2;
    if (c2.dailyJsVersion = i2.version(), t3._iframe = e4, t3._callObjectMode = "none" === c2.layout && !t3._iframe, t3._preloadCache = { subscribeToTracksAutomatically: true, audioDeviceId: null, videoDeviceId: null, outputDeviceId: null }, t3._callObjectMode && (window._dailyPreloadCache = t3._preloadCache), void 0 !== c2.showLocalVideo ? t3._callObjectMode ? console.error("showLocalVideo is not available in call object mode") : t3._showLocalVideo = !!c2.showLocalVideo : t3._showLocalVideo = true, void 0 !== c2.showParticipantsBar ? t3._callObjectMode ? console.error("showParticipantsBar is not available in call object mode") : t3._showParticipantsBar = !!c2.showParticipantsBar : t3._showParticipantsBar = true, void 0 !== c2.customTrayButtons ? t3._callObjectMode ? console.error("customTrayButtons is not available in call object mode") : t3._customTrayButtons = c2.customTrayButtons : t3._customTrayButtons = {}, void 0 !== c2.activeSpeakerMode ? t3._callObjectMode ? console.error("activeSpeakerMode is not available in call object mode") : t3._activeSpeakerMode = !!c2.activeSpeakerMode : t3._activeSpeakerMode = false, c2.receiveSettings ? t3._callObjectMode ? t3._receiveSettings = c2.receiveSettings : console.error("receiveSettings is only available in call object mode") : t3._receiveSettings = {}, t3._inputSettings = {}, c2.inputSettings && (t3._inputSettings = c2.inputSettings), t3.validateProperties(c2), t3.properties = Yo({}, c2), t3._callObjectLoader = t3._callObjectMode ? new Ar() : null, t3._callState = ie, t3._isPreparingToJoin = false, t3._accessState = { access: ge }, t3._meetingSessionState = is, t3._nativeInCallAudioMode = ts, t3._participants = {}, t3._participantCounts = as, t3._rmpPlayerState = {}, t3._waitingParticipants = {}, t3._inputEventsOn = {}, t3._network = { threshold: "good", quality: 100 }, t3._activeSpeaker = {}, t3._callFrameId = cr(), t3._messageChannel = Qt() ? new yr() : new gr(), t3._iframe && (t3._iframe.requestFullscreen ? t3._iframe.addEventListener("fullscreenchange", function() {
      document.fullscreenElement === t3._iframe ? (t3.emit(jt, { action: jt }), t3.sendMessageToCallMachine({ action: jt })) : (t3.emit(Pt, { action: Pt }), t3.sendMessageToCallMachine({ action: Pt }));
    }) : t3._iframe.webkitRequestFullscreen && t3._iframe.addEventListener("webkitfullscreenchange", function() {
      document.webkitFullscreenElement === t3._iframe ? (t3.emit(jt, { action: jt }), t3.sendMessageToCallMachine({ action: jt })) : (t3.emit(Pt, { action: Pt }), t3.sendMessageToCallMachine({ action: Pt }));
    })), Qt()) {
      var l2 = t3.nativeUtils();
      l2.addAudioFocusChangeListener && l2.removeAudioFocusChangeListener && l2.addAppActiveStateChangeListener && l2.removeAppActiveStateChangeListener || console.warn("expected (add|remove)(AudioFocus|AppActiveState)ChangeListener to be available in React Native"), t3._hasNativeAudioFocus = true, l2.addAudioFocusChangeListener(t3.handleNativeAudioFocusChange), l2.addAppActiveStateChangeListener(t3.handleNativeAppActiveStateChange);
    }
    return t3._callObjectMode && t3.startListeningForDeviceChanges(), t3._messageChannel.addListenerForMessagesFromCallMachine(t3.handleMessageFromCallMachine, t3._callFrameId, s(t3)), t3;
  }
  return l(i2, null, [{ key: "supportedBrowser", value: function() {
    if (Qt())
      return { supported: true, mobile: true, name: "React Native", version: null, supportsScreenShare: false, supportsSfu: true, supportsVideoProcessing: false, supportsAudioProcessing: false };
    var e4 = class {
      static getParser(e5, t3 = false) {
        if ("string" != typeof e5)
          throw new Error("UserAgent should be a string");
        return new ne(e5, t3);
      }
      static parse(e5) {
        return new ne(e5).getResult();
      }
      static get BROWSER_MAP() {
        return H;
      }
      static get ENGINE_MAP() {
        return $;
      }
      static get OS_MAP() {
        return Q;
      }
      static get PLATFORMS_MAP() {
        return K;
      }
    }.getParser(Kt());
    return { supported: !!tr(), mobile: "mobile" === e4.getPlatformType(), name: e4.getBrowserName(), version: e4.getBrowserVersion(), supportsFullscreen: !!Zt(), supportsScreenShare: !!Yt(), supportsSfu: !!tr(), supportsVideoProcessing: !Qt() && !rr() && Xt.includes(nr()), supportsAudioProcessing: !Qt() && !rr() && "undefined" != typeof AudioWorkletNode && er.includes(nr()) };
  } }, { key: "version", value: function() {
    return "0.40.0";
  } }, { key: "createCallObject", value: function() {
    var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    return e4.layout = "none", new i2(null, e4);
  } }, { key: "wrap", value: function(e4) {
    var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
    if (gs(), !e4 || !e4.contentWindow || "string" != typeof e4.src)
      throw new Error("DailyIframe::Wrap needs an iframe-like first argument");
    return t3.layout || (t3.customLayout ? t3.layout = "custom-v1" : t3.layout = "browser"), new i2(e4, t3);
  } }, { key: "createFrame", value: function(e4, t3) {
    var r3, n2;
    gs(), e4 && t3 ? (r3 = e4, n2 = t3) : e4 && e4.append ? (r3 = e4, n2 = {}) : (r3 = document.body, n2 = e4 || {});
    var a2 = n2.iframeStyle;
    a2 || (a2 = r3 === document.body ? { position: "fixed", border: "1px solid black", backgroundColor: "white", width: "375px", height: "450px", right: "1em", bottom: "1em" } : { border: 0, width: "100%", height: "100%" });
    var o2 = document.createElement("iframe");
    window.navigator && window.navigator.userAgent.match(/Chrome\/61\./) ? o2.allow = "microphone, camera" : o2.allow = "microphone; camera; autoplay; display-capture", o2.style.visibility = "hidden", r3.appendChild(o2), o2.style.visibility = null, Object.keys(a2).forEach(function(e5) {
      return o2.style[e5] = a2[e5];
    }), n2.layout || (n2.customLayout ? n2.layout = "custom-v1" : n2.layout = "browser");
    try {
      return new i2(o2, n2);
    } catch (e5) {
      throw r3.removeChild(o2), e5;
    }
  } }, { key: "createTransparentFrame", value: function() {
    var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    gs();
    var t3 = document.createElement("iframe");
    return t3.allow = "microphone; camera; autoplay", t3.style.cssText = "\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      border: 0;\n      pointer-events: none;\n    ", document.body.appendChild(t3), e4.layout || (e4.layout = "custom-v1"), i2.wrap(t3, e4);
  } }, { key: "getCallInstance", value: function() {
    return xo;
  } }]), l(i2, [{ key: "destroy", value: function() {
    var e4 = a(function* () {
      try {
        [se, ae].includes(this._callState) && (yield this.leave());
      } catch (e6) {
      }
      var e5 = this._iframe;
      if (e5) {
        var t3 = e5.parentElement;
        t3 && t3.removeChild(e5);
      }
      if (this._messageChannel.removeListener(this.handleMessageFromCallMachine), Qt()) {
        var r3 = this.nativeUtils();
        r3.removeAudioFocusChangeListener(this.handleNativeAudioFocusChange), r3.removeAppActiveStateChangeListener(this.handleNativeAppActiveStateChange);
      }
      this._callObjectMode && this.stopListeningForDeviceChanges(), this.resetMeetingDependentVars(), this._destroyed = true, this.strictMode && (this._callFrameId = void 0), xo = void 0;
    });
    return function() {
      return e4.apply(this, arguments);
    };
  }() }, { key: "isDestroyed", value: function() {
    return this._destroyed;
  } }, { key: "loadCss", value: function(e4) {
    var t3 = e4.bodyClass, r3 = e4.cssFile, n2 = e4.cssText;
    return gs(), this.sendMessageToCallMachine({ action: "load-css", cssFile: this.absoluteUrl(r3), bodyClass: t3, cssText: n2 }), this;
  } }, { key: "iframe", value: function() {
    return gs(), this._iframe;
  } }, { key: "meetingState", value: function() {
    return this._callState;
  } }, { key: "accessState", value: function() {
    return fs(this._callObjectMode, "accessState()"), this._accessState;
  } }, { key: "participants", value: function() {
    return this._participants;
  } }, { key: "participantCounts", value: function() {
    return this._participantCounts;
  } }, { key: "waitingParticipants", value: function() {
    return fs(this._callObjectMode, "waitingParticipants()"), this._waitingParticipants;
  } }, { key: "validateParticipantProperties", value: function(e4, t3) {
    for (var r3 in t3) {
      if (!ds[r3])
        throw new Error("unrecognized updateParticipant property ".concat(r3));
      if (ds[r3].validate && !ds[r3].validate(t3[r3], this, this._participants[e4]))
        throw new Error(ds[r3].help);
    }
  } }, { key: "updateParticipant", value: function(e4, t3) {
    return this._participants.local && this._participants.local.session_id === e4 && (e4 = "local"), e4 && t3 && (this.validateParticipantProperties(e4, t3), this.sendMessageToCallMachine({ action: "update-participant", id: e4, properties: t3 })), this;
  } }, { key: "updateParticipants", value: function(e4) {
    var t3 = this._participants.local && this._participants.local.session_id;
    for (var r3 in e4)
      r3 === t3 && (r3 = "local"), r3 && e4[r3] && this.validateParticipantProperties(r3, e4[r3]);
    return this.sendMessageToCallMachine({ action: "update-participants", participants: e4 }), this;
  } }, { key: "updateWaitingParticipant", value: function() {
    var e4 = a(function* () {
      var e5 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", r3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      if (fs(this._callObjectMode, "updateWaitingParticipant()"), ps(this._callState, "updateWaitingParticipant()"), "string" != typeof t3 || "object" !== f(r3))
        throw new Error("updateWaitingParticipant() must take an id string and a updates object");
      return new Promise(function(n2, i3) {
        e5.sendMessageToCallMachine({ action: "daily-method-update-waiting-participant", id: t3, updates: r3 }, function(e6) {
          e6.error && i3(e6.error), e6.id || i3(new Error("unknown error in updateWaitingParticipant()")), n2({ id: e6.id });
        });
      });
    });
    return function() {
      return e4.apply(this, arguments);
    };
  }() }, { key: "updateWaitingParticipants", value: function() {
    var e4 = a(function* () {
      var e5 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
      if (fs(this._callObjectMode, "updateWaitingParticipants()"), ps(this._callState, "updateWaitingParticipants()"), "object" !== f(t3))
        throw new Error("updateWaitingParticipants() must take a mapping between ids and update objects");
      return new Promise(function(r3, n2) {
        e5.sendMessageToCallMachine({ action: "daily-method-update-waiting-participants", updatesById: t3 }, function(e6) {
          e6.error && n2(e6.error), e6.ids || n2(new Error("unknown error in updateWaitingParticipants()")), r3({ ids: e6.ids });
        });
      });
    });
    return function() {
      return e4.apply(this, arguments);
    };
  }() }, { key: "requestAccess", value: function() {
    var e4 = a(function* () {
      var e5 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r3 = t3.access, n2 = void 0 === r3 ? { level: "full" } : r3, i3 = t3.name, a2 = void 0 === i3 ? "" : i3;
      return fs(this._callObjectMode, "requestAccess()"), ps(this._callState, "requestAccess()"), new Promise(function(t4, r4) {
        e5.sendMessageToCallMachine({ action: "daily-method-request-access", access: n2, name: a2 }, function(e6) {
          e6.error && r4(e6.error), e6.access || r4(new Error("unknown error in requestAccess()")), t4({ access: e6.access, granted: e6.granted });
        });
      });
    });
    return function() {
      return e4.apply(this, arguments);
    };
  }() }, { key: "localAudio", value: function() {
    return this._participants.local ? this._participants.local.audio : null;
  } }, { key: "localVideo", value: function() {
    return this._participants.local ? this._participants.local.video : null;
  } }, { key: "setLocalAudio", value: function(e4) {
    return this.sendMessageToCallMachine({ action: "local-audio", state: e4 }), this;
  } }, { key: "setLocalVideo", value: function(e4) {
    return this.sendMessageToCallMachine({ action: "local-video", state: e4 }), this;
  } }, { key: "getReceiveSettings", value: function() {
    var e4 = a(function* (e5) {
      var t3 = this, r3 = (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).showInheritedValues, n2 = void 0 !== r3 && r3;
      switch (fs(this._callObjectMode, "getReceiveSettings()"), f(e5)) {
        case "string":
          return new Promise(function(r4) {
            t3.sendMessageToCallMachine({ action: "get-single-participant-receive-settings", id: e5, showInheritedValues: n2 }, function(e6) {
              r4(e6.receiveSettings);
            });
          });
        case "undefined":
          return this._receiveSettings;
        default:
          throw new Error('first argument to getReceiveSettings() must be a participant id (or "base"), or there should be no arguments');
      }
    });
    return function(t3) {
      return e4.apply(this, arguments);
    };
  }() }, { key: "updateReceiveSettings", value: function() {
    var e4 = a(function* (e5) {
      var t3 = this;
      if (fs(this._callObjectMode, "updateReceiveSettings()"), !bs(e5, { allowAllParticipantsKey: true }))
        throw new Error(ks({ allowAllParticipantsKey: true }));
      return ps(this._callState, "updateReceiveSettings()", "To specify receive settings earlier, use the receiveSettings config property."), new Promise(function(r3) {
        t3.sendMessageToCallMachine({ action: "update-receive-settings", receiveSettings: e5 }, function(e6) {
          r3({ receiveSettings: e6.receiveSettings });
        });
      });
    });
    return function(t3) {
      return e4.apply(this, arguments);
    };
  }() }, { key: "getInputSettings", value: function() {
    var e4 = this;
    return new Promise(function(t3) {
      t3(e4._inputSettings);
    });
  } }, { key: "updateInputSettings", value: function() {
    var e4 = a(function* (e5) {
      var t3 = this;
      return new Promise(function(r3, n2) {
        if (!ws(e5))
          return console.error(_s()), void n2(_s());
        t3.sendMessageToCallMachine({ action: "update-input-settings", inputSettings: e5 }, function(e6) {
          e6.error ? n2(e6.error) : r3({ inputSettings: e6.inputSettings });
        });
      });
    });
    return function(t3) {
      return e4.apply(this, arguments);
    };
  }() }, { key: "setBandwidth", value: function(e4) {
    var t3 = e4.kbs, r3 = e4.trackConstraints;
    return gs(), this.sendMessageToCallMachine({ action: "set-bandwidth", kbs: t3, trackConstraints: r3 }), this;
  } }, { key: "getDailyLang", value: function() {
    var e4 = this;
    return gs(), new Promise(function() {
      var t3 = a(function* (t4) {
        e4.sendMessageToCallMachine({ action: "get-daily-lang" }, function(e5) {
          delete e5.action, delete e5.callbackStamp, t4(e5);
        });
      });
      return function(e5) {
        return t3.apply(this, arguments);
      };
    }());
  } }, { key: "setDailyLang", value: function(e4) {
    return gs(), this.sendMessageToCallMachine({ action: "set-daily-lang", lang: e4 }), this;
  } }, { key: "getMeetingSession", value: function() {
    var e4 = a(function* () {
      var e5 = this;
      return ps(this._callState, "getMeetingSession()"), new Promise(function() {
        var t3 = a(function* (t4) {
          e5.sendMessageToCallMachine({ action: "get-meeting-session" }, function(e6) {
            delete e6.action, delete e6.callbackStamp, delete e6.callFrameId, t4(e6);
          });
        });
        return function(e6) {
          return t3.apply(this, arguments);
        };
      }());
    });
    return function() {
      return e4.apply(this, arguments);
    };
  }() }, { key: "meetingSessionState", value: function() {
    if (this._callState !== se)
      throw new Error("meetingSessionState() is only available when joined");
    return this._meetingSessionState;
  } }, { key: "setMeetingSessionData", value: function(e4) {
    var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "replace";
    if (this._callState !== se)
      throw new Error("setMeetingSessionData() is only available when joined");
    try {
      !function(e5, t4) {
        new Sr({ data: e5, mergeStrategy: t4 });
      }(e4, t3);
    } catch (e5) {
      throw console.error(e5), e5;
    }
    try {
      this.sendMessageToCallMachine({ action: "set-session-data", data: e4, mergeStrategy: t3 });
    } catch (e5) {
      throw new Error("Error setting meeting session data: ".concat(e5));
    }
  } }, { key: "setUserName", value: function(e4, t3) {
    var r3 = this;
    return this.properties.userName = e4, new Promise(function(n2) {
      r3.sendMessageToCallMachine({ action: "set-user-name", name: null != e4 ? e4 : "", thisMeetingOnly: Qt() || !!t3 && !!t3.thisMeetingOnly }, function(e5) {
        delete e5.action, delete e5.callbackStamp, n2(e5);
      });
    });
  } }, { key: "setUserData", value: function() {
    var e4 = a(function* (e5) {
      var t3 = this;
      try {
        ys(e5);
      } catch (e6) {
        throw console.error(e6), e6;
      }
      return this.properties.userData = e5, new Promise(function(r3) {
        try {
          t3.sendMessageToCallMachine({ action: "set-user-data", userData: e5 }, function(e6) {
            delete e6.action, delete e6.callbackStamp, delete e6.callFrameId, r3(e6);
          });
        } catch (e6) {
          throw new Error("Error setting user data: ".concat(e6));
        }
      });
    });
    return function(t3) {
      return e4.apply(this, arguments);
    };
  }() }, { key: "startCamera", value: function() {
    var e4 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    if (fs(this._callObjectMode, "startCamera()"), [oe, se].includes(this._callState))
      throw new Error("startCamera() not supported after joining a meeting: did you mean to use setLocalAudio() and/or setLocalVideo() instead?");
    return new Promise(function() {
      var r3 = a(function* (r4, n2) {
        if (e4.needsLoad())
          try {
            yield e4.load(t3);
          } catch (e5) {
            n2(e5);
          }
        else
          e4.validateProperties(t3);
        e4.sendMessageToCallMachine({ action: "start-camera", properties: hs(e4.properties), preloadCache: hs(e4._preloadCache) }, function(e5) {
          delete e5.action, delete e5.callbackStamp, r4(e5);
        });
      });
      return function(e5, t4) {
        return r3.apply(this, arguments);
      };
    }());
  } }, { key: "validateCustomTrack", value: function(e4, t3, r3) {
    if (r3 && r3.length > 50)
      throw new Error("Custom track `trackName` must not be more than 50 characters");
    if (t3 && "music" !== t3 && "speech" !== t3 && !(t3 instanceof Object))
      throw new Error("Custom track `mode` must be either `music` | `speech` | `DailyMicAudioModeSettings` or `undefined`");
    if (!!r3 && ["cam-audio", "cam-video", "screen-video", "screen-audio", "rmpAudio", "rmpVideo"].includes(r3))
      throw new Error("Custom track `trackName` must not match a track name already used by daily: cam-audio, cam-video, screen-video, screen-audio, rmpAudio, rmpVideo");
    if (!(e4 instanceof MediaStreamTrack))
      throw new Error("Custom tracks provided must be instances of MediaStreamTrack");
  } }, { key: "startCustomTrack", value: function() {
    var e4 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : { track, mode, trackName };
    if (gs(), this.validateCustomTrack(t3.track, t3.mode, t3.trackName), this._callState !== se)
      throw new Error("startCustomTrack() is only allowed when joined");
    return new Promise(function(r3, n2) {
      window._dailyPreloadCache.customTrack = t3.track, t3.track = Vt, e4.sendMessageToCallMachine({ action: "start-custom-track", properties: t3 }, function(e5) {
        e5.error ? n2({ error: e5.error }) : r3(e5.mediaTag);
      });
    });
  } }, { key: "stopCustomTrack", value: function(e4) {
    var t3 = this;
    if (gs(), this._callState !== se)
      throw new Error("stopCustomTrack() is only allowed when joined");
    return new Promise(function(r3) {
      t3.sendMessageToCallMachine({ action: "stop-custom-track", mediaTag: e4 }, function(e5) {
        r3(e5.mediaTag);
      });
    });
  } }, { key: "setCamera", value: function(e4) {
    var t3 = this;
    if (ms(), this.needsLoad())
      throw new Error("Before you can invoke setCamera, first you need to invoke one of these methods: join, startCamera, or preAuth");
    return new Promise(function(r3) {
      t3.sendMessageToCallMachine({ action: "set-camera", cameraDeviceId: e4 }, function(e5) {
        r3({ device: e5.device });
      });
    });
  } }, { key: "setAudioDevice", value: function() {
    var e4 = a(function* (e5) {
      return ms(), this.nativeUtils().setAudioDevice(e5), { deviceId: yield this.nativeUtils().getAudioDevice() };
    });
    return function(t3) {
      return e4.apply(this, arguments);
    };
  }() }, { key: "cycleCamera", value: function() {
    var e4 = this;
    return new Promise(function(t3) {
      e4.sendMessageToCallMachine({ action: "cycle-camera" }, function(e5) {
        t3({ device: e5.device });
      });
    });
  } }, { key: "cycleMic", value: function() {
    var e4 = this;
    return gs(), new Promise(function(t3) {
      e4.sendMessageToCallMachine({ action: "cycle-mic" }, function(e5) {
        t3({ device: e5.device });
      });
    });
  } }, { key: "getCameraFacingMode", value: function() {
    var e4 = this;
    return ms(), new Promise(function(t3) {
      e4.sendMessageToCallMachine({ action: "get-camera-facing-mode" }, function(e5) {
        t3(e5.facingMode);
      });
    });
  } }, { key: "setInputDevices", value: function(e4) {
    var t3 = e4.audioDeviceId, r3 = e4.videoDeviceId, n2 = e4.audioSource, i3 = e4.videoSource;
    return console.warn("setInputDevices() is deprecated: instead use setInputDevicesAsync(), which returns a Promise"), this.setInputDevicesAsync({ audioDeviceId: t3, videoDeviceId: r3, audioSource: n2, videoSource: i3 }), this;
  } }, { key: "setInputDevicesAsync", value: function() {
    var e4 = a(function* (e5) {
      var t3 = this, r3 = e5.audioDeviceId, n2 = e5.videoDeviceId, i3 = e5.audioSource, a2 = e5.videoSource;
      return gs(), void 0 !== i3 && (r3 = i3), void 0 !== a2 && (n2 = a2), r3 && (this._preloadCache.audioDeviceId = r3), n2 && (this._preloadCache.videoDeviceId = n2), this._callObjectMode && this.needsLoad() ? { camera: { deviceId: this._preloadCache.videoDeviceId }, mic: { deviceId: this._preloadCache.audioDeviceId }, speaker: { deviceId: this._preloadCache.outputDeviceId } } : (r3 instanceof MediaStreamTrack && (r3 = Vt), n2 instanceof MediaStreamTrack && (n2 = Vt), new Promise(function(e6) {
        t3.sendMessageToCallMachine({ action: "set-input-devices", audioDeviceId: r3, videoDeviceId: n2 }, function(r4) {
          delete r4.action, delete r4.callbackStamp, r4.returnPreloadCache ? e6({ camera: { deviceId: t3._preloadCache.videoDeviceId }, mic: { deviceId: t3._preloadCache.audioDeviceId }, speaker: { deviceId: t3._preloadCache.outputDeviceId } }) : e6(r4);
        });
      }));
    });
    return function(t3) {
      return e4.apply(this, arguments);
    };
  }() }, { key: "setOutputDevice", value: function(e4) {
    var t3 = e4.outputDeviceId;
    return console.warn("setOutputDevice() is deprecated: instead use setOutputDeviceAsync(), which returns a Promise"), this.setOutputDeviceAsync({ outputDeviceId: t3 }), this;
  } }, { key: "setOutputDeviceAsync", value: function() {
    var e4 = a(function* (e5) {
      var t3 = this, r3 = e5.outputDeviceId;
      return gs(), r3 && (this._preloadCache.outputDeviceId = r3), this._callObjectMode && this.needsLoad() ? { camera: { deviceId: this._preloadCache.videoDeviceId }, mic: { deviceId: this._preloadCache.audioDeviceId }, speaker: { deviceId: this._preloadCache.outputDeviceId } } : new Promise(function(e6) {
        t3.sendMessageToCallMachine({ action: "set-output-device", outputDeviceId: r3 }, function(r4) {
          delete r4.action, delete r4.callbackStamp, r4.returnPreloadCache ? e6({ camera: { deviceId: t3._preloadCache.videoDeviceId }, mic: { deviceId: t3._preloadCache.audioDeviceId }, speaker: { deviceId: t3._preloadCache.outputDeviceId } }) : e6(r4);
        });
      });
    });
    return function(t3) {
      return e4.apply(this, arguments);
    };
  }() }, { key: "getInputDevices", value: function() {
    var e4 = a(function* () {
      var e5 = this;
      return this._callObjectMode && this.needsLoad() ? { camera: { deviceId: this._preloadCache.videoDeviceId }, mic: { deviceId: this._preloadCache.audioDeviceId }, speaker: { deviceId: this._preloadCache.outputDeviceId } } : new Promise(function(t3) {
        e5.sendMessageToCallMachine({ action: "get-input-devices" }, function(r3) {
          delete r3.action, delete r3.callbackStamp, r3.returnPreloadCache ? t3({ camera: { deviceId: e5._preloadCache.videoDeviceId }, mic: { deviceId: e5._preloadCache.audioDeviceId }, speaker: { deviceId: e5._preloadCache.outputDeviceId } }) : t3(r3);
        });
      });
    });
    return function() {
      return e4.apply(this, arguments);
    };
  }() }, { key: "nativeInCallAudioMode", value: function() {
    return ms(), this._nativeInCallAudioMode;
  } }, { key: "setNativeInCallAudioMode", value: function(e4) {
    if (ms(), [ts, rs].includes(e4)) {
      if (e4 !== this._nativeInCallAudioMode)
        return this._nativeInCallAudioMode = e4, !this.disableReactNativeAutoDeviceManagement("audio") && this._isCallPendingOrOngoing(this._callState, this._isPreparingToJoin) && this.nativeUtils().setAudioMode(this._nativeInCallAudioMode), this;
    } else
      console.error("invalid in-call audio mode specified: ", e4);
  } }, { key: "preAuth", value: function() {
    var e4 = a(function* () {
      var e5 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
      if (fs(this._callObjectMode, "preAuth()"), [oe, se].includes(this._callState))
        throw new Error("preAuth() not supported after joining a meeting");
      if (this.needsLoad() && (yield this.load(t3)), !t3.url)
        throw new Error("preAuth() requires at least a url to be provided");
      return this.validateProperties(t3), this.properties = Yo(Yo({}, this.properties), t3), new Promise(function(t4, r3) {
        e5.sendMessageToCallMachine({ action: "daily-method-preauth", properties: hs(e5.properties) }, function(n2) {
          return n2.error ? r3(n2.error) : n2.access ? (e5._didPreAuth = true, void t4({ access: n2.access })) : r3(new Error("unknown error in preAuth()"));
        });
      });
    });
    return function() {
      return e4.apply(this, arguments);
    };
  }() }, { key: "load", value: function() {
    var e4 = a(function* (e5) {
      var t3 = this;
      if (this.needsLoad()) {
        if (this._destroyed && (this._logUseAfterDestroy(), this.strictMode))
          throw new Error("Use after destroy");
        if (e5 && (this.validateProperties(e5), this.properties = Yo(Yo({}, this.properties), e5)), !this._callObjectMode && !this.properties.url)
          throw new Error("can't load iframe meeting because url property isn't set");
        this._updateCallState(ae);
        try {
          this.emit("loading", { action: "loading" });
        } catch (e6) {
          console.log("could not emit 'loading'", e6);
        }
        return this._callObjectMode ? new Promise(function(e6, r3) {
          t3._callObjectLoader.cancel(), t3._callObjectLoader.load(t3._callFrameId, t3.properties.dailyConfig && t3.properties.dailyConfig.avoidEval, function(r4) {
            t3._updateCallState("loaded"), r4 && t3.emit("loaded", { action: "loaded" }), e6();
          }, function(e7, n2) {
            t3.emit("load-attempt-failed", { action: "load-attempt-failed", errorMsg: e7 }), n2 || (t3._updateCallState(le), t3.resetMeetingDependentVars(), t3.emit("error", { action: "error", errorMsg: e7 }), r3(e7));
          });
        }) : (this._iframe.src = this.assembleMeetingUrl(), new Promise(function(e6, r3) {
          t3._loadedCallback = function(n2) {
            if (t3._callState !== le) {
              for (var i3 in t3._updateCallState("loaded"), (t3.properties.cssFile || t3.properties.cssText) && t3.loadCss(t3.properties), t3._inputEventsOn)
                t3.sendMessageToCallMachine({ action: "register-input-handler", on: i3 });
              e6();
            } else
              r3(n2);
          };
        }));
      }
    });
    return function(t3) {
      return e4.apply(this, arguments);
    };
  }() }, { key: "join", value: function() {
    var e4 = a(function* () {
      var e5 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r3 = false;
      if (this.needsLoad()) {
        this.updateIsPreparingToJoin(true);
        try {
          yield this.load(t3);
        } catch (e6) {
          return this.updateIsPreparingToJoin(false), Promise.reject(e6);
        }
      } else {
        if (r3 = !(!this.properties.cssFile && !this.properties.cssText), this._didPreAuth) {
          if (t3.url && t3.url !== this.properties.url)
            return console.error("url in join() is different than the one used in preAuth()"), this.updateIsPreparingToJoin(false), Promise.reject();
          if (t3.token && t3.token !== this.properties.token)
            return console.error("token in join() is different than the one used in preAuth()"), this.updateIsPreparingToJoin(false), Promise.reject();
        }
        if (t3.url && !this._callObjectMode && t3.url && t3.url !== this.properties.url)
          return console.error("url in join() is different than the one used in load() (".concat(this.properties.url, " -> ").concat(t3.url, ")")), this.updateIsPreparingToJoin(false), Promise.reject();
        this.validateProperties(t3), this.properties = Yo(Yo({}, this.properties), t3);
      }
      if (void 0 !== t3.showLocalVideo && (this._callObjectMode ? console.error("showLocalVideo is not available in callObject mode") : this._showLocalVideo = !!t3.showLocalVideo), void 0 !== t3.showParticipantsBar && (this._callObjectMode ? console.error("showParticipantsBar is not available in callObject mode") : this._showParticipantsBar = !!t3.showParticipantsBar), this._callState === se || this._callState === oe)
        return console.warn("already joined meeting, call leave() before joining again"), void this.updateIsPreparingToJoin(false);
      this._updateCallState(oe, false);
      try {
        this.emit("joining-meeting", { action: "joining-meeting" });
      } catch (e6) {
        console.log("could not emit 'joining-meeting'", e6);
      }
      return this.sendMessageToCallMachine({ action: "join-meeting", properties: hs(this.properties), preloadCache: hs(this._preloadCache) }), new Promise(function(t4, n2) {
        e5._joinedCallback = function(i3, a2) {
          if (e5._callState !== le) {
            if (e5._updateCallState(se), i3)
              for (var o2 in i3)
                e5._callObjectMode && (Go(i3[o2]), Ho(i3[o2]), Qo(i3[o2], e5._participants[o2])), e5._participants[o2] = Yo({}, i3[o2]), e5.toggleParticipantAudioBasedOnNativeAudioFocus();
            r3 && e5.loadCss(e5.properties), t4(i3);
          } else
            n2(a2);
        };
      });
    });
    return function() {
      return e4.apply(this, arguments);
    };
  }() }, { key: "leave", value: function() {
    var e4 = a(function* () {
      var e5 = this;
      return new Promise(function(t3) {
        if (e5._callObjectLoader && !e5._callObjectLoader.loaded) {
          e5._callObjectLoader.cancel(), e5._updateCallState(ce), e5.resetMeetingDependentVars();
          try {
            e5.emit(ce, { action: ce });
          } catch (e6) {
            console.log("could not emit 'left-meeting'", e6);
          }
          t3();
        } else
          e5._callState === ce || e5._callState === le ? t3() : (e5._resolveLeave = t3, e5.sendMessageToCallMachine({ action: "leave-meeting" }));
      });
    });
    return function() {
      return e4.apply(this, arguments);
    };
  }() }, { key: "startScreenShare", value: function() {
    var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    gs(), e4.mediaStream && (this._preloadCache.screenMediaStream = e4.mediaStream, e4.mediaStream = Vt), this.sendMessageToCallMachine({ action: "local-screen-start", captureOptions: e4 });
  } }, { key: "stopScreenShare", value: function() {
    gs(), this.sendMessageToCallMachine({ action: "local-screen-stop" });
  } }, { key: "startRecording", value: function() {
    var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    this.sendMessageToCallMachine(Yo({ action: "local-recording-start" }, e4));
  } }, { key: "updateRecording", value: function(e4) {
    var t3 = e4.layout, r3 = void 0 === t3 ? { preset: "default" } : t3, n2 = e4.instanceId;
    this.sendMessageToCallMachine({ action: "daily-method-update-recording", layout: r3, instanceId: n2 });
  } }, { key: "stopRecording", value: function() {
    var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    this.sendMessageToCallMachine(Yo({ action: "local-recording-stop" }, e4));
  } }, { key: "startLiveStreaming", value: function() {
    var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    this.sendMessageToCallMachine(Yo({ action: "daily-method-start-live-streaming" }, e4));
  } }, { key: "updateLiveStreaming", value: function(e4) {
    var t3 = e4.layout, r3 = void 0 === t3 ? { preset: "default" } : t3, n2 = e4.instanceId;
    this.sendMessageToCallMachine({ action: "daily-method-update-live-streaming", layout: r3, instanceId: n2 });
  } }, { key: "addLiveStreamingEndpoints", value: function(e4) {
    var t3 = e4.endpoints, r3 = e4.instanceId;
    this.sendMessageToCallMachine({ action: "daily-method-update-live-streaming-endpoints", endpointsOp: Gt, endpoints: t3, instanceId: r3 });
  } }, { key: "removeLiveStreamingEndpoints", value: function(e4) {
    var t3 = e4.endpoints, r3 = e4.instanceId;
    this.sendMessageToCallMachine({ action: "daily-method-update-live-streaming-endpoints", endpointsOp: Ht, endpoints: t3, instanceId: r3 });
  } }, { key: "stopLiveStreaming", value: function() {
    var e4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
    this.sendMessageToCallMachine(Yo({ action: "daily-method-stop-live-streaming" }, e4));
  } }, { key: "startRemoteMediaPlayer", value: function() {
    var e4 = a(function* (e5) {
      var t3 = this, r3 = e5.url, n2 = e5.settings, i3 = void 0 === n2 ? { state: Jt.PLAY } : n2;
      try {
        !function(e6) {
          if ("string" != typeof e6)
            throw new Error('url parameter must be "string" type');
        }(r3), Ss(i3), function(e6) {
          for (var t4 in e6)
            if (!ss.includes(t4))
              throw new Error("Invalid key ".concat(t4, ", valid keys are: ").concat(ss));
          if (e6.simulcastEncodings) {
            if (!(e6.simulcastEncodings instanceof Array))
              throw new Error('simulcastEncodings must be "Array"');
            if (!Cs(e6.simulcastEncodings.length, 0, ns))
              throw new Error('"simulcastEncodings" not in range. valid range 1 to 3 layers');
            e6.simulcastEncodings.every(function(e7) {
              for (var t5 in e7) {
                if (!os.hasOwnProperty(t5))
                  throw new Error("Invalid key ".concat(t5, ", valid keys are:") + Object.keys(os));
                if ("number" != typeof e7[t5])
                  throw new Error("simulcastEncodings[].".concat(t5, ' must be "number"'));
                var r4 = os[t5], n3 = r4.min, i4 = r4.max;
                if (!Cs(e7[t5], n3, i4))
                  throw new Error("simulcastEncodings[].".concat(t5, " value not in range. valid range:        ").concat(n3, " to ").concat(i4));
              }
              if (!e7.hasOwnProperty("maxBitrate"))
                throw new Error("simulcastEncodings[].maxBitrate is not specified");
            });
          }
        }(i3);
      } catch (e6) {
        throw console.error("invalid argument Error: ".concat(e6)), console.error('startRemoteMediaPlayer arguments must be of the form: \n  { url: "playback url", \n  settings?: \n  {state: "play"|"pause", simulcastEncodings?: [{}] } }'), e6;
      }
      return new Promise(function() {
        var e6 = a(function* (e7, n3) {
          t3.sendMessageToCallMachine({ action: "daily-method-start-remote-media-player", url: r3, settings: i3 }, function(t4) {
            t4.error ? n3({ error: t4.error, errorMsg: t4.errorMsg }) : e7({ session_id: t4.session_id, remoteMediaPlayerState: { state: t4.state, settings: t4.settings } });
          });
        });
        return function(t4, r4) {
          return e6.apply(this, arguments);
        };
      }());
    });
    return function(t3) {
      return e4.apply(this, arguments);
    };
  }() }, { key: "stopRemoteMediaPlayer", value: function() {
    var e4 = a(function* (e5) {
      var t3 = this;
      if ("string" != typeof e5)
        throw new Error(" remotePlayerID must be of type string");
      return new Promise(function() {
        var r3 = a(function* (r4, n2) {
          t3.sendMessageToCallMachine({ action: "daily-method-stop-remote-media-player", session_id: e5 }, function(e6) {
            e6.error ? n2({ error: e6.error, errorMsg: e6.errorMsg }) : r4();
          });
        });
        return function(e6, t4) {
          return r3.apply(this, arguments);
        };
      }());
    });
    return function(t3) {
      return e4.apply(this, arguments);
    };
  }() }, { key: "updateRemoteMediaPlayer", value: function() {
    var e4 = a(function* (e5) {
      var t3 = this, r3 = e5.session_id, n2 = e5.settings;
      try {
        Ss(n2);
      } catch (e6) {
        throw console.error("invalid argument Error: ".concat(e6)), console.error('updateRemoteMediaPlayer arguments must be of the form: \n  session_id: "participant session", \n  { settings?: {state: "play"|"pause"} }'), e6;
      }
      return new Promise(function() {
        var e6 = a(function* (e7, i3) {
          t3.sendMessageToCallMachine({ action: "daily-method-update-remote-media-player", session_id: r3, settings: n2 }, function(t4) {
            t4.error ? i3({ error: t4.error, errorMsg: t4.errorMsg }) : e7({ session_id: t4.session_id, remoteMediaPlayerState: { state: t4.state, settings: t4.settings } });
          });
        });
        return function(t4, r4) {
          return e6.apply(this, arguments);
        };
      }());
    });
    return function(t3) {
      return e4.apply(this, arguments);
    };
  }() }, { key: "startTranscription", value: function(e4) {
    this.sendMessageToCallMachine(Yo({ action: "daily-method-start-transcription" }, e4));
  } }, { key: "stopTranscription", value: function() {
    this.sendMessageToCallMachine({ action: "daily-method-stop-transcription" });
  } }, { key: "getNetworkStats", value: function() {
    var e4 = this;
    if (this._callState !== se) {
      return { stats: { latest: {} } };
    }
    return new Promise(function(t3) {
      e4.sendMessageToCallMachine({ action: "get-calc-stats" }, function(r3) {
        t3(Yo({ stats: r3.stats }, e4._network));
      });
    });
  } }, { key: "getActiveSpeaker", value: function() {
    return gs(), this._activeSpeaker;
  } }, { key: "setActiveSpeakerMode", value: function(e4) {
    return gs(), this.sendMessageToCallMachine({ action: "set-active-speaker-mode", enabled: e4 }), this;
  } }, { key: "activeSpeakerMode", value: function() {
    return gs(), this._activeSpeakerMode;
  } }, { key: "subscribeToTracksAutomatically", value: function() {
    return this._preloadCache.subscribeToTracksAutomatically;
  } }, { key: "setSubscribeToTracksAutomatically", value: function(e4) {
    return ps(this._callState, "setSubscribeToTracksAutomatically()", "Use the subscribeToTracksAutomatically configuration property."), this._preloadCache.subscribeToTracksAutomatically = e4, this.sendMessageToCallMachine({ action: "daily-method-subscribe-to-tracks-automatically", enabled: e4 }), this;
  } }, { key: "enumerateDevices", value: function() {
    var e4 = a(function* () {
      var e5 = this;
      return this._callObjectMode ? { devices: (yield navigator.mediaDevices.enumerateDevices()).map(function(e6) {
        return JSON.parse(JSON.stringify(e6));
      }) } : new Promise(function(t3) {
        e5.sendMessageToCallMachine({ action: "enumerate-devices" }, function(e6) {
          t3({ devices: e6.devices });
        });
      });
    });
    return function() {
      return e4.apply(this, arguments);
    };
  }() }, { key: "sendAppMessage", value: function(e4) {
    var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "*";
    if (JSON.stringify(e4).length > 4096)
      throw new Error("Message data too large. Max size is 4096");
    return this.sendMessageToCallMachine({ action: "app-msg", data: e4, to: t3 }), this;
  } }, { key: "addFakeParticipant", value: function(e4) {
    return gs(), this.sendMessageToCallMachine(Yo({ action: "add-fake-participant" }, e4)), this;
  } }, { key: "setShowNamesMode", value: function(e4) {
    return vs(this._callObjectMode, "setShowNamesMode()"), gs(), e4 && "always" !== e4 && "never" !== e4 ? (console.error('setShowNamesMode argument should be "always", "never", or false'), this) : (this.sendMessageToCallMachine({ action: "set-show-names", mode: e4 }), this);
  } }, { key: "setShowLocalVideo", value: function() {
    var e4 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
    return vs(this._callObjectMode, "setShowLocalVideo()"), gs(), ps(this._callState, "setShowLocalVideo()"), "boolean" != typeof e4 ? (console.error("setShowLocalVideo only accepts a boolean value"), this) : (this.sendMessageToCallMachine({ action: "set-show-local-video", show: e4 }), this._showLocalVideo = e4, this);
  } }, { key: "showLocalVideo", value: function() {
    return vs(this._callObjectMode, "showLocalVideo()"), gs(), this._showLocalVideo;
  } }, { key: "setShowParticipantsBar", value: function() {
    var e4 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
    return vs(this._callObjectMode, "setShowParticipantsBar()"), gs(), ps(this._callState, "setShowParticipantsBar()"), "boolean" != typeof e4 ? (console.error("setShowParticipantsBar only accepts a boolean value"), this) : (this.sendMessageToCallMachine({ action: "set-show-participants-bar", show: e4 }), this._showParticipantsBar = e4, this);
  } }, { key: "showParticipantsBar", value: function() {
    return vs(this._callObjectMode, "showParticipantsBar()"), gs(), this._showParticipantsBar;
  } }, { key: "customTrayButtons", value: function() {
    return vs(this._callObjectMode, "customTrayButtons()"), gs(), this._customTrayButtons;
  } }, { key: "updateCustomTrayButtons", value: function(e4) {
    return vs(this._callObjectMode, "updateCustomTrayButtons()"), gs(), ps(this._callState, "updateCustomTrayButtons()"), Ms(e4) ? (this.sendMessageToCallMachine({ action: "update-custom-tray-buttons", btns: e4 }), this._customTrayButtons = e4, this) : (console.error("updateCustomTrayButtons only accepts a dictionary of the type ".concat(JSON.stringify(ls))), this);
  } }, { key: "theme", value: function() {
    return vs(this._callObjectMode, "theme()"), this.properties.theme;
  } }, { key: "setTheme", value: function(e4) {
    var t3 = this;
    return vs(this._callObjectMode, "setTheme()"), new Promise(function(r3, n2) {
      try {
        t3.validateProperties({ theme: e4 }), t3.properties.theme = Yo({}, e4), t3.sendMessageToCallMachine({ action: "set-theme", theme: t3.properties.theme });
        try {
          t3.emit("theme-updated", { action: "theme-updated", theme: t3.properties.theme });
        } catch (e5) {
          console.log("could not emit 'theme-updated'", e5);
        }
        r3(t3.properties.theme);
      } catch (e5) {
        n2(e5);
      }
    });
  } }, { key: "detectAllFaces", value: function() {
    var e4 = this;
    return gs(), new Promise(function(t3) {
      e4.sendMessageToCallMachine({ action: "detect-all-faces" }, function(e5) {
        delete e5.action, delete e5.callbackStamp, t3(e5);
      });
    });
  } }, { key: "requestFullscreen", value: function() {
    var e4 = a(function* () {
      if (gs(), this._iframe && !document.fullscreenElement && Zt())
        try {
          (yield this._iframe.requestFullscreen) ? this._iframe.requestFullscreen() : this._iframe.webkitRequestFullscreen();
        } catch (e5) {
          console.log("could not make video call fullscreen", e5);
        }
    });
    return function() {
      return e4.apply(this, arguments);
    };
  }() }, { key: "exitFullscreen", value: function() {
    gs(), document.fullscreenElement ? document.exitFullscreen() : document.webkitFullscreenElement && document.webkitExitFullscreen();
  } }, { key: "room", value: function() {
    var e4 = a(function* () {
      var e5 = this, t3 = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).includeRoomConfigDefaults, r3 = void 0 === t3 || t3;
      return this._accessState.access === ge || this.needsLoad() ? this.properties.url ? { roomUrlPendingJoin: this.properties.url } : null : new Promise(function(t4) {
        e5.sendMessageToCallMachine({ action: "lib-room-info", includeRoomConfigDefaults: r3 }, function(e6) {
          delete e6.action, delete e6.callbackStamp, t4(e6);
        });
      });
    });
    return function() {
      return e4.apply(this, arguments);
    };
  }() }, { key: "geo", value: function() {
    var e4 = a(function* () {
      return new Promise(function() {
        var e5 = a(function* (e6) {
          try {
            var t3 = yield fetch("https://gs.daily.co/_ks_/x-swsl/:");
            e6({ current: (yield t3.json()).geo });
          } catch (t4) {
            console.error("geo lookup failed", t4), e6({ current: "" });
          }
        });
        return function(t3) {
          return e5.apply(this, arguments);
        };
      }());
    });
    return function() {
      return e4.apply(this, arguments);
    };
  }() }, { key: "setNetworkTopology", value: function() {
    var e4 = a(function* (e5) {
      var t3 = this;
      return gs(), new Promise(function() {
        var r3 = a(function* (r4, n2) {
          t3.sendMessageToCallMachine({ action: "set-network-topology", opts: e5 }, function(e6) {
            e6.error ? n2({ error: e6.error }) : r4({ workerId: e6.workerId });
          });
        });
        return function(e6, t4) {
          return r3.apply(this, arguments);
        };
      }());
    });
    return function(t3) {
      return e4.apply(this, arguments);
    };
  }() }, { key: "getNetworkTopology", value: function() {
    var e4 = a(function* () {
      var e5 = this;
      return new Promise(function() {
        var t3 = a(function* (t4, r3) {
          e5.sendMessageToCallMachine({ action: "get-network-topology" }, function(e6) {
            e6.error ? r3({ error: e6.error }) : t4({ topology: e6.topology });
          });
        });
        return function(e6, r3) {
          return t3.apply(this, arguments);
        };
      }());
    });
    return function() {
      return e4.apply(this, arguments);
    };
  }() }, { key: "setPlayNewParticipantSound", value: function(e4) {
    if (gs(), "number" != typeof e4 && true !== e4 && false !== e4)
      throw new Error("argument to setShouldPlayNewParticipantSound should be true, false, or a number, but is ".concat(e4));
    this.sendMessageToCallMachine({ action: "daily-method-set-play-ding", arg: e4 });
  } }, { key: "on", value: function(t3, r3) {
    return this._inputEventsOn[t3] = {}, this.sendMessageToCallMachine({ action: "register-input-handler", on: t3 }), import_events.default.prototype.on.call(this, t3, r3);
  } }, { key: "once", value: function(t3, r3) {
    return this._inputEventsOn[t3] = {}, this.sendMessageToCallMachine({ action: "register-input-handler", on: t3 }), import_events.default.prototype.once.call(this, t3, r3);
  } }, { key: "off", value: function(t3, r3) {
    return delete this._inputEventsOn[t3], this.isDestroyed() || this.sendMessageToCallMachine({ action: "register-input-handler", off: t3 }), import_events.default.prototype.off.call(this, t3, r3);
  } }, { key: "validateProperties", value: function(e4) {
    for (var t3 in e4) {
      if (!us[t3])
        throw new Error("unrecognized property '".concat(t3, "'"));
      if (us[t3].validate && !us[t3].validate(e4[t3], this))
        throw new Error("property '".concat(t3, "': ").concat(us[t3].help));
    }
  } }, { key: "assembleMeetingUrl", value: function() {
    var e4 = Yo(Yo({}, this.properties), {}, { emb: this._callFrameId, embHref: encodeURIComponent(window.location.href) }), t3 = e4.url.match(/\?/) ? "&" : "?";
    return e4.url + t3 + Object.keys(us).filter(function(t4) {
      return us[t4].queryString && void 0 !== e4[t4];
    }).map(function(t4) {
      return "".concat(us[t4].queryString, "=").concat(e4[t4]);
    }).join("&");
  } }, { key: "needsLoad", value: function() {
    return [ie, ae, ce, le].includes(this._callState);
  } }, { key: "sendMessageToCallMachine", value: function(e4, t3) {
    if (this._destroyed && (this._logUseAfterDestroy(), this.strictMode))
      throw new Error("Use after destroy");
    this._messageChannel.sendMessageToCallMachine(e4, t3, this._iframe, this._callFrameId);
  } }, { key: "forwardPackagedMessageToCallMachine", value: function(e4) {
    this._messageChannel.forwardPackagedMessageToCallMachine(e4, this._iframe, this._callFrameId);
  } }, { key: "addListenerForPackagedMessagesFromCallMachine", value: function(e4) {
    return this._messageChannel.addListenerForPackagedMessagesFromCallMachine(e4, this._callFrameId);
  } }, { key: "removeListenerForPackagedMessagesFromCallMachine", value: function(e4) {
    this._messageChannel.removeListenerForPackagedMessagesFromCallMachine(e4);
  } }, { key: "handleMessageFromCallMachine", value: function(e4) {
    switch (e4.action) {
      case "iframe-ready-for-launch-config":
        this.sendMessageToCallMachine(Yo({ action: "iframe-launch-config" }, this.properties));
        break;
      case "loaded":
        this._loadedCallback && (this._loadedCallback(), this._loadedCallback = null);
        try {
          this.emit(e4.action, e4);
        } catch (t4) {
          console.log("could not emit", e4, t4);
        }
        break;
      case "joined-meeting":
        this._joinedCallback && (this._joinedCallback(e4.participants), this._joinedCallback = null);
        try {
          this.emit(e4.action, e4);
        } catch (t4) {
          console.log("could not emit", e4, t4);
        }
        break;
      case "participant-joined":
      case "participant-updated":
        if (this._callState === ce)
          return;
        if (e4.participant && e4.participant.session_id) {
          var t3 = e4.participant.local ? "local" : e4.participant.session_id;
          this._callObjectMode && (Go(e4.participant), Ho(e4.participant), Qo(e4.participant, this._participants[t3]));
          try {
            this.maybeParticipantTracksStopped(this._participants[t3], e4.participant), this.maybeParticipantTracksStarted(this._participants[t3], e4.participant), this.maybeEventRecordingStopped(this._participants[t3], e4.participant), this.maybeEventRecordingStarted(this._participants[t3], e4.participant);
          } catch (e5) {
            console.error("track events error", e5);
          }
          if (!this.compareEqualForParticipantUpdateEvent(e4.participant, this._participants[t3])) {
            this._participants[t3] = Yo({}, e4.participant), this.toggleParticipantAudioBasedOnNativeAudioFocus();
            try {
              this.emit(e4.action, e4);
            } catch (t4) {
              console.log("could not emit", e4, t4);
            }
          }
        }
        break;
      case "participant-left":
        if (e4.participant && e4.participant.session_id) {
          var r3 = this._participants[e4.participant.session_id];
          r3 && this.maybeParticipantTracksStopped(r3, null), delete this._participants[e4.participant.session_id];
          try {
            this.emit(e4.action, e4);
          } catch (t4) {
            console.log("could not emit", e4, t4);
          }
        }
        break;
      case "participant-counts-updated":
        if (!W(this._participantCounts, e4.participantCounts)) {
          this._participantCounts = e4.participantCounts;
          try {
            this.emit(e4.action, e4);
          } catch (t4) {
            console.log("could not emit", e4, t4);
          }
        }
        break;
      case "access-state-updated":
        var i3 = { access: e4.access };
        if (e4.awaitingAccess && (i3.awaitingAccess = e4.awaitingAccess), !W(this._accessState, i3)) {
          this._accessState = i3;
          try {
            this.emit(e4.action, e4);
          } catch (t4) {
            console.log("could not emit", e4, t4);
          }
        }
        break;
      case "meeting-session-updated":
        if (e4.meetingSession)
          try {
            delete e4.callFrameId, this.emit(e4.action, e4);
          } catch (t4) {
            console.log("could not emit", e4, t4);
          }
        break;
      case "error":
        this._iframe && !e4.preserveIframe && (this._iframe.src = ""), this._updateCallState(le), this.resetMeetingDependentVars(), this._loadedCallback && (this._loadedCallback(e4.errorMsg), this._loadedCallback = null), this._joinedCallback && (this._joinedCallback(null, e4.errorMsg), this._joinedCallback = null);
        try {
          e4.preserveIframe;
          var a2 = n(e4, ["preserveIframe"]);
          this.emit(e4.action, a2);
        } catch (t4) {
          console.log("could not emit", e4, t4);
        }
        break;
      case "left-meeting":
        this._callState !== le && this._updateCallState(ce), this.resetMeetingDependentVars(), this._resolveLeave && (this._resolveLeave(), this._resolveLeave = null);
        try {
          this.emit(e4.action, e4);
        } catch (t4) {
          console.log("could not emit", e4, t4);
        }
        break;
      case "selected-devices-updated":
        if (e4.devices)
          try {
            this.emit(e4.action, e4);
          } catch (t4) {
            console.log("could not emit", e4, t4);
          }
        break;
      case "network-quality-change":
        var o2 = e4.threshold, s2 = e4.quality;
        if (o2 !== this._network.threshold || s2 !== this._network.quality) {
          this._network.quality = s2, this._network.threshold = o2;
          try {
            this.emit(e4.action, e4);
          } catch (t4) {
            console.log("could not emit", e4, t4);
          }
        }
        break;
      case "active-speaker-change":
        var c2 = e4.activeSpeaker;
        if (this._activeSpeaker.peerId !== c2.peerId) {
          this._activeSpeaker.peerId = c2.peerId;
          try {
            this.emit(e4.action, { action: e4.action, activeSpeaker: this._activeSpeaker });
          } catch (t4) {
            console.log("could not emit", e4, t4);
          }
        }
        break;
      case "show-local-video-changed":
        if (this._callObjectMode)
          return;
        var l2 = e4.show;
        this._showLocalVideo = l2;
        try {
          this.emit(e4.action, { action: e4.action, show: l2 });
        } catch (t4) {
          console.log("could not emit", e4, t4);
        }
        break;
      case "active-speaker-mode-change":
        var u2 = e4.enabled;
        if (this._activeSpeakerMode !== u2) {
          this._activeSpeakerMode = u2;
          try {
            this.emit(e4.action, { action: e4.action, enabled: this._activeSpeakerMode });
          } catch (t4) {
            console.log("could not emit", e4, t4);
          }
        }
        break;
      case "waiting-participant-added":
      case "waiting-participant-updated":
      case "waiting-participant-removed":
        this._waitingParticipants = e4.allWaitingParticipants;
        try {
          this.emit(e4.action, { action: e4.action, participant: e4.participant });
        } catch (t4) {
          console.log("could not emit", e4, t4);
        }
        break;
      case "receive-settings-updated":
        if (!W(this._receiveSettings, e4.receiveSettings)) {
          this._receiveSettings = e4.receiveSettings;
          try {
            this.emit(e4.action, { action: e4.action, receiveSettings: e4.receiveSettings });
          } catch (t4) {
            console.log("could not emit", e4, t4);
          }
        }
        break;
      case "input-settings-updated":
        if (!W(this._inputSettings, e4.inputSettings)) {
          this._inputSettings = e4.inputSettings;
          try {
            this.emit(e4.action, { action: e4.action, inputSettings: e4.inputSettings });
          } catch (t4) {
            console.log("could not emit", e4, t4);
          }
        }
        break;
      case "remote-media-player-started":
        var d2 = e4.session_id;
        this._rmpPlayerState[d2] = e4.playerState, this.emitDailyJSEvent(e4);
        break;
      case "remote-media-player-stopped":
        delete this._rmpPlayerState[e4.session_id], this.emitDailyJSEvent(e4);
        break;
      case "remote-media-player-updated":
        var h2 = e4.session_id, p2 = this._rmpPlayerState[h2];
        p2 && this.compareEqualForRMPUpdateEvent(p2, e4.remoteMediaPlayerState) || (this._rmpPlayerState[h2] = e4.remoteMediaPlayerState, this.emitDailyJSEvent(e4));
        break;
      case "custom-button-click":
        this.emitDailyJSEvent(e4);
        break;
      case "meeting-session-state-updated":
        this._meetingSessionState = e4.meetingSessionState, this.emitDailyJSEvent(e4);
        break;
      case "recording-started":
      case "recording-stopped":
      case "recording-stats":
      case "recording-error":
      case "recording-upload-completed":
      case "transcription-started":
      case "transcription-stopped":
      case "transcription-error":
      case "started-camera":
      case "camera-error":
      case "app-message":
      case "local-screen-share-started":
      case "local-screen-share-stopped":
      case "network-connection":
      case "recording-data":
      case "live-streaming-started":
      case "live-streaming-updated":
      case "live-streaming-stopped":
      case "live-streaming-error":
      case "nonfatal-error":
      case "lang-updated":
        try {
          this.emit(e4.action, e4);
        } catch (t4) {
          console.log("could not emit", e4, t4);
        }
        break;
      case "request-fullscreen":
        this.requestFullscreen();
        break;
      case "request-exit-fullscreen":
        this.exitFullscreen();
    }
  } }, { key: "maybeEventRecordingStopped", value: function(e4, t3) {
    var r3 = "record";
    if (e4 && !t3.local && false === t3[r3] && e4[r3] !== t3[r3])
      try {
        this.emit("recording-stopped", { action: "recording-stopped" });
      } catch (e5) {
        console.log("could not emit", e5);
      }
  } }, { key: "maybeEventRecordingStarted", value: function(e4, t3) {
    var r3 = "record";
    if (e4 && !t3.local && true === t3[r3] && e4[r3] !== t3[r3])
      try {
        this.emit("recording-started", { action: "recording-started" });
      } catch (e5) {
        console.log("could not emit", e5);
      }
  } }, { key: "maybeEventTrackStopped", value: function(e4, t3, r3, n2) {
    if (e4 && ("ended" === e4.readyState || !t3 || e4.id !== t3.id))
      try {
        this.emit("track-stopped", { action: "track-stopped", track: e4, participant: r3, type: n2 });
      } catch (e5) {
        console.log("maybeEventTrackStopped: could not emit", e5);
      }
  } }, { key: "maybeEventTrackStarted", value: function(e4, t3, r3, n2) {
    if (t3 && (!e4 || "ended" === e4.readyState || t3.id !== e4.id))
      try {
        this.emit("track-started", { action: "track-started", track: t3, participant: r3, type: n2 });
      } catch (e5) {
        console.log("maybeEventTrackStarted: could not emit", e5);
      }
  } }, { key: "maybeParticipantTracksStopped", value: function(e4, t3) {
    if (e4)
      for (var r3 in e4.tracks)
        this.maybeEventTrackStopped(e4.tracks[r3].track, t3 && t3.tracks[r3] ? t3.tracks[r3].track : null, t3, r3);
  } }, { key: "maybeParticipantTracksStarted", value: function(e4, t3) {
    if (t3)
      for (var r3 in t3.tracks)
        this.maybeEventTrackStarted(e4 && e4.tracks[r3] ? e4.tracks[r3].track : null, t3.tracks[r3].track, t3, r3);
  } }, { key: "compareEqualForRMPUpdateEvent", value: function(e4, t3) {
    var r3, n2;
    return e4.state === t3.state && (null === (r3 = e4.settings) || void 0 === r3 ? void 0 : r3.volume) === (null === (n2 = t3.settings) || void 0 === n2 ? void 0 : n2.volume);
  } }, { key: "emitDailyJSEvent", value: function(e4) {
    try {
      this.emit(e4.action, e4);
    } catch (t3) {
      console.log("could not emit", e4, t3);
    }
  } }, { key: "compareEqualForParticipantUpdateEvent", value: function(e4, t3) {
    return !!W(e4, t3) && ((!e4.videoTrack || !t3.videoTrack || e4.videoTrack.id === t3.videoTrack.id && e4.videoTrack.muted === t3.videoTrack.muted && e4.videoTrack.enabled === t3.videoTrack.enabled) && (!e4.audioTrack || !t3.audioTrack || e4.audioTrack.id === t3.audioTrack.id && e4.audioTrack.muted === t3.audioTrack.muted && e4.audioTrack.enabled === t3.audioTrack.enabled));
  } }, { key: "nativeUtils", value: function() {
    return Qt() ? "undefined" == typeof DailyNativeUtils ? (console.warn("in React Native, DailyNativeUtils is expected to be available"), null) : DailyNativeUtils : null;
  } }, { key: "updateIsPreparingToJoin", value: function(e4) {
    this._updateCallState(this._callState, e4);
  } }, { key: "_updateCallState", value: function(e4) {
    var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._isPreparingToJoin;
    if (e4 !== this._callState || t3 !== this._isPreparingToJoin) {
      var r3 = this._callState, n2 = this._isPreparingToJoin;
      this._callState = e4, this._isPreparingToJoin = t3;
      var i3 = this._isCallPendingOrOngoing(r3, n2), a2 = this._isCallPendingOrOngoing(this._callState, this._isPreparingToJoin);
      i3 !== a2 && (this.updateKeepDeviceAwake(a2), this.updateDeviceAudioMode(a2), this.updateShowAndroidOngoingMeetingNotification(a2), this.updateNoOpRecordingEnsuringBackgroundContinuity(a2));
    }
  } }, { key: "resetMeetingDependentVars", value: function() {
    this._participants = {}, this._participantCounts = as, this._waitingParticipants = {}, this._activeSpeaker = {}, this._activeSpeakerMode = false, this._didPreAuth = false, this._accessState = { access: ge }, this._meetingSessionState = is, this._receiveSettings = {}, this._inputSettings = {}, this._preloadCache;
  } }, { key: "updateKeepDeviceAwake", value: function(e4) {
    Qt() && this.nativeUtils().setKeepDeviceAwake(e4, this._callFrameId);
  } }, { key: "updateDeviceAudioMode", value: function(e4) {
    if (Qt() && !this.disableReactNativeAutoDeviceManagement("audio")) {
      var t3 = e4 ? this._nativeInCallAudioMode : "idle";
      this.nativeUtils().setAudioMode(t3);
    }
  } }, { key: "updateShowAndroidOngoingMeetingNotification", value: function(e4) {
    if (Qt() && this.nativeUtils().setShowOngoingMeetingNotification) {
      var t3, r3, n2, i3;
      if (this.properties.reactNativeConfig && this.properties.reactNativeConfig.androidInCallNotification) {
        var a2 = this.properties.reactNativeConfig.androidInCallNotification;
        t3 = a2.title, r3 = a2.subtitle, n2 = a2.iconName, i3 = a2.disableForCustomOverride;
      }
      i3 && (e4 = false), this.nativeUtils().setShowOngoingMeetingNotification(e4, t3, r3, n2, this._callFrameId);
    }
  } }, { key: "updateNoOpRecordingEnsuringBackgroundContinuity", value: function(e4) {
    Qt() && this.nativeUtils().enableNoOpRecordingEnsuringBackgroundContinuity && this.nativeUtils().enableNoOpRecordingEnsuringBackgroundContinuity(e4);
  } }, { key: "_isCallPendingOrOngoing", value: function(e4, t3) {
    return [oe, se].includes(e4) || t3;
  } }, { key: "toggleParticipantAudioBasedOnNativeAudioFocus", value: function() {
    if (Qt()) {
      var e4 = store.getState();
      for (var t3 in e4.streams) {
        var r3 = e4.streams[t3];
        r3 && r3.pendingTrack && "audio" === r3.pendingTrack.kind && (r3.pendingTrack.enabled = this._hasNativeAudioFocus);
      }
    }
  } }, { key: "disableReactNativeAutoDeviceManagement", value: function(e4) {
    return this.properties.reactNativeConfig && this.properties.reactNativeConfig.disableAutoDeviceManagement && this.properties.reactNativeConfig.disableAutoDeviceManagement[e4];
  } }, { key: "absoluteUrl", value: function(e4) {
    if (void 0 !== e4) {
      var t3 = document.createElement("a");
      return t3.href = e4, t3.href;
    }
  } }, { key: "sayHello", value: function() {
    var e4 = "hello, world.";
    return console.log(e4), e4;
  } }, { key: "_logUseAfterDestroy", value: function() {
    if (this.needsLoad()) {
      if (xo && !xo.needsLoad()) {
        var e4 = { action: "transmit-log", level: "error", code: this.strictMode ? 9995 : 9996 };
        xo.sendMessageToCallMachine(e4);
      } else if (!this.strictMode) {
        console.error("You are attempting to use a call instance that was previously destroyed. This is unsupported and will not be allowed beginning in 0.42.0. Add `strictMode: true` to your call frame constructor properties to debug and catch the error now.");
      }
    } else {
      var t3 = { action: "transmit-log", level: "error", code: this.strictMode ? 9995 : 9996 };
      this._messageChannel.sendMessageToCallMachine(t3, null, this._iframe, this._callFrameId);
    }
  } }, { key: "_logDuplicateInstanceAttempt", value: function() {
    if (xo.needsLoad()) {
      if (!this.strictMode) {
        console.error("Duplicate call object instances detected. Please ensure the previous instance has been destroyed before creating a new one. This is unsupported and will result in unknown errors. This will not be allowed beginning in 0.42.0. Add `strictMode: true` to your call frame constructor properties to debug and catch the error now.");
      }
    } else
      xo.sendMessageToCallMachine({ action: "transmit-log", level: "error", code: this.strictMode ? 9990 : 9991 });
  } }]), i2;
}();
export {
  me as DAILY_ACCESS_LEVEL_FULL,
  ye as DAILY_ACCESS_LEVEL_LOBBY,
  be as DAILY_ACCESS_LEVEL_NONE,
  ge as DAILY_ACCESS_UNKNOWN,
  Ee as DAILY_CAMERA_ERROR_CAM_AND_MIC_IN_USE,
  Ae as DAILY_CAMERA_ERROR_CAM_IN_USE,
  Be as DAILY_CAMERA_ERROR_CONSTRAINTS,
  Fe as DAILY_CAMERA_ERROR_MIC_IN_USE,
  De as DAILY_CAMERA_ERROR_NOT_FOUND,
  Ie as DAILY_CAMERA_ERROR_PERMISSIONS,
  Le as DAILY_CAMERA_ERROR_UNDEF_MEDIADEVICES,
  Ne as DAILY_CAMERA_ERROR_UNKNOWN,
  et as DAILY_EVENT_ACCESS_STATE_UPDATED,
  St as DAILY_EVENT_ACTIVE_SPEAKER_CHANGE,
  Ct as DAILY_EVENT_ACTIVE_SPEAKER_MODE_CHANGE,
  yt as DAILY_EVENT_APP_MSG,
  We as DAILY_EVENT_CAMERA_ERROR,
  xt as DAILY_EVENT_ERROR,
  Pt as DAILY_EVENT_EXIT_FULLSCREEN,
  jt as DAILY_EVENT_FULLSCREEN,
  Re as DAILY_EVENT_IFRAME_LAUNCH_CONFIG,
  xe as DAILY_EVENT_IFRAME_READY_FOR_LAUNCH_CONFIG,
  Bt as DAILY_EVENT_INPUT_SETTINGS_UPDATED,
  He as DAILY_EVENT_JOINED_MEETING,
  Ge as DAILY_EVENT_JOINING_MEETING,
  Lt as DAILY_EVENT_LANG_UPDATED,
  Ke as DAILY_EVENT_LEFT_MEETING,
  It as DAILY_EVENT_LIVE_STREAMING_ERROR,
  At as DAILY_EVENT_LIVE_STREAMING_STARTED,
  Et as DAILY_EVENT_LIVE_STREAMING_STOPPED,
  Ft as DAILY_EVENT_LIVE_STREAMING_UPDATED,
  Je as DAILY_EVENT_LOADED,
  Ue as DAILY_EVENT_LOADING,
  ze as DAILY_EVENT_LOAD_ATTEMPT_FAILED,
  kt as DAILY_EVENT_LOCAL_SCREEN_SHARE_STARTED,
  Mt as DAILY_EVENT_LOCAL_SCREEN_SHARE_STOPPED,
  nt as DAILY_EVENT_MEETING_SESSION_DATA_ERROR,
  rt as DAILY_EVENT_MEETING_SESSION_STATE_UPDATED,
  tt as DAILY_EVENT_MEETING_SESSION_UPDATED,
  Ot as DAILY_EVENT_NETWORK_CONNECTION,
  Tt as DAILY_EVENT_NETWORK_QUALITY_CHANGE,
  Nt as DAILY_EVENT_NONFATAL_ERROR,
  Xe as DAILY_EVENT_PARTICIPANT_COUNTS_UPDATED,
  $e as DAILY_EVENT_PARTICIPANT_JOINED,
  Ze as DAILY_EVENT_PARTICIPANT_LEFT,
  Ye as DAILY_EVENT_PARTICIPANT_UPDATED,
  Dt as DAILY_EVENT_RECEIVE_SETTINGS_UPDATED,
  mt as DAILY_EVENT_RECORDING_DATA,
  vt as DAILY_EVENT_RECORDING_ERROR,
  ht as DAILY_EVENT_RECORDING_STARTED,
  ft as DAILY_EVENT_RECORDING_STATS,
  pt as DAILY_EVENT_RECORDING_STOPPED,
  gt as DAILY_EVENT_RECORDING_UPLOAD_COMPLETED,
  bt as DAILY_EVENT_REMOTE_MEDIA_PLAYER_STARTED,
  _t as DAILY_EVENT_REMOTE_MEDIA_PLAYER_STOPPED,
  wt as DAILY_EVENT_REMOTE_MEDIA_PLAYER_UPDATED,
  qe as DAILY_EVENT_STARTED_CAMERA,
  Ve as DAILY_EVENT_THEME_UPDATED,
  st as DAILY_EVENT_TRACK_STARTED,
  ct as DAILY_EVENT_TRACK_STOPPED,
  dt as DAILY_EVENT_TRANSCRIPTION_ERROR,
  lt as DAILY_EVENT_TRANSCRIPTION_STARTED,
  ut as DAILY_EVENT_TRANSCRIPTION_STOPPED,
  it as DAILY_EVENT_WAITING_PARTICIPANT_ADDED,
  ot as DAILY_EVENT_WAITING_PARTICIPANT_REMOVED,
  at as DAILY_EVENT_WAITING_PARTICIPANT_UPDATED,
  ke as DAILY_FATAL_ERROR_EJECTED,
  je as DAILY_FATAL_ERROR_EOL,
  Ce as DAILY_FATAL_ERROR_EXP_ROOM,
  Te as DAILY_FATAL_ERROR_EXP_TOKEN,
  Oe as DAILY_FATAL_ERROR_MEETING_FULL,
  Me as DAILY_FATAL_ERROR_NBF_ROOM,
  Se as DAILY_FATAL_ERROR_NBF_TOKEN,
  Pe as DAILY_FATAL_ERROR_NOT_ALLOWED,
  _e as DAILY_RECEIVE_SETTINGS_ALL_PARTICIPANTS_KEY,
  we as DAILY_RECEIVE_SETTINGS_BASE_KEY,
  le as DAILY_STATE_ERROR,
  se as DAILY_STATE_JOINED,
  oe as DAILY_STATE_JOINING,
  ce as DAILY_STATE_LEFT,
  ie as DAILY_STATE_NEW,
  ue as DAILY_TRACK_STATE_BLOCKED,
  fe as DAILY_TRACK_STATE_INTERRUPTED,
  pe as DAILY_TRACK_STATE_LOADING,
  de as DAILY_TRACK_STATE_OFF,
  ve as DAILY_TRACK_STATE_PLAYABLE,
  he as DAILY_TRACK_STATE_SENDABLE,
  daily_iframe_esm_default as default
};
//# sourceMappingURL=@daily-co_daily-js.js.map
